/**
 * @file table/BodyRow
 * @author fex
 */
import React from 'react';
import { ThemeProps } from 'amis-core';
import { ColumnProps, TdProps } from './index';
export interface Props extends ThemeProps {
    data: any;
    rowIndex: number;
    columns: ColumnProps[];
    expandable: boolean;
    expandableFixed?: boolean;
    indentSize: number;
    lineHeight?: string;
    keyField?: string;
    draggable: boolean;
    levels: string;
    isExpandable: boolean;
    isExpandableRow: boolean;
    colCount: number;
    isRightExpandable?: boolean;
    isLeftExpandable?: boolean;
    isChecked: boolean;
    rowClassName?: Function;
    onExpand?: Function;
    onCollapse?: Function;
    onMouseEnter: Function;
    onMouseLeave: Function;
    onClick: Function;
    onDoubleClick: Function;
    onChange: Function;
    childrenColumnName: string;
    selectable: boolean;
    rowSelectionFixed?: boolean;
    rowSelectionType?: 'radio' | 'checkbox';
    hasChildrenRow: boolean;
    hasChildrenChecked: boolean;
    expandedRowClassName: string;
    expandedRowRender?: Function;
    isExpanded: boolean;
    [propName: string]: any;
}
export default class BodyRow extends React.PureComponent<Props> {
    domRef: React.RefObject<HTMLTableRowElement>;
    tdColumns: Array<TdProps>;
    onExpand(): void;
    onCollapse(): void;
    onMouseEnter(event: React.ChangeEvent<any>, record?: any, rowIndex?: number): void;
    onMouseLeave(event: React.ChangeEvent<any>, record?: any, rowIndex?: number): void;
    onClick(event: React.ChangeEvent<any>, record?: any, rowIndex?: number): void;
    onDoubleClick(event: React.ChangeEvent<any>, record?: any, rowIndex?: number): void;
    getExpandedIcons(): React.JSX.Element;
    prependColumns(columns: Array<any>): void;
    updateFixedRow(): void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    onCheckChange(value: boolean): void;
    render(): (React.JSX.Element | null)[];
}
