{
  "version": 3,
  "sources": ["../../office-viewer/esm/OpenXML.js", "../../office-viewer/esm/openxml/word/Font.js", "../../office-viewer/esm/openxml/word/FontTable.js", "../../office-viewer/esm/parse/parseRelationship.js", "../../office-viewer/esm/openxml/ContentType.js", "../../office-viewer/esm/parse/parseSize.js", "../../office-viewer/esm/parse/parseCellMargin.js", "../../office-viewer/esm/parse/colorNameMap.js", "../../office-viewer/esm/parse/parseColor.js", "../../office-viewer/esm/parse/parseBorder.js", "../../office-viewer/esm/parse/parseTextDirection.js", "../../office-viewer/esm/parse/parseTblWidth.js", "../../office-viewer/esm/parse/parseInsideBorders.js", "../../office-viewer/esm/parse/parseTcPr.js", "../../office-viewer/esm/util/color.js", "../../office-viewer/esm/parse/modifyColor.js", "../../office-viewer/esm/parse/parseChildColor.js", "../../office-viewer/esm/parse/parseInd.js", "../../office-viewer/esm/parse/parseSpacing.js", "../../office-viewer/esm/parse/parseFont.js", "../../office-viewer/esm/parse/parseTrHeight.js", "../../office-viewer/esm/parse/jcToTextAlign.js", "../../office-viewer/esm/parse/parsePr.js", "../../office-viewer/esm/openxml/word/Bookmark.js", "../../office-viewer/esm/openxml/word/Break.js", "../../office-viewer/esm/openxml/drawing/Blip.js", "../../office-viewer/esm/openxml/drawing/BlipFill.js", "../../office-viewer/esm/openxml/drawing/Transform.js", "../../office-viewer/esm/parse/parseShape.js", "../../office-viewer/esm/openxml/drawing/Geom.js", "../../office-viewer/esm/openxml/drawing/CustomGeom.js", "../../office-viewer/esm/openxml/drawing/ShapeProperties.js", "../../office-viewer/esm/openxml/drawing/Pic.js", "../../office-viewer/esm/openxml/word/Table.js", "../../office-viewer/esm/openxml/word/table/Tr.js", "../../office-viewer/esm/openxml/word/table/Tc.js", "../../office-viewer/esm/parse/parseTc.js", "../../office-viewer/esm/parse/parseTablePr.js", "../../office-viewer/esm/parse/parseTrPr.js", "../../office-viewer/esm/parse/mergeSdt.js", "../../office-viewer/esm/parse/parseTr.js", "../../office-viewer/esm/parse/parseTable.js", "../../office-viewer/esm/openxml/word/wps/WPSStyle.js", "../../office-viewer/esm/openxml/word/wps/WPS.js", "../../office-viewer/esm/openxml/drawing/diagram/Diagram.js", "../../office-viewer/esm/openxml/word/wps/WPG.js", "../../office-viewer/esm/openxml/drawing/Drawing.js", "../../office-viewer/esm/openxml/word/InstrText.js", "../../office-viewer/esm/openxml/word/NoBreakHyphen.js", "../../office-viewer/esm/openxml/word/Pict.js", "../../office-viewer/esm/openxml/word/Ruby.js", "../../office-viewer/esm/openxml/word/Separator.js", "../../office-viewer/esm/openxml/word/SoftHyphen.js", "../../office-viewer/esm/openxml/word/Sym.js", "../../office-viewer/esm/openxml/word/Tab.js", "../../office-viewer/esm/openxml/word/Run.js", "../../office-viewer/esm/openxml/word/Hyperlink.js", "../../office-viewer/esm/openxml/word/numbering/NumberProperties.js", "../../office-viewer/esm/openxml/word/InlineText.js", "../../office-viewer/esm/openxml/word/FldSimple.js", "../../office-viewer/esm/openxml/math/OMath.js", "../../office-viewer/esm/openxml/word/Paragraph.js", "../../office-viewer/esm/openxml/Style.js", "../../office-viewer/esm/openxml/Theme.js", "../../office-viewer/esm/util/dom.js", "../../office-viewer/esm/render/renderBr.js", "../../office-viewer/esm/render/renderStyle.js", "../../office-viewer/esm/render/setElementStyle.js", "../../office-viewer/esm/render/renderTable.js", "../../office-viewer/esm/openxml/drawing/presetShape.js", "../../office-viewer/esm/openxml/drawing/svg/formulas.js", "../../office-viewer/esm/openxml/drawing/svg/arcToA.js", "../../office-viewer/esm/openxml/drawing/svg/generateDefines.js", "../../office-viewer/esm/openxml/drawing/svg/presetVal.js", "../../office-viewer/esm/openxml/drawing/svg/shapeToSVG.js", "../../office-viewer/esm/render/renderGeom.js", "../../office-viewer/esm/render/renderCustGeom.js", "../../office-viewer/esm/render/renderDrawing.js", "../../office-viewer/esm/render/renderTab.js", "../../office-viewer/esm/render/renderPict.js", "../../office-viewer/esm/render/renderRuby.js", "../../office-viewer/esm/render/renderHyperLink.js", "../../office-viewer/esm/render/renderBookmark.js", "../../office-viewer/esm/render/renderInlineText.js", "../../office-viewer/esm/render/renderInstrText.js", "../../office-viewer/esm/render/renderSym.js", "../../office-viewer/esm/util/autoSpace.js", "../../office-viewer/esm/render/renderSoftHyphen.js", "../../office-viewer/esm/render/renderNoBreakHyphen.js", "../../office-viewer/esm/render/renderSeparator.js", "../../office-viewer/esm/render/renderRun.js", "../../office-viewer/esm/render/renderNumbering.js", "../../office-viewer/esm/util/xml.js", "../../office-viewer/esm/openxml/math/xsl.js", "../../office-viewer/esm/openxml/math/convertOOML.js", "../../office-viewer/esm/render/renderMath.js", "../../office-viewer/esm/render/renderParagraph.js", "../../office-viewer/esm/render/renderHeader.js", "../../office-viewer/esm/render/renderSection.js", "../../office-viewer/esm/render/renderBody.js", "../../office-viewer/esm/render/renderDocument.js", "../../office-viewer/esm/util/blob.js", "../../office-viewer/esm/openxml/word/numbering/Lvl.js", "../../office-viewer/esm/openxml/word/numbering/AbstractNum.js", "../../office-viewer/esm/openxml/word/numbering/Num.js", "../../office-viewer/esm/openxml/word/numbering/Numbering.js", "../../office-viewer/esm/util/mergeRun.js", "../../office-viewer/esm/openxml/word/Header.js", "../../office-viewer/esm/openxml/word/Section.js", "../../office-viewer/esm/openxml/word/Body.js", "../../office-viewer/esm/openxml/word/WDocument.js", "../../fflate/esm/browser.js", "../../office-viewer/esm/package/ZipPackageParser.js", "../../office-viewer/esm/render/renderFont.js", "../../office-viewer/esm/util/createObject.js", "../../office-viewer/esm/util/replaceVar.js", "../../office-viewer/esm/openxml/word/Note.js", "../../office-viewer/esm/parse/Footnotes.js", "../../office-viewer/esm/parse/parseEndnotes.js", "../../office-viewer/esm/render/renderNotes.js", "../../office-viewer/esm/util/print.js", "../../office-viewer/esm/openxml/Settings.js", "../../office-viewer/esm/util/get.js", "../../office-viewer/esm/util/fileType.js", "../../office-viewer/esm/Word.js", "../../office-viewer/esm/index.js"],
  "sourcesContent": ["/**\n * openxml 一些辅助函数\n */\n/**\n * 获取 w:val 的值\n */\nfunction getVal(element) {\n    return (element.getAttribute('w:val') ||\n        element.getAttribute('w14:val') ||\n        element.getAttribute('val') ||\n        '');\n}\n/**\n * 获取 w:val 的值，转成 number 类型\n */\nfunction getValNumber(element) {\n    return parseInt(getVal(element), 10);\n}\n/**\n * 有可能是 on 或 off 之类的值，都归一化为 boolean\n * @param value\n * @param defaultValue 默认值\n * @returns\n */\nfunction normalizeBoolean(value, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = false; }\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    if (typeof value === 'string') {\n        switch (value) {\n            case '1':\n                return true;\n            case '0':\n                return false;\n            case 'on':\n                return true;\n            case 'off':\n                return false;\n            case 'true':\n                return true;\n            case 'false':\n                return false;\n        }\n        if (typeof value === 'number') {\n            return value !== 0;\n        }\n    }\n    return defaultValue;\n}\nfunction getValBoolean(element, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = true; }\n    return normalizeBoolean(getVal(element), defaultValue);\n}\nfunction getAttrBoolean(element, attr, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = true; }\n    return normalizeBoolean(element.getAttribute(attr), defaultValue);\n}\n/**\n * 获取属性值，转成数字\n *\n * @param attr 属性名\n * @param defaultValue 默认值\n * @returns 解析后的数字\n */\nfunction getAttrNumber(element, attr, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = 0; }\n    var value = element.getAttribute(attr);\n    if (value) {\n        return parseInt(value, 10);\n    }\n    else {\n        return defaultValue;\n    }\n}\n/**\n * 获取百分比值，没测过\n * http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/ST_Percentage.html\n * https://c-rex.net/projects/samples/ooxml/e1/Part4/OOXML_P4_DOCX_ST_Percentage_topic_ID0EY3XNB.html#topic_ID0EY3XNB\n *\n * @returns 0-1 之间的小数\n */\nfunction getAttrPercent(element, attr) {\n    var value = element.getAttribute(attr);\n    if (value) {\n        if (value.endsWith('%')) {\n            return parseInt(value, 10) / 100;\n        }\n        var num = parseInt(value, 10);\n        return num / 100000;\n    }\n    return 1;\n}\n/**\n * 获取属性的 hex 值\n */\nfunction getValHex(element) {\n    return parseInt(getVal(element) || '0', 16);\n}\n\nexport { getAttrBoolean, getAttrNumber, getAttrPercent, getVal, getValBoolean, getValHex, getValNumber, normalizeBoolean };\n", "import { __values } from 'tslib';\nimport { getVal } from '../../OpenXML.js';\n\n/**\n * 内嵌字体\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/Font%20Embedding.html\n */\n/**\n * 这是来自 docxjs 里的代码，参考了规范 17.8.1 里的算法\n */\nfunction deobfuscate(data, guidKey) {\n    var len = 16;\n    var trimmed = guidKey.replace(/{|}|-/g, '');\n    var numbers = new Array(len);\n    for (var i = 0; i < len; i++)\n        numbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\n    for (var i = 0; i < 32; i++)\n        data[i] = data[i] ^ numbers[i % len];\n    return data;\n}\nvar Font = /** @class */ (function () {\n    function Font() {\n    }\n    Font.fromXML = function (word, element) {\n        var e_1, _a;\n        var font = new Font();\n        font.name = element.getAttribute('w:name') || '';\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:family':\n                        font.family = getVal(child);\n                        break;\n                    case 'w:altName':\n                        font.altName = getVal(child);\n                        break;\n                    case 'w:panose1':\n                        // 不知道是啥\n                        // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/panose1.html\n                        break;\n                    case 'w:charset':\n                    case 'w:sig':\n                    case 'w:pitch':\n                        // 用不上\n                        break;\n                    case 'w:embedRegular':\n                    case 'w:embedBold':\n                    case 'w:embedItalic':\n                    case 'w:embedBoldItalic':\n                    case 'w:embedSystemFonts':\n                    case 'w:embedTrueTypeFonts':\n                        var id = child.getAttribute('r:id') || '';\n                        var fontKey = child.getAttribute('w:fontKey') || '';\n                        var fontURL = word.loadFont(id, fontKey);\n                        if (fontURL) {\n                            font.url = fontURL;\n                        }\n                        break;\n                    default:\n                        console.warn('parse Font: Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return font;\n    };\n    return Font;\n}());\n\nexport { Font, deobfuscate };\n", "import { __values } from 'tslib';\nimport { Font } from './Font.js';\n\n/**\n * 解析和渲染字体\n */\nvar FontTable = /** @class */ (function () {\n    function FontTable() {\n        this.fonts = [];\n    }\n    FontTable.fromXML = function (word, doc) {\n        var e_1, _a;\n        var fonts = Array.from(doc.getElementsByTagName('w:font'));\n        var fontTable = new FontTable();\n        try {\n            for (var fonts_1 = __values(fonts), fonts_1_1 = fonts_1.next(); !fonts_1_1.done; fonts_1_1 = fonts_1.next()) {\n                var child = fonts_1_1.value;\n                var font = Font.fromXML(word, child);\n                fontTable.fonts.push(font);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (fonts_1_1 && !fonts_1_1.done && (_a = fonts_1.return)) _a.call(fonts_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return fontTable;\n    };\n    return FontTable;\n}());\n\nexport { FontTable };\n", "import { __values } from 'tslib';\n\n/**\n * 解析 _rels/.rels 文件\n */\nfunction parseRelationship(element, part) {\n    var id = element.getAttribute('Id') || '';\n    var type = element.getAttribute('Type') || '';\n    var target = element.getAttribute('Target') || '';\n    var targetMode = element.getAttribute('TargetMode') || '';\n    return {\n        id: id,\n        type: type,\n        target: target,\n        targetMode: targetMode,\n        part: part\n    };\n}\nfunction parseRelationships(element, part) {\n    var e_1, _a;\n    var relationships = {};\n    var relationshipElements = element.getElementsByTagName('Relationship');\n    try {\n        for (var relationshipElements_1 = __values(relationshipElements), relationshipElements_1_1 = relationshipElements_1.next(); !relationshipElements_1_1.done; relationshipElements_1_1 = relationshipElements_1.next()) {\n            var relationshipElement = relationshipElements_1_1.value;\n            var relationship = parseRelationship(relationshipElement, part);\n            relationships[relationship.id] = relationship;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (relationshipElements_1_1 && !relationshipElements_1_1.done && (_a = relationshipElements_1.return)) _a.call(relationshipElements_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return relationships;\n}\n\nexport { parseRelationship, parseRelationships };\n", "import { __values } from 'tslib';\n\n/**\n * 解析 [Content_Types].xml\n */\nfunction parseContentType(doc) {\n    var e_1, _a;\n    var types = { overrides: [] };\n    var overrides = [].slice.call(doc.getElementsByTagName('Override'));\n    try {\n        for (var overrides_1 = __values(overrides), overrides_1_1 = overrides_1.next(); !overrides_1_1.done; overrides_1_1 = overrides_1.next()) {\n            var item = overrides_1_1.value;\n            types.overrides.push({\n                partName: item.getAttribute('PartName'),\n                contentType: item.getAttribute('ContentType')\n            });\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (overrides_1_1 && !overrides_1_1.done && (_a = overrides_1.return)) _a.call(overrides_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return types;\n}\n\nexport { parseContentType };\n", "/**\n * 单位相关的解析，参考了 docxjs 里的实现\n */\n/**\n * 单位转成 px，这样才能和 svg 里的一致\n */\nvar ptToPx = 1.3333;\nvar LengthUsage = {\n    Dxa: { mul: ptToPx * 0.05, unit: 'px' },\n    Emu: { mul: (ptToPx * 1) / 12700, unit: 'px' },\n    FontSize: { mul: ptToPx * 0.5, unit: 'px' },\n    Border: { mul: ptToPx * 0.125, unit: 'px' },\n    Point: { mul: ptToPx * 1, unit: 'px' },\n    Percent: { mul: 0.02, unit: '%' },\n    LineHeight: { mul: 1 / 240, unit: '' },\n    VmlEmu: { mul: 1 / 12700, unit: '' }\n};\nfunction convertLength(val, usage) {\n    if (usage === void 0) { usage = LengthUsage.Dxa; }\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\n        return val;\n    }\n    return \"\".concat((parseInt(val) * usage.mul).toFixed(2)).concat(usage.unit);\n}\nfunction convertAngle(val) {\n    return val ? parseInt(val) / 60000 : 0;\n}\n/**\n * 解析尺寸，返回 css 值\n *\n * @param element 节点\n * @param attrName 属性名\n * @param usage 类型\n */\nfunction parseSize(element, attrName, usage) {\n    if (usage === void 0) { usage = LengthUsage.Dxa; }\n    var size = element.getAttribute(attrName);\n    if (size) {\n        return convertLength(String(size), usage);\n    }\n    return '';\n}\n\nexport { LengthUsage, convertAngle, convertLength, parseSize };\n", "import { __values } from 'tslib';\nimport { parseSize } from './parseSize.js';\n\n// http://officeopenxml.com/WPtableCellProperties-Margins.php\nfunction parseCellMargin(element, style) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:left':\n                case 'w:start':\n                    style['padding-left'] = parseSize(child, 'w:w');\n                    break;\n                case 'w:right':\n                case 'w:end':\n                    style['padding-right'] = parseSize(child, 'w:w');\n                    break;\n                case 'w:top':\n                    style['padding-top'] = parseSize(child, 'w:w');\n                    break;\n                case 'w:bottom':\n                    style['padding-bottom'] = parseSize(child, 'w:w');\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n\nexport { parseCellMargin };\n", "/**\n * 内置颜色\n * 参考了 pptxjs 里的例子，并补充了 ST_PresetColorVal 里缺失的定义\n */\nvar PresetColorMap = {\n    aliceBlue: '#f0f8ff',\n    antiqueWhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedAlmond: '#ffebcd',\n    blue: '#0000ff',\n    blueViolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlyWood: '#deb887',\n    cadetBlue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerBlue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00FFFF',\n    darkBlue: '#00008B',\n    dkBlue: '#00008B',\n    darkCyan: '#008B8B',\n    dkCyan: '#008B8B',\n    darkGoldenrod: '#b8860b',\n    dkGoldenrod: '#b8860b',\n    darkGray: '#A9A9A9',\n    dkGray: '#A9A9A9',\n    darkGreen: '#006400',\n    dkGreen: '#006400',\n    darkGrey: '#a9a9a9',\n    dkGrey: '#a9a9a9',\n    darkKhaki: '#bdb76b',\n    dkKhaki: '#bdb76b',\n    darkMagenta: '#800080',\n    dkMagenta: '#800080',\n    darkOliveGreen: '#556b2f',\n    dkOliveGreen: '#556b2f',\n    darkOrange: '#ff8c00',\n    dkOrange: '#ff8c00',\n    darkOrchid: '#9932cc',\n    dkOrchid: '#9932cc',\n    darkRed: '#8B0000',\n    dkRed: '#8B0000',\n    darkSalmon: '#e9967a',\n    dkSalmon: '#e9967a',\n    darkSeaGreen: '#8fbc8f',\n    dkSeaGreen: '#8fbc8f',\n    darkSlateBlue: '#483d8b',\n    dkSlateBlue: '#483d8b',\n    darkSlateGray: '#2f4f4f',\n    dkSlateGray: '#2f4f4f',\n    darkSlateGrey: '#2f4f4f',\n    dkSlateGrey: '#2f4f4f',\n    darkTurquoise: '#00ced1',\n    dkTurquoise: '#00ced1',\n    darkViolet: '#9400d3',\n    dkViolet: '#9400d3',\n    darkYellow: '#808000',\n    deepPink: '#ff1493',\n    deepSkyBlue: '#00bfff',\n    dimGray: '#696969',\n    dimGrey: '#696969',\n    dodgerBlue: '#1e90ff',\n    firebrick: '#b22222',\n    floralWhite: '#fffaf0',\n    forestGreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostWhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenYellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotPink: '#ff69b4',\n    indianRed: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderBlush: '#fff0f5',\n    lawnGreen: '#7cfc00',\n    lemonChiffon: '#fffacd',\n    lightBlue: '#add8e6',\n    ltBlue: '#add8e6',\n    lightCoral: '#f08080',\n    ltCoral: '#f08080',\n    lightCyan: '#e0ffff',\n    ltCyan: '#e0ffff',\n    lightGoldenrodYellow: '#fafad2',\n    ltGoldenrodYellow: '#fafad2',\n    lightGray: '#D3D3D3',\n    ltGray: '#D3D3D3',\n    lightGreen: '#90ee90',\n    ltGreen: '#90ee90',\n    lightGrey: '#d3d3d3',\n    ltGrey: '#d3d3d3',\n    lightPink: '#ffb6c1',\n    ltPink: '#ffb6c1',\n    lightSalmon: '#ffa07a',\n    ltSalmon: '#ffa07a',\n    lightSeaGreen: '#20b2aa',\n    ltSeaGreen: '#20b2aa',\n    lightSkyBlue: '#87cefa',\n    ltSkyBlue: '#87cefa',\n    lightSlateGray: '#778899',\n    ltSlateGray: '#778899',\n    lightSlateGrey: '#778899',\n    ltSlateGrey: '#778899',\n    lightSteelBlue: '#b0c4de',\n    ltSteelBlue: '#b0c4de',\n    lightYellow: '#ffffe0',\n    ltYellow: '#ffffe0',\n    lime: '#00ff00',\n    limeGreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#FF00FF',\n    maroon: '#800000',\n    mediumAquamarine: '#66cdaa',\n    medAquamarine: '#66cdaa',\n    mediumBlue: '#0000cd',\n    medBlue: '#0000cd',\n    mediumOrchid: '#ba55d3',\n    medOrchid: '#ba55d3',\n    mediumPurple: '#9370db',\n    medPurple: '#9370db',\n    mediumSeaGreen: '#3cb371',\n    medSeaGreen: '#3cb371',\n    mediumSlateBlue: '#7b68ee',\n    medSlateBlue: '#7b68ee',\n    mediumSpringGreen: '#00fa9a',\n    medSpringGreen: '#00fa9a',\n    mediumTurquoise: '#48d1cc',\n    medTurquoise: '#48d1cc',\n    mediumVioletRed: '#c71585',\n    medVioletRed: '#c71585',\n    midnightBlue: '#191970',\n    mintCream: '#f5fffa',\n    mistyRose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajoWhite: '#ffdead',\n    navy: '#000080',\n    none: 'transparent',\n    oldLace: '#fdf5e6',\n    olive: '#808000',\n    oliveDrab: '#6b8e23',\n    orange: '#ffa500',\n    orangeRed: '#ff4500',\n    orchid: '#da70d6',\n    paleGoldenrod: '#eee8aa',\n    paleGreen: '#98fb98',\n    paleTurquoise: '#afeeee',\n    paleVioletRed: '#db7093',\n    papayaWhip: '#ffefd5',\n    peachPuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderBlue: '#b0e0e6',\n    purple: '#800080',\n    rebeccaPurple: '#663399',\n    red: '#ff0000',\n    rosyBrown: '#bc8f8f',\n    royalBlue: '#4169e1',\n    saddleBrown: '#8b4513',\n    salmon: '#fa8072',\n    sandyBrown: '#f4a460',\n    seaGreen: '#2e8b57',\n    seaShell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyBlue: '#87ceeb',\n    slateBlue: '#6a5acd',\n    slateGray: '#708090',\n    slateGrey: '#708090',\n    snow: '#fffafa',\n    springGreen: '#00ff7f',\n    steelBlue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whiteSmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowGreen: '#9acd32'\n};\n\nexport { PresetColorMap };\n", "import { getVal } from '../OpenXML.js';\nimport { PresetColorMap } from './colorNameMap.js';\n\n/**\n * 解析颜色，转成 css 的颜色\n */\n/**\n * css 里可以识别的颜色\n */\nvar cssColors = ['black', 'blue', 'green', 'red', 'white', 'yellow'];\n/**\n *\n * 解析属性上的 color，比如  <w:top w:val=\"single\" w:sz=\"24\" w:space=\"1\" w:color=\"FF0000\" />\n * @param attrName color 默认属性\n * @param autoColor 默认值\n * @returns css 颜色\n */\nfunction parseColorAttr(word, element, attrName, autoColor) {\n    if (attrName === void 0) { attrName = 'w:color'; }\n    if (autoColor === void 0) { autoColor = 'black'; }\n    var color = element.getAttribute(attrName);\n    if (color) {\n        if (color == 'auto') {\n            return autoColor;\n            /**\n             * css 里可以识别的颜色\n             */\n        }\n        else if (cssColors.includes(color)) {\n            return color;\n        }\n        else if (color in PresetColorMap) {\n            return PresetColorMap[color];\n        }\n        return \"#\".concat(color);\n    }\n    var themeColor = element.getAttribute('w:themeColor');\n    return themeColor ? word.getThemeColor(themeColor) : '';\n}\n/**\n * 专门用来支持 shd 的颜色\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ST_Shd.html\n */\nfunction parseShdColor(word, element) {\n    var color = element.getAttribute('w:fill') || '';\n    var val = getVal(element);\n    if (color === 'auto') {\n        color = 'FFFFFF';\n    }\n    if (color.length === 6) {\n        switch (val) {\n            case 'clear':\n                return \"#\".concat(color);\n            case 'pct10':\n                return colorPercent(color, 0.1);\n            case 'pct12':\n                return colorPercent(color, 0.125);\n            case 'pct15':\n                return colorPercent(color, 0.15);\n            case 'pct20':\n                return colorPercent(color, 0.2);\n            case 'pct25':\n                return colorPercent(color, 0.25);\n            case 'pct30':\n                return colorPercent(color, 0.3);\n            case 'pct35':\n                return colorPercent(color, 0.35);\n            case 'pct37':\n                return colorPercent(color, 0.375);\n            case 'pct40':\n                return colorPercent(color, 0.4);\n            case 'pct45':\n                return colorPercent(color, 0.45);\n            case 'pct5':\n                return colorPercent(color, 0.05);\n            case 'pct50':\n                return colorPercent(color, 0.5);\n            case 'pct55':\n                return colorPercent(color, 0.55);\n            case 'pct60':\n                return colorPercent(color, 0.6);\n            case 'pct65':\n                return colorPercent(color, 0.65);\n            case 'pct70':\n                return colorPercent(color, 0.7);\n            case 'pct75':\n                return colorPercent(color, 0.75);\n            case 'pct80':\n                return colorPercent(color, 0.8);\n            case 'pct85':\n                return colorPercent(color, 0.85);\n            case 'pct87':\n                return colorPercent(color, 0.87);\n            case 'pct90':\n                return colorPercent(color, 0.9);\n            case 'pct95':\n                return colorPercent(color, 0.95);\n            default:\n                console.warn('unsupport shd val', val);\n                return \"#\".concat(color);\n        }\n    }\n    return '';\n}\n/**\n * 用 alpha 来模拟 ptc 功能\n */\nfunction colorPercent(color, percent) {\n    // 白色取 alpha 没什么意义，转成黑色\n    if (color === 'FFFFFF') {\n        color = '000000';\n    }\n    var r = parseInt(color.substring(0, 2), 16);\n    var g = parseInt(color.substring(2, 4), 16);\n    var b = parseInt(color.substring(4, 6), 16);\n    return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(percent, \")\");\n}\n/**\n * 解析 color 标签，比如 <w:color w:themeColor=\"accent3\" />\n * @returns css 颜色\n */\nfunction parseColor(word, element) {\n    return parseColorAttr(word, element, 'w:val');\n}\n\nexport { cssColors, parseColor, parseColorAttr, parseShdColor };\n", "import { __values } from 'tslib';\nimport { getVal } from '../OpenXML.js';\nimport { parseColorAttr } from './parseColor.js';\nimport { parseSize, LengthUsage } from './parseSize.js';\n\n// 默认边框颜色\nvar DEFAULT_BORDER_COLOR = 'black';\n/**\n * 解析单个边框样式\n */\nfunction parseBorder(word, element) {\n    var type = getVal(element);\n    if (type === 'nil' || type === 'none') {\n        return 'none';\n    }\n    var color = parseColorAttr(word, element);\n    var size = parseSize(element, 'w:sz', LengthUsage.Border);\n    return \"\".concat(size, \" solid \").concat(color == 'auto' ? DEFAULT_BORDER_COLOR : color);\n}\n/**\n * 解析边框\n */\nfunction parseBorders(word, element, style) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:start':\n                case 'w:left':\n                    style['border-left'] = parseBorder(word, child);\n                    break;\n                case 'w:end':\n                case 'w:right':\n                    style['border-right'] = parseBorder(word, child);\n                    break;\n                case 'w:top':\n                    style['border-top'] = parseBorder(word, child);\n                    break;\n                case 'w:bottom':\n                    style['border-bottom'] = parseBorder(word, child);\n                    break;\n                // TODO: 还有个 between 不知道是干啥的\n                default:\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n\nexport { parseBorder, parseBorders };\n", "function parseTextDirection(element, style) {\n    var val = element.getAttribute('w:val');\n    // 目前值支持 ltr 或 rtl\n    // 奇怪这里的类型定义不完整，可能是脚本的问题\n    switch (val) {\n        case 'lr':\n        case 'lrV':\n        case 'btLr':\n        case 'lrTb':\n        case 'lrTbV':\n        case 'tbLrV':\n            style['direction'] = 'ltr';\n            break;\n        case 'rl':\n        case 'rlV':\n        case 'tbRl':\n        case 'tbRlV':\n            style['direction'] = 'rtl';\n            break;\n    }\n}\n\nexport { parseTextDirection };\n", "import { parseSize, LengthUsage } from './parseSize.js';\n\n/**\n * http://officeopenxml.com/WPtableWidth.php\n */\nfunction parseTblWidth(element) {\n    var type = element.getAttribute('w:type');\n    if (!type || type === 'dxa') {\n        return parseSize(element, 'w:w');\n    }\n    else if (type === 'pct') {\n        return parseSize(element, 'w:w', LengthUsage.Percent);\n    }\n    else if (type === 'auto') {\n        return 'auto';\n    }\n    else {\n        console.warn('parseTblWidth: ignore type', type, element);\n    }\n    return '';\n}\n\nexport { parseTblWidth };\n", "import { parseBorder } from './parseBorder.js';\n\n/**\n * parseBorders 不支持 insideH 和 insideV，所以单独支持一下\n * 实际显示时需要过滤掉第一列\n */\nfunction parseInsideBorders(word, element) {\n    var H;\n    var insideH = element.getElementsByTagName('w:insideH').item(0);\n    if (insideH) {\n        H = parseBorder(word, insideH);\n    }\n    var V;\n    var insideV = element.getElementsByTagName('w:insideV').item(0);\n    if (insideV) {\n        V = parseBorder(word, insideV);\n    }\n    return {\n        H: H,\n        V: V\n    };\n}\n\nexport { parseInsideBorders };\n", "import { __values } from 'tslib';\nimport { parseCellMargin } from './parseCellMargin.js';\nimport { parseShdColor } from './parseColor.js';\nimport { getValBoolean, getVal, getValNumber } from '../OpenXML.js';\nimport { parseBorders } from './parseBorder.js';\nimport { parseTextDirection } from './parseTextDirection.js';\nimport { parseTblWidth } from './parseTblWidth.js';\nimport { parseInsideBorders } from './parseInsideBorders.js';\n\nfunction parseVAlign(element, style) {\n    var vAlign = getVal(element);\n    switch (vAlign) {\n        case 'bottom':\n            style['vertical-align'] = 'bottom';\n            break;\n        case 'center':\n            style['vertical-align'] = 'middle';\n            break;\n        case 'top':\n            style['vertical-align'] = 'top';\n            break;\n    }\n}\nfunction parseTblCellSpacing(element, style) {\n    var width = parseTblWidth(element);\n    if (width) {\n        style['cell-spacing'] = width;\n    }\n}\nfunction parseTcW(element, style) {\n    var width = parseTblWidth(element);\n    if (width) {\n        style.width = width;\n    }\n}\nfunction parseTcPr(word, element) {\n    var e_1, _a;\n    var properties = {};\n    var style = {};\n    properties.cssStyle = style;\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:tcMar':\n                    parseCellMargin(child, style);\n                    break;\n                case 'w:shd':\n                    style['background-color'] = parseShdColor(word, child);\n                    break;\n                case 'w:tcW':\n                    parseTcW(child, style);\n                    break;\n                case 'w:noWrap':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/noWrap.html\n                    var noWrap = getValBoolean(child);\n                    if (noWrap) {\n                        style['white-space'] = 'nowrap';\n                    }\n                    break;\n                case 'w:vAlign':\n                    parseVAlign(child, style);\n                    break;\n                case 'w:tcBorders':\n                    parseBorders(word, child, style);\n                    properties.insideBorder = parseInsideBorders(word, child);\n                    break;\n                case 'w:gridSpan':\n                    properties.gridSpan = getValNumber(child);\n                    break;\n                case 'w:vMerge':\n                    properties.vMerge = getVal(child) || 'continue';\n                    break;\n                case 'w:textDirection':\n                    parseTextDirection(child, style);\n                    break;\n                case 'w:cnfStyle':\n                    // 目前是自动计算的，所以不需要这个了\n                    break;\n                case 'w:hideMark':\n                    properties.hideMark = getValBoolean(child, true);\n                    break;\n                default:\n                    console.warn('parseTcPr: ignore', tagName, child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return properties;\n}\n\nexport { parseTblCellSpacing, parseTcPr };\n", "/**\n * 处理颜色相关的函数，目前只支持 rgb\n */\n// 颜色转换来自 https://gist.github.com/mjackson/5311256\nfunction rgbToHsl(r, g, b) {\n    (r /= 255), (g /= 255), (b /= 255);\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  l       The lightness\n * @return  Array           The RGB representation\n */\nfunction hslToRgb(h, s, l) {\n    if (h > 1) {\n        h = h / 360;\n    }\n    var r, g, b;\n    if (s == 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16))\n    ];\n    return hex.join('').toUpperCase();\n}\n/**\n * 避免颜色值超出范围，适用于 rgb\n */\nfunction toValidColor(c) {\n    return Math.min(Math.max(c, 0), 255);\n}\nvar Color = /** @class */ (function () {\n    function Color(input) {\n        var m = input.match(/^#?([0-9a-f]{6})$/i);\n        if (m) {\n            this.r = parseInt(m[1].substring(0, 2), 16);\n            this.g = parseInt(m[1].substring(2, 4), 16);\n            this.b = parseInt(m[1].substring(4, 6), 16);\n            this.isValid = true;\n        }\n    }\n    Color.fromHSL = function (h, s, l) {\n        var rgb = hslToRgb(h, s, l);\n        return new Color(\"#\".concat(rgbToHex(rgb.r, rgb.g, rgb.b)));\n    };\n    Color.fromRGB = function (r, g, b) {\n        var rgb = rgbToHex(r, g, b);\n        return new Color(\"#\".concat(rgb));\n    };\n    /**\n     * 设置 lum\n     */\n    Color.prototype.lum = function (l) {\n        return this.changeHsl(l, 'l', 'set');\n    };\n    /**\n     * 改变 lum 百分比，其实不太对，但差不太多\n     * @param l 百分比，比如 2 相当于 200 %\n     */\n    Color.prototype.lumMod = function (l) {\n        return this.changeHsl(l, 'l', 'mod');\n    };\n    /**\n     * 改变百分比\n     * @param l 百分比，比如 -0.2 相当于减少 20 %\n     */\n    Color.prototype.lumOff = function (l) {\n        return this.changeHsl(l, 'l', 'off');\n    };\n    /**\n     * h 取值范围是 0-1\n     */\n    Color.prototype.hue = function (h) {\n        return this.changeHsl(h, 'h', 'set');\n    };\n    Color.prototype.hueMod = function (h) {\n        return this.changeHsl(h, 'h', 'mod');\n    };\n    Color.prototype.hueOff = function (h) {\n        return this.changeHsl(h, 'h', 'off');\n    };\n    Color.prototype.sat = function (s) {\n        return this.changeHsl(s, 's', 'set');\n    };\n    Color.prototype.satMod = function (s) {\n        return this.changeHsl(s, 's', 'mod');\n    };\n    Color.prototype.satOff = function (s) {\n        return this.changeHsl(s, 's', 'off');\n    };\n    /**\n     * 修改 hsl 中某个部分的值\n     */\n    Color.prototype.changeHsl = function (num, com, changeType) {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        if (changeType === 'set') {\n            hsl[com] = num;\n        }\n        else if (changeType === 'mod') {\n            hsl[com] = hsl[com] * num;\n        }\n        else if (changeType === 'off') {\n            hsl[com] += hsl[com] * num;\n        }\n        var rgb = hslToRgb(hsl.h, hsl.s, hsl.l);\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        return this;\n    };\n    /**\n     * 互补色\n     */\n    Color.prototype.comp = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        hsl.h = hsl.h + 0.5;\n        if (hsl.h > 1) {\n            hsl.h -= 1;\n        }\n        var rgb = hslToRgb(hsl.h, hsl.s, hsl.l);\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        return this;\n    };\n    Color.prototype.shade = function (s) {\n        this.r = toValidColor(this.r - 256 * s);\n        this.g = toValidColor(this.g - 256 * s);\n        this.b = toValidColor(this.b - 256 * s);\n    };\n    Color.prototype.tint = function (t) {\n        this.r = toValidColor(this.r + 256 * t);\n        this.g = toValidColor(this.g + 256 * t);\n        this.b = toValidColor(this.b + 256 * t);\n    };\n    Color.prototype.inv = function () {\n        this.r = 255 - this.r;\n        this.g = 255 - this.g;\n        this.b = 255 - this.b;\n        return this;\n    };\n    Color.prototype.toHex = function () {\n        return '#' + rgbToHex(this.r, this.g, this.b);\n    };\n    Color.prototype.toRgba = function (alpha) {\n        return \"rgba(\".concat(this.r, \", \").concat(this.g, \", \").concat(this.b, \", \").concat(alpha, \")\");\n    };\n    return Color;\n}());\n\nexport { Color };\n", "import { __values } from 'tslib';\nimport { getAttrPercent } from '../OpenXML.js';\nimport { Color } from '../util/color.js';\nimport { convertAngle } from './parseSize.js';\n\n// 处理颜色变化\n// 20.1.2.3\nfunction modifyColor(element, colorStr) {\n    var e_1, _a;\n    var color = new Color(colorStr);\n    if (color.isValid) {\n        var alpha = 1;\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'a:alpha':\n                    case 'w14:alpha':\n                        alpha = getAttrPercent(child, 'val');\n                        break;\n                    case 'a:blue':\n                        color.b = 256 * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:blueMod':\n                        color.b = color.b * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:blueOff':\n                        color.b += color.b * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:comp':\n                        color.comp();\n                        break;\n                    case 'a:green':\n                        color.g = 256 * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:greenMod':\n                        color.g = color.g * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:greenOff':\n                        color.g += color.g * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:red':\n                        color.r = 256 * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:redMod':\n                        color.r = color.r * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:redOff':\n                        color.r += color.r * getAttrPercent(child, 'val');\n                        break;\n                    case 'a:lum':\n                        color.lum(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:lumMod':\n                        color.lumMod(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:lumOff':\n                        color.lumOff(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:hue':\n                        color.hue(convertAngle(child.getAttribute('hue')) / 360);\n                        break;\n                    case 'a:hueMod':\n                        color.hueMod(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:hueOff':\n                        color.hueOff(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:sat':\n                        color.sat(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:satMod':\n                        color.satMod(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:satOff':\n                        color.satOff(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:shade':\n                        color.shade(getAttrPercent(child, 'val'));\n                        break;\n                    case 'a:tint':\n                        color.tint(getAttrPercent(child, 'val'));\n                        break;\n                    default:\n                        console.log('unknown color modify', child);\n                        break;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (alpha !== 1) {\n            return color.toRgba(alpha);\n        }\n        return color.toHex();\n    }\n    return colorStr;\n}\n\nexport { modifyColor };\n", "import { getVal, getAttrPercent } from '../OpenXML.js';\nimport { Color } from '../util/color.js';\nimport { PresetColorMap } from './colorNameMap.js';\nimport { modifyColor } from './modifyColor.js';\n\n/**\n * 解析子节点颜色，这里其实还有 lumMod 和 lumOff\n */\nfunction parseChildColor(word, element) {\n    var colorChild = element.firstElementChild;\n    if (colorChild) {\n        var colorType = colorChild.tagName;\n        switch (colorType) {\n            case 'a:prstClr':\n                var color = getVal(colorChild) || '';\n                if (color in PresetColorMap) {\n                    return modifyColor(colorChild, PresetColorMap[color]);\n                }\n                else {\n                    console.warn('parseOutline: Unknown color ', color, colorChild);\n                }\n                break;\n            case 'a:srgbClr':\n            case 'a:scrgbClr':\n            case 'w14:srgbClr':\n                var rgbColor = getVal(colorChild);\n                if (rgbColor) {\n                    return modifyColor(colorChild, '#' + rgbColor);\n                }\n                var r = getAttrPercent(colorChild, 'r');\n                var g = getAttrPercent(colorChild, 'g');\n                var b = getAttrPercent(colorChild, 'b');\n                var scrgbColor = Color.fromRGB(r, g, b);\n                return modifyColor(colorChild, scrgbColor.toHex());\n            case 'a:hslClr':\n                var h = getAttrPercent(colorChild, 'r');\n                var s = getAttrPercent(colorChild, 'g');\n                var l = getAttrPercent(colorChild, 'b');\n                var val = getVal(colorChild);\n                // 文档例子里有，不确定\n                if (val) {\n                    return modifyColor(colorChild, '#' + val);\n                }\n                var hslColor = Color.fromHSL(h, s, l);\n                return modifyColor(colorChild, hslColor.toHex());\n            case 'a:schemeClr':\n            case 'w14:schemeClr':\n                var schemeClr = getVal(colorChild);\n                if (schemeClr) {\n                    return modifyColor(colorChild, word.getThemeColor(schemeClr));\n                }\n                else {\n                    console.warn('parseOutline: Unknown schemeClr ', colorChild);\n                }\n                break;\n            case 'a:sysClr':\n                // 这里每个系统不一样，所以直接依赖浏览器的能力\n                return getVal(colorChild);\n            default:\n                console.warn('parseOutline: Unknown color type ', colorType, colorChild);\n        }\n    }\n    return '';\n}\n\nexport { parseChildColor };\n", "import { parseSize } from './parseSize.js';\n\n/**\n * 解析缩进 http://officeopenxml.com/WPindentation.php\n */\nfunction parseInd(element, style) {\n    var firstLine = parseSize(element, 'w:firstLine');\n    var hanging = parseSize(element, 'w:hanging');\n    var left = parseSize(element, 'w:left');\n    var start = parseSize(element, 'w:start');\n    var right = parseSize(element, 'w:right');\n    var end = parseSize(element, 'w:end');\n    if (firstLine) {\n        style['text-indent'] = firstLine;\n    }\n    if (hanging) {\n        style['text-indent'] = \"-\".concat(hanging);\n    }\n    if (left || start) {\n        style['margin-left'] = left || start;\n    }\n    if (right || end) {\n        style['margin-right'] = right || end;\n    }\n}\n\nexport { parseInd };\n", "import { parseSize } from './parseSize.js';\n\n/**\n * 解析 spacing\n * http://officeopenxml.com/WPspacing.php\n */\nfunction parseSpacing(word, element, style) {\n    var before = parseSize(element, 'w:before');\n    var after = parseSize(element, 'w:after');\n    var lineRule = element.getAttribute('w:lineRule');\n    if (before) {\n        style['margin-top'] = before;\n    }\n    if (after) {\n        style['margin-bottom'] = after;\n    }\n    var line = element.getAttribute('w:line');\n    if (line) {\n        // 强制行高\n        if (word.renderOptions.forceLineHeight) {\n            style['line-height'] = word.renderOptions.forceLineHeight;\n            return;\n        }\n        var lineNum = parseInt(line, 10);\n        var minLineHeight = word.renderOptions.minLineHeight || 1.0;\n        switch (lineRule) {\n            case 'auto':\n                var lineHeight = Math.max(minLineHeight, lineNum / 240);\n                style['line-height'] = \"\".concat(lineHeight.toFixed(2));\n                break;\n            case 'atLeast':\n                // 不知道这样处理是否正确，先用默认好了\n                // style['line-height'] = `calc(100% + ${lineNum / 20}pt)`;\n                break;\n            default:\n                var lineHeightMin = Math.max(minLineHeight, lineNum / 20);\n                style['line-height'] = \"\".concat(lineHeightMin, \"pt\");\n                break;\n        }\n    }\n}\n\nexport { parseSpacing };\n", "import { __values } from 'tslib';\n\n/**\n * 解析字体\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/rFonts.html\n */\nfunction themeFont(font) {\n    return \"var(--docx-theme-font-\".concat(font, \")\");\n}\nfunction parseFont(word, element, style) {\n    var e_1, _a;\n    var fonts = [];\n    var fontMapping = word.renderOptions.fontMapping;\n    try {\n        for (var _b = __values(element.attributes), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var attribute = _c.value;\n            var name_1 = attribute.name;\n            var value = attribute.value;\n            switch (name_1) {\n                case 'w:ascii':\n                case 'w:cs':\n                case 'w:eastAsia':\n                    if (fontMapping && value in fontMapping) {\n                        value = fontMapping[value];\n                    }\n                    if (value.indexOf(' ') === -1) {\n                        fonts.push(value);\n                    }\n                    else {\n                        fonts.push('\"' + value + '\"');\n                    }\n                    break;\n                case 'w:asciiTheme':\n                case 'w:csTheme':\n                case 'w:eastAsiaTheme':\n                    fonts.push(themeFont(value));\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    // hint 之类的不支持，因为也很难控制到这个粒度了\n    if (fonts.length) {\n        style['font-family'] = Array.from(new Set(fonts)).join(', ');\n    }\n}\n\nexport { parseFont };\n", "import { parseSize } from './parseSize.js';\n\n// http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/trHeight.html\nfunction parseTrHeight(child, style) {\n    var height = parseSize(child, 'w:val');\n    var hRule = child.getAttribute('w:hRule');\n    if (hRule === 'exact') {\n        style['height'] = height;\n    }\n    else if (hRule === 'atLeast') {\n        // tr 设置 min-height 似乎是没效果的\n        style['height'] = height;\n        style['min-height'] = height;\n    }\n}\n\nexport { parseTrHeight };\n", "/** 将 jc 转成 text-align\n *\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ST_Jc.html\n */\nfunction jcToTextAlign(jc) {\n    switch (jc) {\n        case 'start':\n        case 'left':\n            return 'left';\n        case 'center':\n            return 'center';\n        case 'end':\n        case 'right':\n            return 'right';\n        case 'both':\n        case 'distribute':\n            return 'justify';\n    }\n    return jc;\n}\n\nexport { jcToTextAlign };\n", "import { __values } from 'tslib';\nimport { parseSize, LengthUsage } from './parseSize.js';\nimport { getValBoolean, getValNumber, getVal } from '../OpenXML.js';\nimport { parseBorder, parseBorders } from './parseBorder.js';\nimport { parseColorAttr, parseShdColor, parseColor } from './parseColor.js';\nimport { parseChildColor } from './parseChildColor.js';\nimport { parseInd } from './parseInd.js';\nimport { parseSpacing } from './parseSpacing.js';\nimport { parseFont } from './parseFont.js';\nimport { parseTrHeight } from './parseTrHeight.js';\nimport { jcToTextAlign } from './jcToTextAlign.js';\nimport { parseTextDirection } from './parseTextDirection.js';\n\n/**\n * 包括 rPr 及 pPr 的解析，参考了 docxjs 里的实现\n */\n/**\n * 解析 underline 并附上样式\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/u.html\n */\nfunction parseUnderline(word, element, style) {\n    var val = getVal(element);\n    if (val == null)\n        return;\n    switch (val) {\n        case 'dash':\n        case 'dashDotDotHeavy':\n        case 'dashDotHeavy':\n        case 'dashedHeavy':\n        case 'dashLong':\n        case 'dashLongHeavy':\n        case 'dotDash':\n        case 'dotDotDash':\n            style['text-decoration-style'] = 'dashed';\n            break;\n        case 'dotted':\n        case 'dottedHeavy':\n            style['text-decoration-style'] = 'dotted';\n            break;\n        case 'double':\n            style['text-decoration-style'] = 'double';\n            break;\n        case 'single':\n        case 'thick':\n            style['text-decoration'] = 'underline';\n            break;\n        case 'wave':\n        case 'wavyDouble':\n        case 'wavyHeavy':\n            style['text-decoration-style'] = 'wavy';\n            break;\n        case 'words':\n            style['text-decoration'] = 'underline';\n            break;\n        case 'none':\n            style['text-decoration'] = 'none';\n            break;\n    }\n    var color = parseColorAttr(word, element);\n    if (color) {\n        style['text-decoration-color'] = color;\n    }\n}\n/**\n * 目前只有部分支持\n * http://officeopenxml.com/WPparagraph-textFrames.php\n */\nfunction parseFrame(element, style) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(element.attributes), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var attribute = _c.value;\n            var name_1 = attribute.name;\n            var value = attribute.value;\n            switch (name_1) {\n                case 'w:dropCap':\n                    if (value === 'drop') {\n                        // initial-letter 很少浏览器支持，所以用 float 代替\n                        style['float'] = 'left';\n                    }\n                    break;\n                case 'w:h':\n                    if (typeof value === 'object' && !Array.isArray(value)) {\n                        style['height'] = parseSize(value, 'w:h');\n                    }\n                    break;\n                case 'w:w':\n                    if (typeof value === 'object' && !Array.isArray(value)) {\n                        style['width'] = parseSize(value, 'w:w');\n                    }\n                    break;\n                case 'w:hAnchor':\n                case 'w:vAnchor':\n                case 'w:lines':\n                    // 目前没有办法做到这些属性的控制\n                    break;\n                case 'w:wrap':\n                    // 其它不支持，先报错\n                    if (value !== 'around') {\n                        console.warn('parseFrame: w:wrap not support ' + value);\n                    }\n                    break;\n                default:\n                    console.warn('parseFrame: unknown attribute ' + name_1, attribute);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/**\n * 将 em 转成 css 里对应的 text-emphasis 值\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ST_Em.html\n */\nfunction convertEm(em, style) {\n    switch (em) {\n        case 'dot':\n            style['text-emphasis'] = 'filled';\n            // 按规范里描述应该是在文字上面，但在 word 实际显示的时候是在下面\n            // 怀疑是中文场景下做了特殊处理\n            style['text-emphasis-position'] = 'under right';\n            break;\n        case 'comma':\n            style['text-emphasis'] = 'filled sesame';\n            break;\n        case 'circle':\n            style['text-emphasis'] = 'open';\n            break;\n        case 'underDot':\n            style['text-emphasis'] = 'filled';\n            style['text-emphasis-position'] = 'under right';\n            break;\n    }\n}\n/**\n * 解析各种 pPr 及 rPr，返回样式\n * @param type 所属类型\n * @returns 样式\n */\nfunction parsePr(word, element, type) {\n    var e_2, _a;\n    var style = {};\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:sz':\n                case 'w:szCs':\n                    style['font-size'] = parseSize(child, 'w:val', LengthUsage.FontSize);\n                    break;\n                case 'w:jc':\n                    style['text-align'] = jcToTextAlign(getVal(child));\n                    break;\n                case 'w:framePr':\n                    parseFrame(child, style);\n                    break;\n                case 'w:pBdr':\n                    parseBorders(word, child, style);\n                    break;\n                case 'w:ind':\n                    parseInd(child, style);\n                    break;\n                case 'w:color':\n                    style['color'] = parseColor(word, child);\n                    break;\n                case 'w:shd':\n                    // 如果已经有设置说明是 highlight\n                    if (!('background-color' in style)) {\n                        // http://officeopenxml.com/WPshading.php\n                        style['background-color'] = parseShdColor(word, child);\n                    }\n                    break;\n                case 'w:spacing':\n                    parseSpacing(word, child, style);\n                    break;\n                case 'w:highlight':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/highlight.html\n                    // 这个按文档是重要性高于 shd\n                    style['background-color'] = parseColorAttr(word, child, 'w:val', 'yellow');\n                    break;\n                case 'w:vertAlign':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/vertAlign.html\n                    // 这个其实和 position 有冲突，但预计这两个同时出现的概率不高\n                    var vertAlign = getVal(child);\n                    if (vertAlign === 'superscript') {\n                        style['vertical-align'] = 'super';\n                    }\n                    else if (vertAlign === 'subscript') {\n                        style['vertical-align'] = 'sub';\n                    }\n                    break;\n                case 'w:position':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/position.html\n                    style['vertical-align'] = parseSize(child, 'w:val', LengthUsage.FontSize);\n                    break;\n                case 'w:trHeight':\n                    parseTrHeight(child, style);\n                    break;\n                case 'w:strike':\n                case 'w:dstrike':\n                    // 其实不支持 dstrike，都统一为 strike\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/dstrike.html\n                    style['text-decoration'] = getValBoolean(child)\n                        ? 'line-through'\n                        : 'none';\n                    break;\n                case 'w:b':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/b.html\n                    style['font-weight'] = getValBoolean(child) ? 'bold' : 'normal';\n                    break;\n                case 'w:adjustRightInd':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/adjustRightInd.html\n                    // 似乎没法处理\n                    break;\n                case 'w:bCs':\n                case 'w:iCs':\n                    // 忽略，因为 CSS 没法按这个判断\n                    break;\n                case 'w:i':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/i.html\n                    style['font-style'] = getValBoolean(child) ? 'italic' : 'normal';\n                    break;\n                case 'w:caps':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/caps.html\n                    style['text-transform'] = getValBoolean(child) ? 'uppercase' : 'normal';\n                    break;\n                case 'w:smallCaps':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/smallCaps.html\n                    style['text-transform'] = getValBoolean(child) ? 'lowercase' : 'normal';\n                    break;\n                case 'w:u':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/u.html\n                    parseUnderline(word, child, style);\n                    break;\n                case 'w:rFonts':\n                    parseFont(word, child, style);\n                    break;\n                case 'w:tblCellSpacing':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblCellSpacing_1.html\n                    style['border-spacing'] = parseSize(child, 'w:w');\n                    style['border-collapse'] = 'separate';\n                    break;\n                case 'w:bdr':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/bdr.html\n                    style['border'] = parseBorder(word, child);\n                    break;\n                case 'w:vanish':\n                    if (getValBoolean(child)) {\n                        // 这里其实没试过 word 里到底是不是 none\n                        style['display'] = 'none';\n                    }\n                    break;\n                case 'w:kern':\n                    // todo: 这里显示不正确\n                    // style['letter-spacing'] = parseSize(\n                    //   child,\n                    //   'w:val',\n                    //   LengthUsage.FontSize\n                    // );\n                    break;\n                case 'w:pStyle':\n                    // 这个在 paragraph 里处理了\n                    break;\n                case 'w:lang':\n                case 'w:noProof':\n                    // 用于拼写检查\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/lang.html\n                    break;\n                case 'w:keepLines':\n                case 'w:keepNext':\n                case 'w:widowControl':\n                case 'w:pageBreakBefore':\n                    // 用于分页的场景，目前还不支持 TODO:\n                    break;\n                case 'w:outlineLvl':\n                    // 似乎是用于目录的，目前还不支持\n                    break;\n                case 'w:contextualSpacing':\n                    // 还没空看\n                    break;\n                case 'w:numPr':\n                    // 这个在 parseParagraphProperties 里处理了\n                    break;\n                case 'w:rPr':\n                    // TODO: 这个有时候和 r 里的 rPr 不一致，不知道如何处理\n                    var reflection = child.getElementsByTagName('w14:reflection').item(0);\n                    if (reflection) {\n                        // css 只支持在块级节点设置\n                        // 只支持一小部分设置项，另外因为只支持块级别的情况，所以看起来差异较大\n                        var reflectionDistance = parseSize(reflection, 'w4:dist', LengthUsage.Emu) || '0px';\n                        style['-webkit-box-reflect'] = \"below \".concat(reflectionDistance, \" linear-gradient(transparent, white)\");\n                    }\n                    break;\n                case 'w:rStyle':\n                    // 在 Run 里地方处理了\n                    break;\n                case 'w:webHidden':\n                    // web 模式隐藏\n                    style['display'] = 'none';\n                    break;\n                case 'w:tabs':\n                    // 这个在 parseParagraphProperties 里处理了\n                    break;\n                case 'w:snapToGrid':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/snapToGrid_2.html\n                    // 目前还不支持 grid\n                    break;\n                case 'w:topLinePunct':\n                    // 没法支持\n                    break;\n                case 'w:wordWrap':\n                    // 不太确定这里是用 word-break 还是 overflow-wrap\n                    if (getValBoolean(child)) {\n                        style['word-break'] = 'break-all';\n                    }\n                    break;\n                case 'w:textAlignment':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/textAlignment.html\n                    var alignment = getVal(child);\n                    if (alignment === 'center') {\n                        style['vertical-align'] = 'middle';\n                    }\n                    else if (alignment !== 'auto') {\n                        style['vertical-align'] = alignment;\n                    }\n                    break;\n                case 'w:textDirection':\n                    parseTextDirection(child, style);\n                    break;\n                case 'w:cnfStyle':\n                    // 目前是自动计算的，所以不需要这个了\n                    break;\n                case 'w:bidi':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/bidi_1.html\n                    // TODO: 还不清楚和 w:textDirection 是什么关系\n                    if (getValBoolean(child, true)) {\n                        console.warn('w:bidi is not supported.');\n                    }\n                    break;\n                case 'w:autoSpaceDE':\n                case 'w:autoSpaceDN':\n                    // 这个在其它地方实现了\n                    break;\n                case 'w:kinsoku':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/kinsoku.html\n                    // 控制不了所以忽略了\n                    break;\n                case 'w:overflowPunct':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/overflowPunct.html\n                    // 支持不了\n                    break;\n                case 'w:em':\n                    convertEm(getVal(child), style);\n                    break;\n                case 'w:w':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/w_1.html\n                    // 看起来应该是把文字拉伸\n                    var w = getValNumber(child);\n                    style['transform'] = \"scaleX(\".concat(w / 100, \")\");\n                    style['display'] = 'inline-block'; // 需要这样才能生效\n                    break;\n                case 'w:outline':\n                    style['text-shadow'] =\n                        '-1px -1px 0 #AAA, 1px -1px 0 #AAA, -1px 1px 0 #AAA, 1px 1px 0 #AAA';\n                    break;\n                case 'w:shadown':\n                case 'w:imprint':\n                    if (getValBoolean(child, true)) {\n                        style['text-shadow'] = '1px 1px 2px rgba(0, 0, 0, 0.6)';\n                    }\n                    break;\n                case 'w14:shadow':\n                    var blurRad = parseSize(child, 'w14:blurRad', LengthUsage.Emu) || '4px';\n                    // 其它结果算出来不像就先忽略了\n                    var color = 'rgba(0, 0, 0, 0.6)';\n                    var childColor = parseChildColor(word, child);\n                    if (childColor) {\n                        color = childColor;\n                    }\n                    style['text-shadow'] = \"1px 1px \".concat(blurRad, \" \").concat(color);\n                    break;\n                case 'w14:textOutline':\n                    var outlineWidth = parseSize(child, 'w14:w', LengthUsage.Emu) || '1px';\n                    style['-webkit-text-stroke-width'] = outlineWidth;\n                    var outlineColor = 'white';\n                    var fillColor = child.getElementsByTagName('w14:solidFill');\n                    if (fillColor.length > 0) {\n                        outlineColor = parseChildColor(word, fillColor.item(0)) || 'white';\n                    }\n                    style['-webkit-text-stroke-color'] = outlineColor;\n                    break;\n                case 'w14:reflection':\n                    // 在 rPr 里处理了\n                    break;\n                case 'w14:textFill':\n                    // color 已经够用了，为了避免 lumMod 计算不正确反而导致问题，所以就不支持了\n                    break;\n                case 'w14:ligatures':\n                    // 没文档，不知道\n                    break;\n                default:\n                    console.warn('parsePr Unknown tagName', tagName, child);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return style;\n}\n\nexport { parsePr };\n", "var BookmarkStart = /** @class */ (function () {\n    function BookmarkStart(name) {\n        this.name = name;\n    }\n    BookmarkStart.fromXML = function (word, element) {\n        var name = element.getAttribute('w:name');\n        if (name) {\n            return new BookmarkStart(name);\n        }\n        else {\n            console.warn('Bookmark without name');\n            return new BookmarkStart('unknown');\n        }\n    };\n    return BookmarkStart;\n}());\n\nexport { BookmarkStart };\n", "/**\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/br.html\n */\nvar Break = /** @class */ (function () {\n    function Break() {\n        /**\n         * 目前也只支持这种\n         */\n        this.type = 'textWrapping';\n    }\n    Break.fromXML = function (word, element) {\n        return new Break();\n    };\n    return Break;\n}());\n\nexport { Break };\n", "var Blip = /** @class */ (function () {\n    function Blip() {\n    }\n    Blip.fromXML = function (word, element) {\n        var blip = new Blip();\n        // 目前值支持 embed 这一种\n        var embedId = element.getAttribute('r:embed') || '';\n        var rel = word.getDocumentRels(embedId);\n        if (rel) {\n            blip.embled = rel;\n            blip.src = word.loadImage(blip.embled);\n        }\n        return blip;\n    };\n    return Blip;\n}());\n\nexport { Blip };\n", "import { Blip } from './Blip.js';\n\n/**\n * http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/blipFill_2.html\n */\nvar BlipFill = /** @class */ (function () {\n    function BlipFill() {\n    }\n    BlipFill.fromXML = function (word, element) {\n        var blipFill = new BlipFill();\n        var blip = element === null || element === void 0 ? void 0 : element.getElementsByTagName('a:blip').item(0);\n        if (blip) {\n            blipFill.blip = Blip.fromXML(word, blip);\n        }\n        return blipFill;\n    };\n    return BlipFill;\n}());\n\nexport { BlipFill };\n", "import { __values } from 'tslib';\nimport { parseSize, LengthUsage, convertAngle } from '../../parse/parseSize.js';\n\n/**\n * http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/xfrm_2.html\n */\nvar Transform = /** @class */ (function () {\n    function Transform() {\n    }\n    Transform.fromXML = function (word, element) {\n        var e_1, _a;\n        var transform = new Transform();\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'a:off':\n                        transform.off = {\n                            x: parseSize(child, 'x', LengthUsage.Emu),\n                            y: parseSize(child, 'y', LengthUsage.Emu)\n                        };\n                        break;\n                    case 'a:ext':\n                        transform.ext = {\n                            cx: parseSize(child, 'cx', LengthUsage.Emu),\n                            cy: parseSize(child, 'cy', LengthUsage.Emu)\n                        };\n                        break;\n                    case 'a:chOff':\n                        transform.chOff = {\n                            x: parseSize(child, 'x', LengthUsage.Emu),\n                            y: parseSize(child, 'y', LengthUsage.Emu)\n                        };\n                        break;\n                    case 'a:chExt':\n                        transform.chExt = {\n                            cx: parseSize(child, 'cx', LengthUsage.Emu),\n                            cy: parseSize(child, 'cy', LengthUsage.Emu)\n                        };\n                        break;\n                    default:\n                        console.warn('Transform: Unknown tag ', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var rot = element.getAttribute('rot');\n        if (rot) {\n            transform.rot = convertAngle(rot);\n        }\n        return transform;\n    };\n    return Transform;\n}());\n\nexport { Transform };\n", "import { __values } from 'tslib';\nimport { getAttrBoolean } from '../OpenXML.js';\n\n/**\n * 解析 shape\n */\nfunction parsePts(element) {\n    var e_1, _a;\n    var pts = [];\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            if (tagName === 'a:pt' || tagName === 'pt') {\n                var x = child.getAttribute('x');\n                var y = child.getAttribute('y');\n                if (x && y) {\n                    pts.push({ x: x, y: y });\n                }\n            }\n            else {\n                console.warn('unknown pt', tagName, child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return pts;\n}\n// http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/path_2.html\nfunction parsePath(element) {\n    var e_2, _a;\n    var pathChild = [];\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'a:moveTo':\n                case 'moveTo':\n                    var moveToPt = parsePts(child);\n                    if (moveToPt.length) {\n                        var moveTo_1 = {\n                            type: 'moveTo',\n                            pt: moveToPt[0]\n                        };\n                        pathChild.push(moveTo_1);\n                    }\n                    break;\n                case 'a:lnTo':\n                case 'lnTo':\n                    var lnToPt = parsePts(child);\n                    if (lnToPt.length) {\n                        var lnTo = {\n                            type: 'lnTo',\n                            pt: lnToPt[0]\n                        };\n                        pathChild.push(lnTo);\n                    }\n                    break;\n                case 'a:quadBezTo':\n                case 'quadBezTo':\n                    var quadBezToPt = parsePts(child);\n                    if (quadBezToPt.length) {\n                        var quadBezTo = {\n                            type: 'quadBezTo',\n                            pts: quadBezToPt\n                        };\n                        pathChild.push(quadBezTo);\n                    }\n                    break;\n                case 'a:cubicBezTo':\n                case 'cubicBezTo':\n                    var cubicBezToPt = parsePts(child);\n                    if (cubicBezToPt.length) {\n                        var cubicBezTo = {\n                            type: 'cubicBezTo',\n                            pts: cubicBezToPt\n                        };\n                        pathChild.push(cubicBezTo);\n                    }\n                    break;\n                case 'a:arcTo':\n                case 'arcTo':\n                    var wR = child.getAttribute('wR');\n                    var hR = child.getAttribute('hR');\n                    var stAng = child.getAttribute('stAng');\n                    var swAng = child.getAttribute('swAng');\n                    if (wR && hR && stAng && swAng) {\n                        var arcTo = {\n                            type: 'arcTo',\n                            wR: wR,\n                            hR: hR,\n                            stAng: stAng,\n                            swAng: swAng\n                        };\n                        pathChild.push(arcTo);\n                    }\n                    break;\n                case 'a:close':\n                case 'close':\n                    pathChild.push({\n                        type: 'close'\n                    });\n                    break;\n                default:\n                    console.warn('parsePath: unknown tag', tagName, child);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    var path = { defines: pathChild };\n    var fill = element.getAttribute('fill');\n    if (fill) {\n        path.fill = fill;\n    }\n    path.extrusionOk = getAttrBoolean(element, 'extrusionOk', false);\n    path.stroke = getAttrBoolean(element, 'stroke', true);\n    var w = element.getAttribute('w');\n    if (w) {\n        path.w = parseInt(w, 10);\n    }\n    var h = element.getAttribute('h');\n    if (h) {\n        path.h = parseInt(h, 10);\n    }\n    return path;\n}\nfunction parsePathLst(element) {\n    var e_3, _a;\n    var pathLst = [];\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'a:path':\n                case 'path':\n                    pathLst.push(parsePath(child));\n                    break;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return pathLst;\n}\nfunction parseShapeGuide(element) {\n    var e_4, _a;\n    var gds = [];\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'a:gd':\n                case 'gd':\n                    var name_1 = child.getAttribute('name');\n                    var fmla = child.getAttribute('fmla');\n                    if (name_1 && fmla) {\n                        var gd = {\n                            n: name_1,\n                            f: fmla\n                        };\n                        gds.push(gd);\n                    }\n                    break;\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return gds;\n}\nfunction parseShape(element) {\n    var e_5, _a;\n    var shape = {};\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'a:avLst':\n                case 'avLst':\n                    shape.avLst = parseShapeGuide(child);\n                    break;\n                case 'a:gdLst':\n                case 'gdLst':\n                    shape.gdLst = parseShapeGuide(child);\n                    break;\n                case 'a:rect':\n                case 'react':\n                    var rect = {\n                        b: child.getAttribute('b') || '',\n                        l: child.getAttribute('l') || '',\n                        r: child.getAttribute('r') || '',\n                        t: child.getAttribute('t') || ''\n                    };\n                    shape.rect = rect;\n                    break;\n                case 'a:pathLst':\n                case 'pathLst':\n                    shape.pathLst = parsePathLst(child);\n                    break;\n            }\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return shape;\n}\n\nexport { parsePath, parsePathLst, parsePts, parseShape, parseShapeGuide };\n", "import { __values } from 'tslib';\nimport { parseShapeGuide } from '../../parse/parseShape.js';\n\nvar Geom = /** @class */ (function () {\n    function Geom() {\n    }\n    Geom.fromXML = function (word, element) {\n        var e_1, _a;\n        var geom = new Geom();\n        geom.prst = element.getAttribute('prst');\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'a:avLst': {\n                        geom.avLst = parseShapeGuide(child);\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return geom;\n    };\n    return Geom;\n}());\n\nexport { Geom };\n", "import { parseShape } from '../../parse/parseShape.js';\n\n/**\n * 自定义形状\n */\nvar CustomGeom = /** @class */ (function () {\n    function CustomGeom() {\n    }\n    CustomGeom.fromXML = function (word, element) {\n        var geom = new CustomGeom();\n        geom.shape = parseShape(element);\n        return geom;\n    };\n    return CustomGeom;\n}());\n\nexport { CustomGeom };\n", "import { __values } from 'tslib';\nimport { Transform } from './Transform.js';\nimport { parseSize, LengthUsage } from '../../parse/parseSize.js';\nimport { Geom } from './Geom.js';\nimport { parseChildColor } from '../../parse/parseChildColor.js';\nimport { CustomGeom } from './CustomGeom.js';\n\n/**\n * http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/spPr_2.html\n */\nfunction prstDashToCSSBorderType(prstDash) {\n    var borderType = 'solid';\n    switch (prstDash) {\n        case 'dash':\n        case 'dashDot':\n        case 'lgDash':\n        case 'lgDashDot':\n        case 'lgDashDotDot':\n        case 'sysDash':\n        case 'sysDashDot':\n        case 'sysDashDotDot':\n            borderType = 'dashed';\n            break;\n        case 'dot':\n        case 'sysDot':\n            borderType = 'dotted';\n            break;\n    }\n    return borderType;\n}\nfunction parseOutline(word, element) {\n    var e_1, _a;\n    var borderWidth = parseSize(element, 'w', LengthUsage.Emu);\n    var outline = {\n        width: borderWidth\n    };\n    outline.style = 'solid';\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'a:solidFill':\n                    outline.color = parseChildColor(word, child);\n                    break;\n                case 'a:noFill':\n                    outline.style = 'none';\n                    break;\n                case 'a:round':\n                    // 瞎写的，规范里也没写是多少\n                    outline.radius = '8%';\n                    break;\n                case 'a:prstDash':\n                    outline.style = prstDashToCSSBorderType(child.getAttribute('val'));\n                    break;\n                default:\n                    console.warn('parseOutline: Unknown tag ', tagName, child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return outline;\n}\nvar ShapePr = /** @class */ (function () {\n    function ShapePr() {\n    }\n    ShapePr.fromXML = function (word, element) {\n        var e_2, _a;\n        var shapePr = new ShapePr();\n        if (element) {\n            try {\n                for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var child = _c.value;\n                    var tagName = child.tagName;\n                    switch (tagName) {\n                        case 'a:xfrm':\n                            shapePr.xfrm = Transform.fromXML(word, child);\n                            break;\n                        case 'a:prstGeom':\n                            shapePr.geom = Geom.fromXML(word, child);\n                            break;\n                        case 'a:custGeom':\n                            shapePr.custGeom = CustomGeom.fromXML(word, child);\n                            break;\n                        case 'a:ln':\n                            // http://officeopenxml.com/drwSp-outline.php\n                            shapePr.outline = parseOutline(word, child);\n                            break;\n                        case 'a:noFill':\n                            shapePr.noFill = true;\n                            break;\n                        case 'a:solidFill':\n                            shapePr.fillColor = parseChildColor(word, child);\n                            break;\n                        default:\n                            console.warn('ShapePr: Unknown tag ', tagName, child);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return shapePr;\n    };\n    return ShapePr;\n}());\n\nexport { ShapePr };\n", "import { getAttrBoolean } from '../../OpenXML.js';\nimport { BlipFill } from './BlipFill.js';\nimport { ShapePr } from './ShapeProperties.js';\n\nvar Pic = /** @class */ (function () {\n    function Pic() {\n    }\n    Pic.fromXML = function (word, element) {\n        var pic = new Pic();\n        var cNvPr = element === null || element === void 0 ? void 0 : element.getElementsByTagName('pic:cNvPr').item(0);\n        if (cNvPr) {\n            pic.alt = cNvPr.getAttribute('descr') || '';\n            pic.altVar = cNvPr.getAttribute('descrVar') || '';\n            var hidden = getAttrBoolean(cNvPr, 'hidden', false);\n            if (hidden) {\n                return pic;\n            }\n        }\n        pic.blipFill = BlipFill.fromXML(word, element === null || element === void 0 ? void 0 : element.getElementsByTagName('pic:blipFill').item(0));\n        pic.spPr = ShapePr.fromXML(word, element === null || element === void 0 ? void 0 : element.getElementsByTagName('pic:spPr').item(0));\n        return pic;\n    };\n    return Pic;\n}());\n\nexport { Pic };\n", "/**\n * http://officeopenxml.com/WPtable.php\n */\nvar Table = /** @class */ (function () {\n    function Table() {\n        this.properties = {};\n        this.tblGrid = [];\n        this.trs = [];\n    }\n    return Table;\n}());\n\nexport { Table };\n", "var Tr = /** @class */ (function () {\n    function Tr() {\n        this.properties = {};\n        this.tcs = [];\n    }\n    return Tr;\n}());\n\nexport { Tr };\n", "var Tc = /** @class */ (function () {\n    function Tc() {\n        this.properties = {};\n        this.children = [];\n    }\n    Tc.prototype.add = function (child) {\n        if (child) {\n            this.children.push(child);\n        }\n    };\n    return Tc;\n}());\n\nexport { Tc };\n", "import { __values } from 'tslib';\nimport { Tc } from '../openxml/word/table/Tc.js';\nimport { parseTcPr } from './parseTcPr.js';\nimport { Paragraph } from '../openxml/word/Paragraph.js';\nimport { parseTable } from './parseTable.js';\n\n/**\n * 拆分出来主要是为了避免循环引用\n */\nfunction parseTc(word, element, currentCol, rowSpanMap) {\n    var e_1, _a;\n    var tc = new Tc();\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:tcPr':\n                    tc.properties = parseTcPr(word, child);\n                    break;\n                case 'w:p':\n                    tc.add(Paragraph.fromXML(word, child));\n                    break;\n                case 'w:tbl':\n                    tc.add(parseTable(word, child));\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var lastCol = rowSpanMap[currentCol.index];\n    // 如果是 continue 意味着这个被合并了\n    if (tc.properties.vMerge) {\n        if (tc.properties.vMerge === 'restart') {\n            tc.properties.rowSpan = 1;\n            rowSpanMap[currentCol.index] = tc;\n        }\n        else if (lastCol) {\n            if (lastCol.properties && lastCol.properties.rowSpan) {\n                lastCol.properties.rowSpan = lastCol.properties.rowSpan + 1;\n                var colSpan_1 = tc.properties.gridSpan || 1;\n                currentCol.index += colSpan_1;\n                return null;\n            }\n            else {\n                console.warn('Tc.fromXML: continue but not found lastCol', currentCol.index, tc, rowSpanMap);\n            }\n        }\n    }\n    else {\n        delete rowSpanMap[currentCol.index];\n    }\n    var colSpan = tc.properties.gridSpan || 1;\n    currentCol.index += colSpan;\n    return tc;\n}\n\nexport { parseTc };\n", "import { __values } from 'tslib';\nimport { getValNumber, getVal, getValHex, getAttrBoolean } from '../OpenXML.js';\nimport { parseBorders } from './parseBorder.js';\nimport { parseInsideBorders } from './parseInsideBorders.js';\nimport { parseTblWidth } from './parseTblWidth.js';\nimport { parseShdColor } from './parseColor.js';\nimport { parseSize } from './parseSize.js';\nimport { parseTblCellSpacing } from './parseTcPr.js';\nimport { parseCellMargin } from './parseCellMargin.js';\n\n/**\n * 表格的 jc 需要使用 float 来实现\n * http://officeopenxml.com/WPtableAlignment.php\n */\nfunction parseTblJc(element, cssStyle) {\n    var val = getVal(element);\n    switch (val) {\n        case 'left':\n        case 'start':\n            // TODO: 会导致前面的文字掉下去，感觉还是不能支持这个功能\n            // cssStyle['float'] = 'left';\n            break;\n        case 'right':\n        case 'end':\n            cssStyle['float'] = 'right';\n    }\n}\n/**\n * 这个其实分左右，但目前只支持左，右可能是阿拉伯语？\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblInd_2.html\n */\nfunction parseTblInd(element, style) {\n    var width = parseTblWidth(element);\n    if (width) {\n        style['margin-left'] = width;\n    }\n}\nfunction parseTblW(element, style) {\n    var width = parseTblWidth(element);\n    if (width) {\n        style['width'] = width;\n    }\n}\n// http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ST_TblStyleOverrideType.html\n// val 是旧的格式\nfunction parseTblLook(child) {\n    var tblLook = {};\n    var tblLookVal = getValHex(child);\n    if (getAttrBoolean(child, 'firstRow', false) || tblLookVal & 0x0020) {\n        tblLook['firstRow'] = true;\n    }\n    if (getAttrBoolean(child, 'lastRow', false) || tblLookVal & 0x0040) {\n        tblLook['lastRow'] = true;\n    }\n    if (getAttrBoolean(child, 'firstColumn', false) || tblLookVal & 0x0080) {\n        tblLook['firstColumn'] = true;\n    }\n    if (getAttrBoolean(child, 'lastColumn', false) || tblLookVal & 0x0100) {\n        tblLook['lastColumn'] = true;\n    }\n    if (getAttrBoolean(child, 'noHBand', false) || tblLookVal & 0x0200) {\n        tblLook['noHBand'] = true;\n    }\n    else {\n        tblLook['noHBand'] = false;\n    }\n    if (getAttrBoolean(child, 'noVBand', false) || tblLookVal & 0x0400) {\n        tblLook['noVBand'] = true;\n    }\n    else {\n        tblLook['noVBand'] = false;\n    }\n    return tblLook;\n}\n/**\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblpPr.html\n * 只支持部分\n */\nfunction parseTblpPr(word, child, style) {\n    // 如果设置 padding 会导致绝对定位不准确，所以一旦设置就不支持\n    if (typeof word.renderOptions.padding === 'undefined') {\n        var tplpX = parseSize(child, 'w:tblpX');\n        var tplpY = parseSize(child, 'w:tblpY');\n        // style.position = 'absolute';\n        style.top = tplpY;\n        style.left = tplpX;\n    }\n    // 之前想用 float 来实现，但是会导致文字掉下去\n    // const topFromText = parseSize(child, 'w:topFromText');\n    // const bottomFromText = parseSize(child, 'w:bottomFromText');\n    // const rightFromText = parseSize(child, 'w:rightFromText');\n    // const leftFromText = parseSize(child, 'w:leftFromText');\n    // style['float'] = 'left';\n    // style['margin-bottom'] = addSize(style['margin-bottom'], bottomFromText);\n    // style['margin-left'] = addSize(style['margin-left'], leftFromText);\n    // style['margin-right'] = addSize(style['margin-right'], rightFromText);\n    // style['margin-top'] = addSize(style['margin-top'], topFromText);\n}\n/**\n * http://officeopenxml.com/WPtableLayout.php\n */\nfunction parseTblLayout(element, style) {\n    var type = element.getAttribute('w:type');\n    if (type === 'fixed') {\n        style['table-layout'] = 'fixed';\n    }\n}\nfunction parseTablePr(word, element) {\n    var e_1, _a;\n    var properties = {};\n    var tableStyle = {};\n    var tcStyle = {};\n    properties.tblLook = {};\n    properties.cssStyle = tableStyle;\n    properties.tcCSSStyle = tcStyle;\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:tblBorders':\n                    parseBorders(word, child, tableStyle);\n                    properties.insideBorder = parseInsideBorders(word, child);\n                    break;\n                case 'w:tcBorders':\n                    parseBorders(word, child, tableStyle);\n                    break;\n                case 'w:tblInd':\n                    parseTblInd(child, tableStyle);\n                    break;\n                case 'w:jc':\n                    parseTblJc(child, tableStyle);\n                    break;\n                case 'w:tblCellMar':\n                case 'w:tcMar':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblCellMar_1.html\n                    parseCellMargin(child, tcStyle);\n                    break;\n                case 'w:tblStyle':\n                    properties.pStyle = getVal(child);\n                    break;\n                case 'w:tblW':\n                    parseTblW(child, tableStyle);\n                    break;\n                case 'w:shd':\n                    // http://officeopenxml.com/WPtableShading.php\n                    tableStyle['background-color'] = parseShdColor(word, child);\n                    break;\n                case 'w:tblCaption':\n                    properties.tblCaption = getVal(child);\n                    break;\n                case 'w:tblCellSpacing':\n                    parseTblCellSpacing(child, tableStyle);\n                    break;\n                case 'w:tblLayout':\n                    parseTblLayout(child, tableStyle);\n                    break;\n                case 'w:tblLook':\n                    properties.tblLook = parseTblLook(child);\n                    break;\n                case 'w:tblStyleRowBandSize':\n                    properties.rowBandSize = getValNumber(child);\n                    break;\n                case 'w:tblStyleColBandSize':\n                    properties.colBandSize = getValNumber(child);\n                    break;\n                case 'w:tblpPr':\n                    parseTblpPr(word, child, tableStyle);\n                    break;\n                default:\n                    console.warn('parseTableProperties unknown tag', tagName, child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return properties;\n}\n\nexport { parseTablePr };\n", "import { __values } from 'tslib';\nimport { getVal, getValBoolean } from '../OpenXML.js';\nimport { jcToTextAlign } from './jcToTextAlign.js';\nimport { parseTablePr } from './parseTablePr.js';\nimport { parseTblCellSpacing } from './parseTcPr.js';\nimport { parseTrHeight } from './parseTrHeight.js';\n\nfunction parseTrPr(word, element) {\n    var e_1, _a;\n    var cssStyle = {};\n    var tcStyle = {};\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:hidden':\n                    if (getValBoolean(child)) {\n                        cssStyle.display = 'none';\n                    }\n                    break;\n                case 'w:trHeight':\n                    parseTrHeight(child, cssStyle);\n                    break;\n                case 'w:jc':\n                    cssStyle['text-align'] = jcToTextAlign(getVal(child));\n                    break;\n                case 'w:cantSplit':\n                    // 目前也不支持分页\n                    break;\n                case 'w:tblPrEx':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblPrEx_1.html\n                    var tablePr = parseTablePr(word, child);\n                    Object.assign(cssStyle, tablePr.cssStyle);\n                    break;\n                case 'w:tblCellSpacing':\n                    parseTblCellSpacing(child, tcStyle);\n                    break;\n                case 'w:cnfStyle':\n                    // 目前是自动计算的，所以不需要这个了\n                    break;\n                default:\n                    console.warn(\"Tr: Unknown tag \", tagName, child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return {\n        cssStyle: cssStyle\n    };\n}\n\nexport { parseTrPr };\n", "import { __values, __spreadArray, __read } from 'tslib';\n\n/**\n * 将 sdt 内容合并到上层节点，返回合并后的数组\n */\nfunction flattenSdtArray(arr) {\n    var e_1, _a;\n    var returnArray = arr.slice();\n    var index = 0;\n    // 如果 sdt 里还有 sdt 就需要递归\n    var needRecursion = false;\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var child = arr_1_1.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:smartTag':\n                case 'w:customXml':\n                    var customXMLChildren = [].slice.call(child.children);\n                    returnArray.splice.apply(returnArray, __spreadArray([index, 1], __read(customXMLChildren), false));\n                    index = index + customXMLChildren.length;\n                    continue;\n                case 'w:sdt':\n                    var sdtContent = child.getElementsByTagName('w:sdtContent').item(0);\n                    var childSdt = child.getElementsByTagName('w:sdt').item(0);\n                    if (childSdt) {\n                        needRecursion = true;\n                    }\n                    if (sdtContent) {\n                        var sdtContentChildren = [].slice.call(sdtContent.children);\n                        returnArray.splice.apply(returnArray, __spreadArray([index, 1], __read(sdtContentChildren), false));\n                        index = index + sdtContentChildren.length;\n                        continue;\n                    }\n                    break;\n            }\n            index = index + 1;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    if (needRecursion) {\n        return flattenSdtArray(returnArray);\n    }\n    return returnArray;\n}\nfunction mergeSdt(element) {\n    var arr = [].slice.call(element.children);\n    return flattenSdtArray(arr);\n}\n\nexport { mergeSdt };\n", "import { __values } from 'tslib';\nimport { Tr } from '../openxml/word/table/Tr.js';\nimport { parseTc } from './parseTc.js';\nimport { parseTablePr } from './parseTablePr.js';\nimport { parseTrPr } from './parseTrPr.js';\nimport { mergeSdt } from './mergeSdt.js';\n\nfunction parseTr(word, element, rowSpanMap) {\n    var e_1, _a;\n    var tr = new Tr();\n    // 做成对象是为了传递引用来修改\n    var currentCol = {\n        index: 0\n    };\n    try {\n        for (var _b = __values(mergeSdt(element)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:tc':\n                    var tc = parseTc(word, child, currentCol, rowSpanMap);\n                    if (tc) {\n                        tr.tcs.push(tc);\n                    }\n                    break;\n                case 'w:trPr':\n                    tr.properties = parseTrPr(word, child);\n                    break;\n                case 'w:tblPrEx':\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblPrEx_1.html\n                    var tablePr = parseTablePr(word, child);\n                    Object.assign(tr.properties.cssStyle || {}, tablePr.cssStyle);\n                    break;\n                default:\n                    console.warn(\"Tr: Unknown tag \", tagName, child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return tr;\n}\n\nexport { parseTr };\n", "import { __values } from 'tslib';\nimport { Table } from '../openxml/word/Table.js';\nimport { parseTr } from './parseTr.js';\nimport { parseTablePr } from './parseTablePr.js';\nimport { parseSize } from './parseSize.js';\nimport { mergeSdt } from './mergeSdt.js';\n\nfunction parseTblGrid(element) {\n    var e_1, _a;\n    var gridCol = [];\n    var gridColElements = element.getElementsByTagName('w:gridCol');\n    try {\n        for (var gridColElements_1 = __values(gridColElements), gridColElements_1_1 = gridColElements_1.next(); !gridColElements_1_1.done; gridColElements_1_1 = gridColElements_1.next()) {\n            var gridColElement = gridColElements_1_1.value;\n            var w = parseSize(gridColElement, 'w:w');\n            gridCol.push({ w: w });\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (gridColElements_1_1 && !gridColElements_1_1.done && (_a = gridColElements_1.return)) _a.call(gridColElements_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return gridCol;\n}\nfunction parseTable(word, element) {\n    var e_2, _a;\n    var table = new Table();\n    // 用于计算列的跨行，这里记下前面的跨行情况\n    var rowSpanMap = {};\n    try {\n        for (var _b = __values(mergeSdt(element)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tagName = child.tagName;\n            switch (tagName) {\n                case 'w:tblPr':\n                    table.properties = parseTablePr(word, child);\n                    break;\n                case 'w:tr':\n                    table.trs.push(parseTr(word, child, rowSpanMap));\n                    break;\n                case 'w:tblGrid':\n                    table.tblGrid = parseTblGrid(child);\n                    break;\n                default:\n                    console.warn('Table.fromXML unknown tag', tagName, child);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return table;\n}\n\nexport { parseTable };\n", "import { __values } from 'tslib';\nimport { parseChildColor } from '../../../parse/parseChildColor.js';\n\n/**\n * 没去不太清楚这个是什么，目前主要用于形状的颜色\n */\nvar WPSStyle = /** @class */ (function () {\n    function WPSStyle() {\n    }\n    WPSStyle.fromXML = function (word, element) {\n        var e_1, _a;\n        var wpsStyle = new WPSStyle();\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'a:fillRef':\n                        wpsStyle.fillColor = parseChildColor(word, child);\n                        break;\n                    case 'a:lnRef':\n                        wpsStyle.lineColor = parseChildColor(word, child);\n                        break;\n                    case 'a:fontRef':\n                        wpsStyle.fontColor = parseChildColor(word, child);\n                        break;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return wpsStyle;\n    };\n    return WPSStyle;\n}());\n\nexport { WPSStyle };\n", "import { __values } from 'tslib';\nimport { Paragraph } from '../Paragraph.js';\nimport { ShapePr } from '../../drawing/ShapeProperties.js';\nimport { parseTable } from '../../../parse/parseTable.js';\nimport { convertAngle } from '../../../parse/parseSize.js';\nimport { WPSStyle } from './WPSStyle.js';\n\n/**\n * 文档 20.4.2.22，不过大部分属性不支持\n */\nfunction parseBodyPr(element, style) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(element.attributes), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var attribute = _c.value;\n            var name_1 = attribute.name;\n            var value = attribute.value;\n            switch (name_1) {\n                case 'numCol':\n                    if (value !== '1') {\n                        style['column-count'] = value;\n                    }\n                    break;\n                case 'vert':\n                    var val = value;\n                    switch (val) {\n                        case 'vert':\n                            style['writing-mode'] = 'vertical-rl';\n                            style['text-orientation'] = 'sideways';\n                            break;\n                        case 'vert270':\n                        case 'eaVert':\n                            // 不太准确，但 css 也只能做到这样\n                            style['writing-mode'] = 'vertical-rl';\n                            style['text-orientation'] = 'mixed';\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                case 'anchor':\n                    var anchor = value;\n                    switch (anchor) {\n                        case 'b':\n                            style['vertical-align'] = 'bottom';\n                            break;\n                        case 't':\n                            style['vertical-align'] = 'top';\n                            break;\n                        case 'ctr':\n                            style['vertical-align'] = 'middle';\n                            break;\n                    }\n                    break;\n                case 'rot':\n                    var rot = convertAngle(value);\n                    if (rot) {\n                        style['transform'] = \"rotate(\".concat(rot, \"deg)\");\n                    }\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\nvar WPS = /** @class */ (function () {\n    function WPS() {\n        // 外层容器样式\n        this.style = {};\n    }\n    WPS.fromXML = function (word, element) {\n        var e_2, _a, e_3, _b;\n        var wps = new WPS();\n        wps.txbxContent = [];\n        try {\n            for (var _c = __values(element.children), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var child = _d.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'wps:cNvSpPr':\n                    case 'wps:cNvPr':\n                        // 和展现无关\n                        break;\n                    case 'wps:spPr':\n                        wps.spPr = ShapePr.fromXML(word, child);\n                        break;\n                    case 'wps:txbx':\n                        // 文本框内容\n                        // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/txbxContent.html\n                        var txbxContent = child.firstElementChild;\n                        if (txbxContent) {\n                            try {\n                                for (var _e = (e_3 = void 0, __values(txbxContent.children)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                                    var txbxContentChild = _f.value;\n                                    var txbxContentTagName = txbxContentChild.tagName;\n                                    switch (txbxContentTagName) {\n                                        case 'w:p':\n                                            wps.txbxContent.push(Paragraph.fromXML(word, txbxContentChild));\n                                            break;\n                                        case 'w:tbl':\n                                            wps.txbxContent.push(parseTable(word, txbxContentChild));\n                                            break;\n                                    }\n                                }\n                            }\n                            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                            finally {\n                                try {\n                                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                                }\n                                finally { if (e_3) throw e_3.error; }\n                            }\n                        }\n                        else {\n                            console.warn('unknown wps:txbx', child);\n                        }\n                        break;\n                    case 'wps:style':\n                        // http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/style_1.html\n                        wps.wpsStyle = WPSStyle.fromXML(word, child);\n                        break;\n                    case 'wps:bodyPr':\n                        parseBodyPr(child, wps.style);\n                        break;\n                    default:\n                        console.warn('WPS: Unknown tag ', tagName, child);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return wps;\n    };\n    return WPS;\n}());\n\nexport { WPS };\n", "/**\n * 图形，这块没啥文档说明，大部分是靠猜的\n */\nvar Diagram = /** @class */ (function () {\n    function Diagram() {\n    }\n    // 这里的输入是 dgm:relIds 元素\n    Diagram.fromXML = function (word, relidsElement) {\n        var diagram = new Diagram();\n        var dmId = relidsElement.getAttribute('r:dm');\n        if (dmId) {\n            var dmRel = word.getDocumentRels(dmId);\n            if (dmRel) {\n                // 对应的就是 digrams/data1.xml 文件\n                var dm = word.loadWordRelXML(dmRel);\n                console.log(dm);\n            }\n        }\n        return diagram;\n    };\n    return Diagram;\n}());\n\nexport { Diagram };\n", "import { __values } from 'tslib';\nimport { WPS } from './WPS.js';\nimport { ShapePr } from '../../drawing/ShapeProperties.js';\nimport { Pic } from '../../drawing/Pic.js';\n\n/**\n * 图形组，目前是当成 wps 用了\n */\nvar WPG = /** @class */ (function () {\n    function WPG() {\n    }\n    WPG.fromXML = function (word, element) {\n        var e_1, _a;\n        var wpg = new WPG();\n        var wps = [];\n        wpg.wps = wps;\n        wpg.wpg = [];\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'wpg:cNvGrpSpPr':\n                        // 和展现无关\n                        break;\n                    case 'wpg:grpSpPr':\n                        wpg.spPr = ShapePr.fromXML(word, child);\n                        break;\n                    case 'wps:wsp':\n                        wps.push(WPS.fromXML(word, child));\n                        break;\n                    case 'pic:pic':\n                        wpg.pic = Pic.fromXML(word, child);\n                        break;\n                    case 'wpg:grpSp':\n                        // 组合中的组合\n                        wpg.wpg.push(WPG.fromXML(word, child));\n                        break;\n                    default:\n                        console.warn('WPS: Unknown tag ', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return wpg;\n    };\n    return WPG;\n}());\n\nexport { WPG };\n", "import { __values } from 'tslib';\nimport { parseSize, LengthUsage, convertLength } from '../../parse/parseSize.js';\nimport { getAttrNumber, getAttrBoolean } from '../../OpenXML.js';\nimport { Pic } from './Pic.js';\nimport { WPS } from '../word/wps/WPS.js';\nimport { Diagram } from './diagram/Diagram.js';\nimport { WPG } from '../word/wps/WPG.js';\n\n/**\n * 目前图片和 textbox 都会依赖这个\n */\n/**\n * drawing 在文档中的位置，目前有两种情况，child 和 anchor\n */\nvar Position;\n(function (Position) {\n    Position[\"inline\"] = \"inline\";\n    Position[\"anchor\"] = \"anchor\";\n})(Position || (Position = {}));\nfunction parseAnchor(element) {\n    var simplePos = getAttrBoolean(element, 'simplePos', false);\n    var hidden = getAttrBoolean(element, 'hidden', false);\n    var behindDoc = getAttrBoolean(element, 'behindDoc', false);\n    return {\n        simplePos: simplePos,\n        hidden: hidden,\n        behindDoc: behindDoc\n    };\n}\nvar Drawing = /** @class */ (function () {\n    function Drawing() {\n        // drawing 的位置配置\n        this.position = Position.inline;\n    }\n    Drawing.fromXML = function (word, element) {\n        var e_1, _a;\n        var _b;\n        var drawing = new Drawing();\n        var containerStyle = {};\n        drawing.containerStyle = containerStyle;\n        var position = element.firstElementChild;\n        if (position) {\n            if (position.tagName === 'wp:anchor') {\n                drawing.position = Position.anchor;\n                drawing.anchor = parseAnchor(position);\n                var relativeHeight = getAttrNumber(position, 'relativeHeight', 1);\n                containerStyle['z-index'] = relativeHeight;\n            }\n            try {\n                for (var _c = __values(position.children), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var child = _d.value;\n                    var tagName = child.tagName;\n                    switch (tagName) {\n                        case 'wp:simplePos':\n                            // 只有设置了 simplePos 才会生效\n                            // 据说 word 其实不支持这个属性，所以目前实现估计没啥用\n                            if ((_b = drawing.anchor) === null || _b === void 0 ? void 0 : _b.simplePos) {\n                                containerStyle['position'] = 'absolute';\n                                containerStyle['x'] = parseSize(child, 'x', LengthUsage.Emu);\n                                containerStyle['y'] = parseSize(child, 'y', LengthUsage.Emu);\n                            }\n                            break;\n                        case 'wp:positionH':\n                            var relativeFromH = child.getAttribute('relativeFrom');\n                            if (relativeFromH === 'column' ||\n                                relativeFromH === 'page' ||\n                                relativeFromH === 'margin') {\n                                var positionType = child.firstElementChild;\n                                if (positionType) {\n                                    var positionTypeTagName = positionType.tagName;\n                                    containerStyle['position'] = 'absolute';\n                                    if (positionTypeTagName === 'wp:posOffset') {\n                                        containerStyle['left'] = convertLength(positionType.innerHTML, LengthUsage.Emu);\n                                    }\n                                    else {\n                                        containerStyle['left'] = '0';\n                                        console.warn('unsupport positionType', positionTypeTagName);\n                                    }\n                                }\n                            }\n                            else {\n                                console.warn('unsupport positionH relativeFrom', relativeFromH);\n                            }\n                            break;\n                        case 'wp:positionV':\n                            var relativeFromV = child.getAttribute('relativeFrom');\n                            if (relativeFromV === 'paragraph' || relativeFromV === 'page') {\n                                drawing.relativeFromV = relativeFromV;\n                                var positionType = child.firstElementChild;\n                                if (positionType) {\n                                    var positionTypeTagName = positionType.tagName;\n                                    containerStyle['position'] = 'absolute';\n                                    if (positionTypeTagName === 'wp:posOffset') {\n                                        containerStyle['top'] = convertLength(positionType.innerHTML, LengthUsage.Emu);\n                                    }\n                                    else {\n                                        containerStyle['top'] = '0';\n                                        console.warn('unsupport positionType', positionTypeTagName);\n                                    }\n                                }\n                            }\n                            else {\n                                console.warn('unsupport positionV relativeFrom', relativeFromV);\n                            }\n                            break;\n                        case 'wp:docPr':\n                            drawing.id = child.getAttribute('id') || undefined;\n                            drawing.name = child.getAttribute('name') || undefined;\n                            break;\n                        case 'wp:cNvGraphicFramePr':\n                            // 和展现无关\n                            // http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/docPr.html\n                            // http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/cNvGraphicFramePr_1.html\n                            break;\n                        case 'a:graphic':\n                            var graphicData = child.firstElementChild;\n                            var graphicDataChild = graphicData === null || graphicData === void 0 ? void 0 : graphicData.firstElementChild;\n                            if (graphicDataChild) {\n                                var graphicDataChildTagName = graphicDataChild.tagName;\n                                switch (graphicDataChildTagName) {\n                                    case 'pic:pic':\n                                        drawing.pic = Pic.fromXML(word, graphicDataChild);\n                                        break;\n                                    case 'wps:wsp':\n                                        drawing.wps = WPS.fromXML(word, graphicDataChild);\n                                        break;\n                                    case 'wpg:wgp':\n                                        drawing.wpg = WPG.fromXML(word, graphicDataChild);\n                                        break;\n                                    case 'dgm:relIds':\n                                        // 这个是 diagram 的关系\n                                        // http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/relIds.html\n                                        drawing.diagram = Diagram.fromXML(word, graphicDataChild);\n                                        break;\n                                    default:\n                                        console.warn('unknown graphicData child tag', graphicDataChild);\n                                }\n                            }\n                            break;\n                        case 'wp:extent':\n                            containerStyle['width'] = parseSize(child, 'cx', LengthUsage.Emu);\n                            containerStyle['height'] = parseSize(child, 'cy', LengthUsage.Emu);\n                            break;\n                        case 'wp:effectExtent':\n                            // 目前也不支持特效\n                            break;\n                        case 'wp:wrapNone':\n                            // TODO: 还不知道如何处理\n                            // http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/wrapNone.html\n                            break;\n                        case 'wp14:sizeRelH':\n                        case 'wp14:sizeRelV':\n                            // 还不知道是啥，文档都没\n                            break;\n                        default:\n                            console.warn('drawing unknown tag', tagName);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        return drawing;\n    };\n    return Drawing;\n}());\n\nexport { Drawing, Position };\n", "var InstrText = /** @class */ (function () {\n    function InstrText(text) {\n        this.text = text;\n    }\n    return InstrText;\n}());\n\nexport { InstrText };\n", "var NoBreakHyphen = /** @class */ (function () {\n    function NoBreakHyphen() {\n    }\n    return NoBreakHyphen;\n}());\n\nexport { NoBreakHyphen };\n", "var Pict = /** @class */ (function () {\n    function Pict() {\n    }\n    Pict.fromXML = function (word, element) {\n        var pict = new Pict();\n        var imagedataElement = element\n            .getElementsByTagName('v:imagedata')\n            .item(0);\n        if (imagedataElement) {\n            var rId = imagedataElement.getAttribute('r:id') || '';\n            var rel = word.getDocumentRels(rId);\n            if (rel) {\n                pict.src = word.loadImage(rel);\n            }\n        }\n        return pict;\n    };\n    return Pict;\n}());\n\nexport { Pict };\n", "import { __values, __extends } from 'tslib';\nimport { Run } from './Run.js';\n\n/**\n * 注音\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ruby.html\n */\nvar RubyBase = /** @class */ (function () {\n    function RubyBase() {\n    }\n    RubyBase.fromXML = function (word, element) {\n        var e_1, _a;\n        var rubyBase = new RubyBase();\n        rubyBase.children = [];\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:r':\n                        var run = Run.fromXML(word, child);\n                        if (run) {\n                            rubyBase.children.push(run);\n                        }\n                        break;\n                    default:\n                        console.warn('parse Ruby: Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rubyBase;\n    };\n    return RubyBase;\n}());\n// 看起来应该是一样的\n/** @class */ ((function (_super) {\n    __extends(RubyText, _super);\n    function RubyText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RubyText;\n})(RubyBase));\nvar Ruby = /** @class */ (function () {\n    function Ruby() {\n    }\n    Ruby.fromXML = function (word, element) {\n        var e_2, _a;\n        var ruby = new Ruby();\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:rubyPr':\n                        // 应该是没法控制的\n                        break;\n                    case 'w:rt':\n                        ruby.rt = RubyBase.fromXML(word, child);\n                        break;\n                    case 'w:rubyBase':\n                        ruby.rubyBase = RubyBase.fromXML(word, child);\n                        break;\n                    default:\n                        console.warn('parse Ruby: Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return ruby;\n    };\n    return Ruby;\n}());\n\nexport { Ruby };\n", "/**\n * endnote 和 footnote 的分隔符\n */\nvar Separator = /** @class */ (function () {\n    function Separator() {\n    }\n    return Separator;\n}());\n\nexport { Separator };\n", "/**\n * 对应 w:softHyphen\n */\nvar SoftHyphen = /** @class */ (function () {\n    function SoftHyphen() {\n    }\n    return SoftHyphen;\n}());\n\nexport { SoftHyphen };\n", "/**\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/sym.html\n */\nvar Sym = /** @class */ (function () {\n    function Sym() {\n    }\n    Sym.parseXML = function (element) {\n        var sym = new Sym();\n        sym.font = element.getAttribute('w:font') || '';\n        sym.char = element.getAttribute('w:char') || '';\n        return sym;\n    };\n    return Sym;\n}());\n\nexport { Sym };\n", "import { getVal } from '../../OpenXML.js';\nimport { parseSize } from '../../parse/parseSize.js';\n\nvar Tab = /** @class */ (function () {\n    function Tab() {\n    }\n    Tab.fromXML = function (word, element) {\n        var tab = new Tab();\n        tab.pos = parseSize(element, 'w:pos');\n        tab.type = getVal(element);\n        tab.leader = element.getAttribute('w:leader');\n        return tab;\n    };\n    return Tab;\n}());\n\nexport { Tab };\n", "import { __values } from 'tslib';\nimport { getVal } from '../../OpenXML.js';\nimport { parsePr } from '../../parse/parsePr.js';\nimport { Break } from './Break.js';\nimport { Drawing } from '../drawing/Drawing.js';\nimport { InstrText } from './InstrText.js';\nimport { NoBreakHyphen } from './NoBreakHyphen.js';\nimport { Pict } from './Pict.js';\nimport { Ruby } from './Ruby.js';\nimport { Separator } from './Separator.js';\nimport { SoftHyphen } from './SoftHyphen.js';\nimport { Sym } from './Sym.js';\nimport { Tab } from './Tab.js';\n\nvar Text = /** @class */ (function () {\n    function Text(text) {\n        this.preserveSpace = false;\n        this.text = String(text);\n    }\n    return Text;\n}());\nvar Run = /** @class */ (function () {\n    function Run() {\n        this.properties = {};\n        this.children = [];\n    }\n    Run.prototype.addChild = function (child) {\n        if (child) {\n            this.children.push(child);\n        }\n    };\n    Run.parseRunPr = function (word, element) {\n        var cssStyle = parsePr(word, element);\n        var rStyle;\n        var rStyleElement = element.getElementsByTagName('w:rStyle').item(0);\n        if (rStyleElement) {\n            rStyle = getVal(rStyleElement);\n        }\n        return { cssStyle: cssStyle, rStyle: rStyle };\n    };\n    Run.fromXML = function (word, element) {\n        var e_1, _a;\n        var run = new Run();\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:t':\n                        var textContent = child.textContent || '';\n                        var text = new Text(textContent);\n                        run.addChild(text);\n                        break;\n                    case 'w:rPr':\n                        run.properties = Run.parseRunPr(word, child);\n                        break;\n                    case 'w:br':\n                    case 'w:cr':\n                        run.addChild(Break.fromXML(word, child));\n                        break;\n                    case 'w:drawing':\n                        run.addChild(Drawing.fromXML(word, child));\n                        break;\n                    case 'w:tab':\n                        run.addChild(Tab.fromXML(word, child));\n                        break;\n                    case 'w:fldChar':\n                        run.fldChar = child.getAttribute('w:fldCharType');\n                        break;\n                    case 'w:instrText':\n                        run.addChild(new InstrText(child.textContent || ''));\n                        break;\n                    case 'w:lastRenderedPageBreak':\n                        var pageBreak = new Break();\n                        pageBreak.type = 'page';\n                        run.addChild(pageBreak);\n                        break;\n                    case 'w:pict':\n                        run.addChild(Pict.fromXML(word, child));\n                        break;\n                    case 'w:ruby':\n                        run.addChild(Ruby.fromXML(word, child));\n                        break;\n                    case 'w:sym':\n                        run.addChild(Sym.parseXML(child));\n                        break;\n                    case 'mc:AlternateContent':\n                        var drawingChild = child.getElementsByTagName('w:drawing').item(0);\n                        if (drawingChild) {\n                            run.addChild(Drawing.fromXML(word, drawingChild));\n                        }\n                        break;\n                    case 'w:softHyphen':\n                        run.addChild(new SoftHyphen());\n                        break;\n                    case 'w:noBreakHyphen':\n                        run.addChild(new NoBreakHyphen());\n                        break;\n                    case 'w:separator':\n                        run.addChild(new Separator());\n                        break;\n                    case 'w:continuationSeparator':\n                        // TODO: 还不知道是啥\n                        break;\n                    default:\n                        console.warn('parse Run: Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return run;\n    };\n    return Run;\n}());\n\nexport { Run, Text };\n", "import { __values } from 'tslib';\nimport { Run } from './Run.js';\n\n/**\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/hyperlink_2.html\n */\nvar Hyperlink = /** @class */ (function () {\n    function Hyperlink() {\n        this.children = [];\n    }\n    Hyperlink.prototype.addChild = function (Run) {\n        this.children.push(Run);\n    };\n    Hyperlink.fromXML = function (word, element) {\n        var e_1, _a;\n        var hyperlink = new Hyperlink();\n        var rId = element.getAttribute('r:id');\n        if (rId) {\n            var rel = word.getDocumentRels(rId);\n            if (rel) {\n                hyperlink.relation = rel;\n            }\n        }\n        var anchor = element.getAttribute('w:anchor');\n        if (anchor) {\n            hyperlink.anchor = anchor;\n        }\n        var tooltip = element.getAttribute('w:tooltip');\n        if (tooltip) {\n            hyperlink.tooltip = tooltip;\n        }\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:r':\n                        hyperlink.addChild(Run.fromXML(word, child));\n                        break;\n                    default:\n                        console.warn('parse Hyperlink: Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return hyperlink;\n    };\n    return Hyperlink;\n}());\n\nexport { Hyperlink };\n", "import { getVal } from '../../../OpenXML.js';\n\nvar NumberPr = /** @class */ (function () {\n    function NumberPr() {\n    }\n    NumberPr.fromXML = function (word, element) {\n        var numPr = new NumberPr();\n        var ilvl = element.getElementsByTagName('w:ilvl').item(0);\n        if (ilvl) {\n            numPr.ilvl = getVal(ilvl);\n        }\n        var numId = element.getElementsByTagName('w:numId').item(0);\n        if (numId) {\n            numPr.numId = getVal(numId);\n        }\n        return numPr;\n    };\n    return NumberPr;\n}());\n\nexport { NumberPr };\n", "import { __values } from 'tslib';\nimport { BookmarkStart } from './Bookmark.js';\nimport { Hyperlink } from './Hyperlink.js';\nimport { Run } from './Run.js';\n\n/**\n * 通用的文本元素\n */\nvar InlineText = /** @class */ (function () {\n    function InlineText() {\n        this.children = [];\n    }\n    InlineText.prototype.addChild = function (child) {\n        this.children.push(child);\n    };\n    InlineText.fromXML = function (word, element) {\n        var e_1, _a;\n        var smartTag = new InlineText();\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:r':\n                        smartTag.addChild(Run.fromXML(word, child));\n                        break;\n                    case 'w:hyperlink':\n                        smartTag.addChild(Hyperlink.fromXML(word, child));\n                        break;\n                    case 'w:bookmarkStart':\n                        smartTag.addChild(BookmarkStart.fromXML(word, child));\n                    case 'w:bookmarkEnd':\n                        // 没啥用所以不解析了\n                        break;\n                    case 'w:proofErr':\n                    case 'w:noProof':\n                        // 语法检查\n                        break;\n                    case 'w:smartTagPr':\n                        // 看起来对渲染没用\n                        break;\n                    case 'w:del':\n                        // del 看起来主要是用于跟踪历史的，先不支持\n                        break;\n                    default:\n                        console.warn('parse Inline: Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return smartTag;\n    };\n    return InlineText;\n}());\n\nexport { InlineText };\n", "import { InlineText } from './InlineText.js';\n\nvar FldSimple = /** @class */ (function () {\n    function FldSimple() {\n    }\n    FldSimple.fromXML = function (word, element) {\n        var fldSimple = new FldSimple();\n        fldSimple.inlineText = InlineText.fromXML(word, element);\n        fldSimple.instr = element.getAttribute('w:instr') || '';\n        return fldSimple;\n    };\n    return FldSimple;\n}());\n\nexport { FldSimple };\n", "var OMath = /** @class */ (function () {\n    function OMath() {\n    }\n    OMath.fromXML = function (word, element) {\n        var math = new OMath();\n        math.element = element;\n        return math;\n    };\n    return OMath;\n}());\n\nexport { OMath };\n", "import { __values } from 'tslib';\nimport { getVal } from '../../OpenXML.js';\nimport { parsePr } from '../../parse/parsePr.js';\nimport { BookmarkStart } from './Bookmark.js';\nimport { Hyperlink } from './Hyperlink.js';\nimport { NumberPr } from './numbering/NumberProperties.js';\nimport { Run } from './Run.js';\nimport { Tab } from './Tab.js';\nimport { FldSimple } from './FldSimple.js';\nimport { OMath } from '../math/OMath.js';\nimport { mergeSdt } from '../../parse/mergeSdt.js';\n\n/**\n * 段落的定义和解析\n */\n// | SymbolRun\n// | PageBreak\n// | ColumnBreak\n// | SequentialIdentifier\n// | FootnoteReferenceRun\n// | InsertedTextRun\n// | DeletedTextRun\n// | Math\n// | SimpleField\n// | SimpleMailMergeField\n// | Comments\n// | Comment\n// | CommentRangeStart\n// | CommentRangeEnd\n// | CommentReference;\nfunction parseAutoSpace(element) {\n    var autoSpaceDE = element.getElementsByTagName('w:autoSpaceDE').item(0);\n    var autoSpaceDN = element.getElementsByTagName('w:autoSpaceDN').item(0);\n    return !!autoSpaceDE || !!autoSpaceDN;\n}\nvar Paragraph = /** @class */ (function () {\n    function Paragraph() {\n        this.properties = {};\n        this.children = [];\n        this.fldSimples = [];\n    }\n    Paragraph.prototype.addChild = function (child) {\n        this.children.push(child);\n    };\n    Paragraph.parseParagraphPr = function (word, element) {\n        var e_1, _a;\n        var cssStyle = parsePr(word, element);\n        var pStyle;\n        var pStyleTag = element.getElementsByTagName('w:pStyle').item(0);\n        if (pStyleTag) {\n            pStyle = getVal(pStyleTag);\n        }\n        var numPr;\n        var numPrTag = element.getElementsByTagName('w:numPr').item(0);\n        if (numPrTag) {\n            numPr = NumberPr.fromXML(word, numPrTag);\n        }\n        var tabs = [];\n        var tabElements = element.getElementsByTagName('w:tab');\n        try {\n            for (var tabElements_1 = __values(tabElements), tabElements_1_1 = tabElements_1.next(); !tabElements_1_1.done; tabElements_1_1 = tabElements_1.next()) {\n                var tabElement = tabElements_1_1.value;\n                tabs.push(Tab.fromXML(word, tabElement));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (tabElements_1_1 && !tabElements_1_1.done && (_a = tabElements_1.return)) _a.call(tabElements_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var autoSpace = parseAutoSpace(element);\n        return { cssStyle: cssStyle, pStyle: pStyle, numPr: numPr, tabs: tabs, autoSpace: autoSpace };\n    };\n    Paragraph.fromXML = function (word, element) {\n        var e_2, _a;\n        var paragraph = new Paragraph();\n        paragraph.fldSimples = [];\n        paragraph.paraId = element.getAttribute('w14:paraId') || '';\n        try {\n            for (var _b = __values(mergeSdt(element)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:pPr':\n                        paragraph.properties = Paragraph.parseParagraphPr(word, child);\n                        break;\n                    case 'w:r':\n                        paragraph.addChild(Run.fromXML(word, child));\n                        break;\n                    case 'w:hyperlink':\n                        paragraph.addChild(Hyperlink.fromXML(word, child));\n                        break;\n                    case 'w:bookmarkStart':\n                        paragraph.addChild(BookmarkStart.fromXML(word, child));\n                    case 'w:bookmarkEnd':\n                        // 没啥用所以不解析了\n                        break;\n                    case 'w:proofErr':\n                    case 'w:noProof':\n                        // 语法检查\n                        break;\n                    case 'w:del':\n                    case 'w:moveTo':\n                    case 'w:moveFrom':\n                        // del 看起来主要是用于跟踪历史的，先不支持\n                        break;\n                    case 'w:fldSimple':\n                        // 这个目前还不想支持\n                        paragraph.fldSimples.push(FldSimple.fromXML(word, child));\n                        break;\n                    case 'm:oMathPara':\n                    case 'm:oMath':\n                        paragraph.addChild(OMath.fromXML(word, child));\n                        break;\n                    default:\n                        console.warn('parse Paragraph: Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return paragraph;\n    };\n    return Paragraph;\n}());\n\nexport { Paragraph };\n", "import { __values } from 'tslib';\nimport { parseTcPr } from '../parse/parseTcPr.js';\nimport { getVal } from '../OpenXML.js';\nimport { Paragraph } from './word/Paragraph.js';\nimport { Run } from './word/Run.js';\nimport { parseTablePr } from '../parse/parseTablePr.js';\nimport { parseTrPr } from '../parse/parseTrPr.js';\n\n/**\n * 解析共享样式 Style\n */\n/**\n * 解析默认样式 docDefaults\n */\nfunction parseDefaultStyle(word, element) {\n    var defaultStyle = {};\n    if (!element) {\n        return defaultStyle;\n    }\n    var rPrDefault = element.getElementsByTagName('w:rPrDefault').item(0);\n    if (rPrDefault) {\n        var rPr = rPrDefault.getElementsByTagName('w:rPr').item(0);\n        if (rPr) {\n            defaultStyle.rPr = Run.parseRunPr(word, rPr);\n        }\n    }\n    var pPrDefault = element.getElementsByTagName('w:pPrDefault').item(0);\n    if (pPrDefault) {\n        var pPr = pPrDefault.getElementsByTagName('w:pPr').item(0);\n        if (pPr) {\n            defaultStyle.pPr = Paragraph.parseParagraphPr(word, pPr);\n        }\n    }\n    return defaultStyle;\n}\nfunction parseTblStylePr(word, element) {\n    var e_1, _a;\n    var style = {};\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tag = child.tagName;\n            switch (tag) {\n                case 'w:rPr':\n                    style.rPr = Run.parseRunPr(word, child);\n                    break;\n                case 'w:pPr':\n                    style.pPr = Paragraph.parseParagraphPr(word, child);\n                    break;\n                case 'w:tblPr':\n                    style.tblPr = parseTablePr(word, child);\n                    break;\n                case 'w:tcPr':\n                    style.tcPr = parseTcPr(word, child);\n                    break;\n                case 'w:trPr':\n                    style.trPr = parseTrPr(word, child);\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return style;\n}\n/**\n * 解析单个样式标签\n */\nfunction parseStyle(word, element) {\n    var e_2, _a;\n    var style = {};\n    style.id = element.getAttribute('w:styleId') || '';\n    style.type = element.getAttribute('w:type');\n    style.tblStylePr = {};\n    Object.assign(style, parseTblStylePr(word, element));\n    try {\n        for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var tag = child.tagName;\n            switch (tag) {\n                case 'w:name':\n                    style.name = getVal(child);\n                    break;\n                case 'w:basedOn':\n                    style.basedOn = getVal(child);\n                    break;\n                case 'w:rPr':\n                case 'w:pPr':\n                case 'w:tblPr':\n                case 'w:tcPr':\n                case 'w:trPr':\n                    // 这些在 parseTblStylePr 里实现了\n                    break;\n                case 'w:tblStylePr':\n                    var type = child.getAttribute('w:type');\n                    style.tblStylePr[type] = parseTblStylePr(word, child);\n                    break;\n                case 'w:next':\n                case 'w:link':\n                case 'w:unhideWhenUsed':\n                case 'w:qFormat':\n                case 'w:rsid':\n                case 'w:uiPriority':\n                case 'w:semiHidden':\n                case 'w:autoRedefine':\n                    // 看起来和展现不相关的配置\n                    break;\n                default:\n                    console.warn('parseStyle Unknown tag', tag, child);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return style;\n}\n/**\n * 解析 styles.xml\n */\nfunction parseStyles(word, doc) {\n    var e_3, _a;\n    var styles = {\n        styleMap: {}\n    };\n    var stylesElement = Array.from(doc.getElementsByTagName('w:style'));\n    try {\n        for (var stylesElement_1 = __values(stylesElement), stylesElement_1_1 = stylesElement_1.next(); !stylesElement_1_1.done; stylesElement_1_1 = stylesElement_1.next()) {\n            var styleElement = stylesElement_1_1.value;\n            var style = parseStyle(word, styleElement);\n            if (style.id) {\n                styles.styleMap[style.id] = style;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (stylesElement_1_1 && !stylesElement_1_1.done && (_a = stylesElement_1.return)) _a.call(stylesElement_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    styles.defaultStyle = parseDefaultStyle(word, doc.getElementsByTagName('w:docDefaults').item(0));\n    return styles;\n}\n\nexport { parseStyles };\n", "import { __values } from 'tslib';\nimport { convertAngle } from '../parse/parseSize.js';\nimport { getAttrPercent, getVal } from '../OpenXML.js';\n\n/**\n * 主要参考 14.2.7 Theme Part\n */\n// http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/clrScheme.html\nvar ClrScheme = /** @class */ (function () {\n    function ClrScheme() {\n        this.colors = {};\n    }\n    return ClrScheme;\n}());\nfunction parseClrScheme(doc) {\n    var e_1, _a;\n    var scheme = new ClrScheme();\n    if (!doc) {\n        return scheme;\n    }\n    scheme.name = doc.getAttribute('name') || '';\n    try {\n        for (var _b = __values(doc.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var colorName = child.tagName.replace('a:', '');\n            var clr = child.firstElementChild;\n            if (clr) {\n                var clrName = clr.nodeName.replace('a:', '');\n                if (clrName === 'sysClr') {\n                    scheme.colors[colorName] = clr.getAttribute('lastClr') || '';\n                }\n                else if (clrName === 'srgbClr') {\n                    scheme.colors[colorName] = '#' + clr.getAttribute('val') || '';\n                }\n                else if (clrName === 'scrgbClr') {\n                    // https://c-rex.net/projects/samples/ooxml/e1/Part4/OOXML_P4_DOCX_scrgbClr_topic_ID0EOOPJB.html\n                    // 没测过\n                    var r = getAttrPercent(child, 'r') * 256;\n                    var g = getAttrPercent(child, 'g') * 256;\n                    var b = getAttrPercent(child, 'b') * 256;\n                    scheme.colors[colorName] = \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n                }\n                else if (clrName === 'hslClr') {\n                    // https://c-rex.net/projects/samples/ooxml/e1/Part4/OOXML_P4_DOCX_hslClr_topic_ID0EQ5FJB.html\n                    // 没测过\n                    var h = convertAngle(child.getAttribute('hue'));\n                    var s = getAttrPercent(child, 'sat') * 100;\n                    var l = getAttrPercent(child, 'lum') * 100;\n                    scheme.colors[colorName] = \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\");\n                }\n                else if (clrName === 'prstClr') {\n                    scheme.colors[colorName] = getVal(child);\n                }\n                else {\n                    console.error('unknown clr name', clrName);\n                }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return scheme;\n}\n// TODO: 字体解析\nfunction parseFontScheme(doc) {\n    var scheme = {};\n    return scheme;\n}\nfunction parseFmtScheme(data) {\n    var scheme = {};\n    return scheme;\n}\nfunction parseThemeElements(element) {\n    var themeElements = {};\n    if (element) {\n        themeElements.clrScheme = parseClrScheme(element.getElementsByTagName('a:clrScheme').item(0));\n        themeElements.fontScheme = parseFontScheme(element.getElementsByTagName('a:fontScheme').item(0));\n        themeElements.fmtScheme = parseFmtScheme(element.getElementsByTagName('a:fmtScheme').item(0));\n    }\n    return themeElements;\n}\nfunction parseTheme(doc) {\n    var theme = {};\n    theme.themeElements = parseThemeElements(doc.getElementsByTagName('a:themeElements').item(0));\n    return theme;\n}\n\nexport { parseTheme };\n", "import { __spreadArray, __read } from 'tslib';\n\n/**\n * dom 相关的操作\n */\n/**\n * 样式对象转成 css 文本\n */\nfunction styleToText(style) {\n    if (style === void 0) { style = {}; }\n    var text = '';\n    for (var key in style) {\n        var value = style[key];\n        if (value != null && value !== '') {\n            text += \"\".concat(key, \": \").concat(value, \";\\n\");\n        }\n    }\n    return text;\n}\n/**\n * 设置元素样式\n */\nfunction applyStyle(el, style) {\n    if (!style) {\n        return;\n    }\n    for (var key in style) {\n        var value = style[key];\n        if (value != null && value !== '') {\n            el.style.setProperty(key, String(value));\n        }\n    }\n}\n/**\n * 创建元素\n */\nfunction createElement(tagName) {\n    return document.createElement(tagName);\n}\n/**\n * 创建 SVG 元素\n */\nfunction createSVGElement(tagName) {\n    return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n}\n/**\n * 添加子节点，会做一些判断避免报错\n */\nfunction appendChild(parent, child) {\n    if (parent && child) {\n        parent.appendChild(child);\n    }\n}\n/**\n * 删除子节点，会做一些判断避免报错\n */\nfunction removeChild(parent, child) {\n    if (parent && child) {\n        parent.removeChild(child);\n    }\n}\n/**\n * 添加 css 类\n */\nfunction addClassName(el, className) {\n    if (el && className) {\n        el.classList.add(className);\n    }\n}\n/**\n * 批量添加 css 类\n */\nfunction addClassNames(el, classNames) {\n    var _a;\n    if (el && classNames) {\n        (_a = el.classList).add.apply(_a, __spreadArray([], __read(classNames), false));\n    }\n}\n\nexport { addClassName, addClassNames, appendChild, applyStyle, createElement, createSVGElement, removeChild, styleToText };\n", "import { createElement } from '../util/dom.js';\n\n/**\n * 解析 br http://officeopenxml.com/WPtextSpecialContent-break.php\n * 其实还有 column 和 page，但目前还没实现分页渲染，所以目前先简单处理，后续再看看如何处理\n * @returns 生成的 dom 结构\n */\nfunction renderBr(word, brak) {\n    if (brak.type === 'page') {\n        word.breakPage = true;\n    }\n    var br = createElement('br');\n    return br;\n}\n\nexport { renderBr };\n", "import { __values } from 'tslib';\nimport { styleToText, createElement } from '../util/dom.js';\n\n/**\n * 渲染内置样式及自定义样式\n */\n/**\n * 文档基础默认样式\n */\nfunction generateDefaultStyle(word) {\n    var _a;\n    var styles = word.styles;\n    var defaultStyle = styles.defaultStyle;\n    var defaultPStyle = '';\n    if (defaultStyle === null || defaultStyle === void 0 ? void 0 : defaultStyle.pPr) {\n        defaultPStyle = styleToText(defaultStyle.pPr.cssStyle);\n    }\n    var defaultRStyle = '';\n    if (defaultStyle === null || defaultStyle === void 0 ? void 0 : defaultStyle.rPr) {\n        defaultRStyle = styleToText(defaultStyle.rPr.cssStyle);\n    }\n    var hyphens = ((_a = word.settings) === null || _a === void 0 ? void 0 : _a.autoHyphenation) ? 'hyphens: auto;' : '';\n    var classPrefix = word.getClassPrefix();\n    return \"\\n\\n\\n  /** docDefaults **/\\n  .\".concat(classPrefix, \" {\\n    --docx-theme-font-minorHAnsi: Calibri,  Helvetica, Arial, 'Helvetica Neue';\\n    --docx-theme-font-minorEastAsia: 'PingFang SC', 'Microsoft YaHei', 'Hiragino Sans GB', 'STHeiti',\\n    'Microsoft YaHei';\\n  }\\n\\n  .\").concat(classPrefix, \" p {\\n    margin: 0;\\n    padding: 0;\\n    line-height: 1.5;\\n    \").concat(hyphens, \"\\n  }\\n\\n  .\").concat(classPrefix, \" .justify {\\n    text-align-last: left;\\n  }\\n\\n  .\").concat(classPrefix, \" table {\\n    border-spacing: 0;\\n  }\\n\\n  .\").concat(classPrefix, \" .\").concat(classPrefix, \"-p {\\n    \").concat(defaultPStyle, \"\\n  }\\n\\n  .\").concat(classPrefix, \" .\").concat(classPrefix, \"-r {\\n    overflow-wrap: break-word;\\n    \").concat(defaultRStyle, \"\\n  }\\n  \");\n}\n/**\n * 生成表格级别样式\n */\nfunction generateTableStyle(classPrefix, styleDisplayId, style) {\n    var tblStyleText = '';\n    var tblPr = style.tblPr;\n    var tcPr = style.tcPr;\n    if (tblPr) {\n        var tblStyle = styleToText(tblPr.cssStyle);\n        var tblTcStyle = styleToText(tblPr.tcCSSStyle);\n        tblStyleText += \"\\n .\".concat(classPrefix, \" .\").concat(styleDisplayId, \" {\\n  border-collapse: collapse;\\n  \").concat(tblStyle, \"\\n }\\n\\n .\").concat(classPrefix, \" .\").concat(styleDisplayId, \" > tbody > tr > td {\\n  \").concat(tblTcStyle, \"\\n }\\n \");\n        if (tblPr.insideBorder) {\n            var insideBorder = tblPr.insideBorder;\n            if (insideBorder.H) {\n                tblStyleText += \"\\n      .\".concat(classPrefix, \" .\").concat(styleDisplayId, \" > tbody > tr > td {\\n        border-top: \").concat(insideBorder.H, \";\\n      }\");\n            }\n            if (insideBorder.V) {\n                tblStyleText += \"\\n      .\".concat(classPrefix, \" .\").concat(styleDisplayId, \" > tbody > tr > td {\\n        border-left: \").concat(insideBorder.V, \";\\n      }\");\n            }\n        }\n    }\n    if (tcPr) {\n        var tcStyle = styleToText(tcPr.cssStyle);\n        tblStyleText += \"\\n    .\".concat(classPrefix, \" .\").concat(styleDisplayId, \" > tbody > tr > td {\\n     \").concat(tcStyle, \"\\n    }\\n    \");\n    }\n    return tblStyleText;\n}\n// 用于生成表格 override 相关的样式，用于行或列\nfunction genTblOverrideStyle(tblPrefix, classPrefix, overrideType, tblStylePrStyle) {\n    var _a, _b, _c, _d, _e, _f;\n    var styleText = '';\n    var trStyle = styleToText((_a = tblStylePrStyle.trPr) === null || _a === void 0 ? void 0 : _a.cssStyle);\n    var enableType = '';\n    // 在 tblLook 里可以通过这些属性来控制是否启用\n    switch (overrideType) {\n        case 'firstCol':\n            enableType = 'enable-firstColumn';\n            break;\n        case 'lastCol':\n            enableType = 'enable-lastColumn';\n            break;\n        case 'firstRow':\n            enableType = 'enable-firstRow';\n            break;\n        case 'lastRow':\n            enableType = 'enable-lastRow';\n            break;\n        case 'band1Horz':\n        case 'band2Horz':\n            enableType = 'enable-hBand';\n            break;\n        case 'band1Vert':\n        case 'band2Vert':\n            enableType = 'enable-vBand';\n            break;\n    }\n    if (trStyle) {\n        styleText += \"\\n    \".concat(tblPrefix, \".\").concat(enableType, \" > tbody > tr.\").concat(overrideType, \"{\\n       \").concat(trStyle, \"\\n    }\\n    \");\n    }\n    var tcStyle = styleToText((_b = tblStylePrStyle.tcPr) === null || _b === void 0 ? void 0 : _b.cssStyle);\n    if (tcStyle) {\n        styleText += \"\\n    \".concat(tblPrefix, \".\").concat(enableType, \" > tbody > tr > td.\").concat(overrideType, \" {\\n       \").concat(tcStyle, \"\\n    }\\n    \");\n        if ((_c = tblStylePrStyle.tcPr) === null || _c === void 0 ? void 0 : _c.insideBorder) {\n            var insideBorder = (_d = tblStylePrStyle.tcPr) === null || _d === void 0 ? void 0 : _d.insideBorder;\n            if (insideBorder.H) {\n                styleText += \"\\n          \".concat(tblPrefix, \".\").concat(enableType, \" > tbody > tr > td.\").concat(overrideType, \" {\\n            border-top: \").concat(insideBorder.H, \";\\n          }\");\n            }\n            if (insideBorder.V) {\n                // 这个主要是为了应对 GridTable5Dark-Accent5 里 firstRow 的情况，它其实有 right 设置，也得去掉\n                if (insideBorder.V === 'none') {\n                    styleText += \"\\n          \".concat(tblPrefix, \".\").concat(enableType, \" > tbody > tr > td.\").concat(overrideType, \" {\\n            border-left: none;\\n            border-right: none;\\n          }\");\n                }\n                else {\n                    styleText += \"\\n          \".concat(tblPrefix, \".\").concat(enableType, \" > tbody > tr > td.\").concat(overrideType, \" {\\n            border-left: \").concat(insideBorder.V, \";\\n          }\");\n                }\n            }\n        }\n    }\n    var pStyle = styleToText((_e = tblStylePrStyle.pPr) === null || _e === void 0 ? void 0 : _e.cssStyle);\n    if (pStyle) {\n        styleText += \"\\n    \".concat(tblPrefix, \".\").concat(enableType, \" > tbody > tr > td.\").concat(overrideType, \" > .\").concat(classPrefix, \"-p {\\n       \").concat(pStyle, \"\\n    }\\n    \");\n    }\n    var rStyle = styleToText((_f = tblStylePrStyle.rPr) === null || _f === void 0 ? void 0 : _f.cssStyle);\n    if (rStyle) {\n        styleText += \"\\n    \".concat(tblPrefix, \".\").concat(enableType, \" > tbody > tr > td.\").concat(overrideType, \" > .\").concat(classPrefix, \"-p > .\").concat(classPrefix, \"-r {\\n       \").concat(rStyle, \"\\n    }\\n    \");\n    }\n    return styleText;\n}\n// 表格覆盖样式的顺序，权重高的放后面\nvar overrideTypeOrder = new Set([\n    'wholeTable',\n    'band1Horz',\n    'band2Horz',\n    'band1Vert',\n    'band2Vert',\n    'firstCol',\n    'firstRow',\n    'lastCol',\n    'lastRow',\n    'neCell',\n    'nwCell',\n    'seCell',\n    'swCell'\n]);\n// 生成表格覆盖样式\nfunction genOverrideTblStylePr(classPrefix, styleDisplayId, tblStylePr) {\n    var e_1, _a;\n    if (!tblStylePr) {\n        return '';\n    }\n    var tblStylePrText = '';\n    var stylePrefix = \".\".concat(classPrefix, \" .\").concat(styleDisplayId);\n    try {\n        for (var overrideTypeOrder_1 = __values(overrideTypeOrder), overrideTypeOrder_1_1 = overrideTypeOrder_1.next(); !overrideTypeOrder_1_1.done; overrideTypeOrder_1_1 = overrideTypeOrder_1.next()) {\n            var overrideType = overrideTypeOrder_1_1.value;\n            if (overrideType in tblStylePr) {\n                var overrideStylePr = tblStylePr[overrideType];\n                tblStylePrText += genTblOverrideStyle(stylePrefix, classPrefix, overrideType, overrideStylePr);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (overrideTypeOrder_1_1 && !overrideTypeOrder_1_1.done && (_a = overrideTypeOrder_1.return)) _a.call(overrideTypeOrder_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return tblStylePrText;\n}\n/**\n * 生成样式类\n */\nfunction generateStyle(word) {\n    var styles = word.styles;\n    var styleMap = styles.styleMap;\n    var classPrefix = word.getClassPrefix();\n    var styleResult = '';\n    for (var styleId in styleMap) {\n        var styleDisplayId = word.getStyleIdDisplayName(styleId);\n        var styleData = styleMap[styleId];\n        var pPr = styleData.pPr;\n        var pStyleText = '';\n        if (pPr) {\n            var pStyle = styleToText(pPr.cssStyle);\n            pStyleText = \"\\n      .\".concat(classPrefix, \" .\").concat(styleDisplayId, \" {\\n        \").concat(pStyle, \"\\n      }\\n      \");\n        }\n        var rStyleText = '';\n        if (styleData.rPr) {\n            var rStyle = styleToText(styleData.rPr.cssStyle);\n            rStyleText = \"\\n      .\".concat(classPrefix, \" .\").concat(styleDisplayId, \" > .\").concat(classPrefix, \"-r {\\n        \").concat(rStyle, \"\\n      }\\n      \");\n        }\n        var tblStyleText = generateTableStyle(classPrefix, styleDisplayId, styleData);\n        var tblStylePr = genOverrideTblStylePr(classPrefix, styleDisplayId, styleData.tblStylePr);\n        styleResult += \"\\n    \".concat(pStyleText, \"\\n    \").concat(rStyleText, \"\\n    \").concat(tblStyleText, \"\\n    \").concat(tblStylePr, \"\\n    \");\n    }\n    return styleResult;\n}\n/**\n * 渲染所有样式\n */\nfunction renderStyle(word) {\n    var style = createElement('style');\n    var docDefaults = generateDefaultStyle(word);\n    var styleText = generateStyle(word);\n    style.textContent = \"\\n  \".concat(docDefaults, \"\\n\\n  \").concat(styleText, \"\\n  \");\n    return style;\n}\n\nexport { generateTableStyle, renderStyle };\n", "import { applyStyle, addClassName, addClassNames } from '../util/dom.js';\n\n/**\n * 设置元素样式，因为好几个地方用所以统一一下\n */\nfunction setElementStyle(word, element, properties) {\n    if (!properties) {\n        return;\n    }\n    if (properties.cssStyle) {\n        applyStyle(element, properties.cssStyle);\n        // 目前默认最后一行用左对齐\n        // 这里用 class 的主要原因是方便用户自己覆盖，比如可能有语言需要右对齐\n        if (properties.cssStyle['text-align'] === 'justify') {\n            addClassName(element, 'justify');\n        }\n    }\n    if (properties.pStyle) {\n        addClassNames(element, word.getStyleClassName(properties.pStyle));\n    }\n    if (properties.rStyle) {\n        addClassNames(element, word.getStyleClassName(properties.rStyle));\n    }\n}\n\nexport { setElementStyle };\n", "import { __values } from 'tslib';\nimport { Paragraph } from '../openxml/word/Paragraph.js';\nimport { Table } from '../openxml/word/Table.js';\nimport { addClassName, applyStyle, appendChild } from '../util/dom.js';\nimport renderParagraph from './renderParagraph.js';\nimport { generateTableStyle } from './renderStyle.js';\nimport { setElementStyle } from './setElementStyle.js';\n\n/**\n * 设置 td 的类，用于支持各种表格条件样式\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ST_TblStyleOverrideType.html\n */\nfunction setTdClassName(rowIndex, colIndex, rowLength, colLength, element, rowBandSize, colBandSize) {\n    // 左上角\n    if (rowIndex === 0 && colIndex === 0) {\n        element.classList.add('nwCell');\n    }\n    // 右上角\n    if (rowIndex === 0 && colIndex === colLength - 1) {\n        element.classList.add('neCell');\n    }\n    // 左下角\n    if (rowIndex === rowLength - 1 && colIndex === 0) {\n        element.classList.add('swCell');\n    }\n    // 右下角\n    if (rowIndex === rowLength - 1 && colIndex === colLength - 1) {\n        element.classList.add('seCell');\n    }\n    // 第一行\n    if (rowIndex === 0) {\n        element.classList.add('firstRow');\n    }\n    // 最后一行\n    if (rowIndex === rowLength - 1) {\n        element.classList.add('lastRow');\n    }\n    // 第一列\n    if (colIndex === 0) {\n        element.classList.add('firstCol');\n    }\n    // 最后一列\n    if (colIndex === colLength - 1) {\n        element.classList.add('lastCol');\n    }\n    // 奇数行\n    if (isOdd(rowIndex + 1)) {\n        element.classList.add('band1Horz');\n    }\n    // 偶数行\n    if (!isOdd(rowIndex + 1)) {\n        element.classList.add('band2Horz');\n    }\n    // 奇数列\n    if (isOdd(colIndex + 1)) {\n        element.classList.add('band1Vert');\n    }\n    // 偶数列\n    if (!isOdd(colIndex + 1)) {\n        element.classList.add('band2Vert');\n    }\n}\n/**\n * 根据倍数判断是否是奇数，目前看来似乎 word 编辑器也没提供 size 设置\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblStyleRowBandSize.html\n */\nfunction isOdd(num, size) {\n    return !(num % 2);\n}\n/**\n * 渲染表格\n */\nfunction renderTable(word, table) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    var tableEl = document.createElement('table');\n    var properties = table.properties;\n    if (properties.tblCaption) {\n        var caption = document.createElement('caption');\n        caption.textContent = properties.tblCaption;\n        tableEl.appendChild(caption);\n    }\n    if (properties.tblLook) {\n        for (var key in properties.tblLook) {\n            // 这两个属性是反过来的\n            if (key === 'noHBand') {\n                if (!properties.tblLook[key]) {\n                    addClassName(tableEl, 'enable-hBand');\n                }\n            }\n            else if (key === 'noVBand') {\n                if (!properties.tblLook[key]) {\n                    addClassName(tableEl, 'enable-vBand');\n                }\n            }\n            else if (properties.tblLook[key]) {\n                addClassName(tableEl, 'enable-' + key);\n            }\n        }\n    }\n    setElementStyle(word, tableEl, properties);\n    var customClass = word.genClassName();\n    tableEl.classList.add(customClass);\n    word.appendStyle(generateTableStyle(word.getClassPrefix(), customClass, { tblPr: properties }));\n    // 这里或许应该生成 classname 来支持 tcCSSStyle\n    var tbody = document.createElement('tbody');\n    tableEl.appendChild(tbody);\n    var rowIndex = 0;\n    try {\n        for (var _d = __values(table.trs), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var tr = _e.value;\n            var trEl = document.createElement('tr');\n            tbody.appendChild(trEl);\n            var colIndex = 0;\n            try {\n                for (var _f = (e_2 = void 0, __values(tr.tcs)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                    var tc = _g.value;\n                    var tdEl = document.createElement('td');\n                    trEl.appendChild(tdEl);\n                    setTdClassName(rowIndex, colIndex, table.trs.length, tr.tcs.length, tdEl, properties.rowBandSize, properties.colBandSize);\n                    // tr 也能设置 tc style，所以先应用这个\n                    if (tr.properties.tcStyle) {\n                        applyStyle(tdEl, tr.properties.tcStyle);\n                    }\n                    var tcPr = tc.properties;\n                    setElementStyle(word, tdEl, tcPr);\n                    if (tcPr.gridSpan) {\n                        tdEl.colSpan = tcPr.gridSpan;\n                    }\n                    if (tcPr.rowSpan) {\n                        tdEl.rowSpan = tcPr.rowSpan;\n                    }\n                    var renderSpace = true;\n                    // 如果有 tcPr.hideMark 就不渲染空格\n                    if (tcPr.hideMark) {\n                        renderSpace = false;\n                    }\n                    try {\n                        for (var _h = (e_3 = void 0, __values(tc.children)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                            var tcChild = _j.value;\n                            if (tcChild instanceof Paragraph) {\n                                var p = renderParagraph(word, tcChild, renderSpace);\n                                appendChild(tdEl, p);\n                            }\n                            else if (tcChild instanceof Table) {\n                                // 如果已经有表格的话，就不再渲染空段落了，避免底部多个空行\n                                renderSpace = false;\n                                appendChild(tdEl, renderTable(word, tcChild));\n                            }\n                            else {\n                                console.warn('unknown child type: ' + tcChild);\n                            }\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                    if (tcPr.rowSpan) {\n                        colIndex += tcPr.rowSpan;\n                    }\n                    else {\n                        colIndex++;\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            rowIndex++;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return tableEl;\n}\n\nexport { renderTable as default };\n", "var presetShape = {\n    accentBorderCallout1: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj4',\n                f: 'val -38333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    accentBorderCallout2: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj6',\n                f: 'val -46667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    accentBorderCallout3: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 100000'\n            },\n            {\n                n: 'adj6',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj7',\n                f: 'val 112963'\n            },\n            {\n                n: 'adj8',\n                f: 'val -8333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            },\n            {\n                n: 'y4',\n                f: '*/ h adj7 100000'\n            },\n            {\n                n: 'x4',\n                f: '*/ w adj8 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    accentCallout1: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj4',\n                f: 'val -38333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    accentCallout2: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj6',\n                f: 'val -46667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    accentCallout3: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 100000'\n            },\n            {\n                n: 'adj6',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj7',\n                f: 'val 112963'\n            },\n            {\n                n: 'adj8',\n                f: 'val -8333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            },\n            {\n                n: 'y4',\n                f: '*/ h adj7 100000'\n            },\n            {\n                n: 'x4',\n                f: '*/ w adj8 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonBackPrevious: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonBeginning: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 1 8'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 1 4'\n            },\n            {\n                n: 'g16',\n                f: '+- g11 g14 0'\n            },\n            {\n                n: 'g17',\n                f: '+- g11 g15 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonBlank: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonDocument: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss 9 32'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 16'\n            },\n            {\n                n: 'g14',\n                f: '+- g12 0 g13'\n            },\n            {\n                n: 'g15',\n                f: '+- g9 g13 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g14',\n                            y: 'g9'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonEnd: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 3 4'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 7 8'\n            },\n            {\n                n: 'g16',\n                f: '+- g11 g14 0'\n            },\n            {\n                n: 'g17',\n                f: '+- g11 g15 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g16',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g17',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonForwardNext: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonHelp: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 1 7'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 3 14'\n            },\n            {\n                n: 'g16',\n                f: '*/ g13 2 7'\n            },\n            {\n                n: 'g19',\n                f: '*/ g13 3 7'\n            },\n            {\n                n: 'g20',\n                f: '*/ g13 4 7'\n            },\n            {\n                n: 'g21',\n                f: '*/ g13 17 28'\n            },\n            {\n                n: 'g23',\n                f: '*/ g13 21 28'\n            },\n            {\n                n: 'g24',\n                f: '*/ g13 11 14'\n            },\n            {\n                n: 'g27',\n                f: '+- g9 g16 0'\n            },\n            {\n                n: 'g29',\n                f: '+- g9 g21 0'\n            },\n            {\n                n: 'g30',\n                f: '+- g9 g23 0'\n            },\n            {\n                n: 'g31',\n                f: '+- g9 g24 0'\n            },\n            {\n                n: 'g33',\n                f: '+- g11 g15 0'\n            },\n            {\n                n: 'g36',\n                f: '+- g11 g19 0'\n            },\n            {\n                n: 'g37',\n                f: '+- g11 g20 0'\n            },\n            {\n                n: 'g41',\n                f: '*/ g13 1 14'\n            },\n            {\n                n: 'g42',\n                f: '*/ g13 3 28'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g16',\n                        hR: 'g16',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g15',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g41',\n                        hR: 'g42',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g15',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g41',\n                        hR: 'g42',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g14',\n                        stAng: '0',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g42',\n                        hR: 'g42',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g16',\n                        hR: 'g16',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g15',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g41',\n                        hR: 'g42',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g15',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g41',\n                        hR: 'g42',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g14',\n                        stAng: '0',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g42',\n                        hR: 'g42',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g16',\n                        hR: 'g16',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g15',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g41',\n                        hR: 'g42',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g15',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g41',\n                        hR: 'g42',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g14',\n                        hR: 'g14',\n                        stAng: '0',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g42',\n                        hR: 'g42',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonHome: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 1 16'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 1 8'\n            },\n            {\n                n: 'g16',\n                f: '*/ g13 3 16'\n            },\n            {\n                n: 'g17',\n                f: '*/ g13 5 16'\n            },\n            {\n                n: 'g18',\n                f: '*/ g13 7 16'\n            },\n            {\n                n: 'g19',\n                f: '*/ g13 9 16'\n            },\n            {\n                n: 'g20',\n                f: '*/ g13 11 16'\n            },\n            {\n                n: 'g21',\n                f: '*/ g13 3 4'\n            },\n            {\n                n: 'g22',\n                f: '*/ g13 13 16'\n            },\n            {\n                n: 'g23',\n                f: '*/ g13 7 8'\n            },\n            {\n                n: 'g24',\n                f: '+- g9 g14 0'\n            },\n            {\n                n: 'g25',\n                f: '+- g9 g16 0'\n            },\n            {\n                n: 'g26',\n                f: '+- g9 g17 0'\n            },\n            {\n                n: 'g27',\n                f: '+- g9 g21 0'\n            },\n            {\n                n: 'g28',\n                f: '+- g11 g15 0'\n            },\n            {\n                n: 'g29',\n                f: '+- g11 g18 0'\n            },\n            {\n                n: 'g30',\n                f: '+- g11 g19 0'\n            },\n            {\n                n: 'g31',\n                f: '+- g11 g20 0'\n            },\n            {\n                n: 'g32',\n                f: '+- g11 g22 0'\n            },\n            {\n                n: 'g33',\n                f: '+- g11 g23 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g28',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g28',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g26'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g24'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g24'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g25'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g26'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g24'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g24'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g25'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g28',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g28',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g29',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g29',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g30',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g30',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g29',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g30',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g30',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g29',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g25'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g24'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g24'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g26'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g28',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g28',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g25'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g26'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g28',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g29',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g29',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g30',\n                            y: 'g27'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g30',\n                            y: 'g10'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonInformation: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 1 32'\n            },\n            {\n                n: 'g17',\n                f: '*/ g13 5 16'\n            },\n            {\n                n: 'g18',\n                f: '*/ g13 3 8'\n            },\n            {\n                n: 'g19',\n                f: '*/ g13 13 32'\n            },\n            {\n                n: 'g20',\n                f: '*/ g13 19 32'\n            },\n            {\n                n: 'g22',\n                f: '*/ g13 11 16'\n            },\n            {\n                n: 'g23',\n                f: '*/ g13 13 16'\n            },\n            {\n                n: 'g24',\n                f: '*/ g13 7 8'\n            },\n            {\n                n: 'g25',\n                f: '+- g9 g14 0'\n            },\n            {\n                n: 'g28',\n                f: '+- g9 g17 0'\n            },\n            {\n                n: 'g29',\n                f: '+- g9 g18 0'\n            },\n            {\n                n: 'g30',\n                f: '+- g9 g23 0'\n            },\n            {\n                n: 'g31',\n                f: '+- g9 g24 0'\n            },\n            {\n                n: 'g32',\n                f: '+- g11 g17 0'\n            },\n            {\n                n: 'g34',\n                f: '+- g11 g19 0'\n            },\n            {\n                n: 'g35',\n                f: '+- g11 g20 0'\n            },\n            {\n                n: 'g37',\n                f: '+- g11 g22 0'\n            },\n            {\n                n: 'g38',\n                f: '*/ g13 3 32'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx2',\n                        hR: 'dx2',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx2',\n                        hR: 'dx2',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g25'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g38',\n                        hR: 'g38',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g28'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g28'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g25'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g38',\n                        hR: 'g38',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g28'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g28'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'lighten',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx2',\n                        hR: 'dx2',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g25'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g38',\n                        hR: 'g38',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g28'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g28'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g31'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g30'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g29'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonMovie: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 1455 21600'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 1905 21600'\n            },\n            {\n                n: 'g16',\n                f: '*/ g13 2325 21600'\n            },\n            {\n                n: 'g17',\n                f: '*/ g13 16155 21600'\n            },\n            {\n                n: 'g18',\n                f: '*/ g13 17010 21600'\n            },\n            {\n                n: 'g19',\n                f: '*/ g13 19335 21600'\n            },\n            {\n                n: 'g20',\n                f: '*/ g13 19725 21600'\n            },\n            {\n                n: 'g21',\n                f: '*/ g13 20595 21600'\n            },\n            {\n                n: 'g22',\n                f: '*/ g13 5280 21600'\n            },\n            {\n                n: 'g23',\n                f: '*/ g13 5730 21600'\n            },\n            {\n                n: 'g24',\n                f: '*/ g13 6630 21600'\n            },\n            {\n                n: 'g25',\n                f: '*/ g13 7492 21600'\n            },\n            {\n                n: 'g26',\n                f: '*/ g13 9067 21600'\n            },\n            {\n                n: 'g27',\n                f: '*/ g13 9555 21600'\n            },\n            {\n                n: 'g28',\n                f: '*/ g13 13342 21600'\n            },\n            {\n                n: 'g29',\n                f: '*/ g13 14580 21600'\n            },\n            {\n                n: 'g30',\n                f: '*/ g13 15592 21600'\n            },\n            {\n                n: 'g31',\n                f: '+- g11 g14 0'\n            },\n            {\n                n: 'g32',\n                f: '+- g11 g15 0'\n            },\n            {\n                n: 'g33',\n                f: '+- g11 g16 0'\n            },\n            {\n                n: 'g34',\n                f: '+- g11 g17 0'\n            },\n            {\n                n: 'g35',\n                f: '+- g11 g18 0'\n            },\n            {\n                n: 'g36',\n                f: '+- g11 g19 0'\n            },\n            {\n                n: 'g37',\n                f: '+- g11 g20 0'\n            },\n            {\n                n: 'g38',\n                f: '+- g11 g21 0'\n            },\n            {\n                n: 'g39',\n                f: '+- g9 g22 0'\n            },\n            {\n                n: 'g40',\n                f: '+- g9 g23 0'\n            },\n            {\n                n: 'g41',\n                f: '+- g9 g24 0'\n            },\n            {\n                n: 'g42',\n                f: '+- g9 g25 0'\n            },\n            {\n                n: 'g43',\n                f: '+- g9 g26 0'\n            },\n            {\n                n: 'g44',\n                f: '+- g9 g27 0'\n            },\n            {\n                n: 'g45',\n                f: '+- g9 g28 0'\n            },\n            {\n                n: 'g46',\n                f: '+- g9 g29 0'\n            },\n            {\n                n: 'g47',\n                f: '+- g9 g30 0'\n            },\n            {\n                n: 'g48',\n                f: '+- g9 g31 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g39'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g44'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g44'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g43'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g43'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g47'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g47'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g45'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g45'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g38',\n                            y: 'g46'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g46'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g38',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g42'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g42'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g40'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g40'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g39'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g39'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g44'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g44'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g43'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g43'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g47'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g47'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g45'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g45'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g38',\n                            y: 'g46'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g46'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g38',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g42'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g42'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g40'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g40'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g39'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g39'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g39'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g40'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g34',\n                            y: 'g40'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g42'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g37',\n                            y: 'g42'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g38',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g41'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g46'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g38',\n                            y: 'g46'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g36',\n                            y: 'g45'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g45'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g35',\n                            y: 'g47'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g47'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g33',\n                            y: 'g43'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g32',\n                            y: 'g43'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g31',\n                            y: 'g44'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g44'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonReturn: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 7 8'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 3 4'\n            },\n            {\n                n: 'g16',\n                f: '*/ g13 5 8'\n            },\n            {\n                n: 'g17',\n                f: '*/ g13 3 8'\n            },\n            {\n                n: 'g18',\n                f: '*/ g13 1 4'\n            },\n            {\n                n: 'g19',\n                f: '+- g9 g15 0'\n            },\n            {\n                n: 'g20',\n                f: '+- g9 g16 0'\n            },\n            {\n                n: 'g21',\n                f: '+- g9 g18 0'\n            },\n            {\n                n: 'g22',\n                f: '+- g11 g14 0'\n            },\n            {\n                n: 'g23',\n                f: '+- g11 g15 0'\n            },\n            {\n                n: 'g24',\n                f: '+- g11 g16 0'\n            },\n            {\n                n: 'g25',\n                f: '+- g11 g17 0'\n            },\n            {\n                n: 'g26',\n                f: '+- g11 g18 0'\n            },\n            {\n                n: 'g27',\n                f: '*/ g13 1 8'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g23',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g20'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g27',\n                        hR: 'g27',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g19'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g27',\n                        hR: 'g27',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g26',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g20'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g17',\n                        hR: 'g17',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g17',\n                        hR: 'g17',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g22',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g23',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g20'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g27',\n                        hR: 'g27',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g19'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g27',\n                        hR: 'g27',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g26',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g20'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g17',\n                        hR: 'g17',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g17',\n                        hR: 'g17',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g22',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g22',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g22',\n                            y: 'g20'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g17',\n                        hR: 'g17',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g17',\n                        hR: 'g17',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g26',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g26',\n                            y: 'g20'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g27',\n                        hR: 'g27',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g19'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g27',\n                        hR: 'g27',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g23',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    actionButtonSound: {\n        gdLst: [\n            {\n                n: 'dx2',\n                f: '*/ ss 3 8'\n            },\n            {\n                n: 'g9',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'g10',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'g11',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'g12',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'g13',\n                f: '*/ ss 3 4'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 1 8'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 5 16'\n            },\n            {\n                n: 'g16',\n                f: '*/ g13 5 8'\n            },\n            {\n                n: 'g17',\n                f: '*/ g13 11 16'\n            },\n            {\n                n: 'g18',\n                f: '*/ g13 3 4'\n            },\n            {\n                n: 'g19',\n                f: '*/ g13 7 8'\n            },\n            {\n                n: 'g20',\n                f: '+- g9 g14 0'\n            },\n            {\n                n: 'g21',\n                f: '+- g9 g15 0'\n            },\n            {\n                n: 'g22',\n                f: '+- g9 g17 0'\n            },\n            {\n                n: 'g23',\n                f: '+- g9 g19 0'\n            },\n            {\n                n: 'g24',\n                f: '+- g11 g15 0'\n            },\n            {\n                n: 'g25',\n                f: '+- g11 g16 0'\n            },\n            {\n                n: 'g26',\n                f: '+- g11 g18 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g22'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g22'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g22'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g22'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g25',\n                            y: 'g10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g24',\n                            y: 'g22'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g11',\n                            y: 'g22'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g26',\n                            y: 'g21'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g20'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g26',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'g26',\n                            y: 'g22'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'g12',\n                            y: 'g23'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    arc: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 16200000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 0'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'stAng',\n                f: 'pin 0 adj1 21599999'\n            },\n            {\n                n: 'enAng',\n                f: 'pin 0 adj2 21599999'\n            },\n            {\n                n: 'sw11',\n                f: '+- enAng 0 stAng'\n            },\n            {\n                n: 'sw12',\n                f: '+- sw11 21600000 0'\n            },\n            {\n                n: 'swAng',\n                f: '?: sw11 sw11 sw12'\n            },\n            {\n                n: 'wt1',\n                f: 'sin wd2 stAng'\n            },\n            {\n                n: 'ht1',\n                f: 'cos hd2 stAng'\n            },\n            {\n                n: 'dx1',\n                f: 'cat2 wd2 ht1 wt1'\n            },\n            {\n                n: 'dy1',\n                f: 'sat2 hd2 ht1 wt1'\n            },\n            {\n                n: 'wt2',\n                f: 'sin wd2 enAng'\n            },\n            {\n                n: 'ht2',\n                f: 'cos hd2 enAng'\n            },\n            {\n                n: 'dx2',\n                f: 'cat2 wd2 ht2 wt2'\n            },\n            {\n                n: 'dy2',\n                f: 'sat2 hd2 ht2 wt2'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'sw0',\n                f: '+- 21600000 0 stAng'\n            },\n            {\n                n: 'da1',\n                f: '+- swAng 0 sw0'\n            },\n            {\n                n: 'g1',\n                f: 'max x1 x2'\n            },\n            {\n                n: 'ir',\n                f: '?: da1 r g1'\n            },\n            {\n                n: 'sw1',\n                f: '+- cd4 0 stAng'\n            },\n            {\n                n: 'sw2',\n                f: '+- 27000000 0 stAng'\n            },\n            {\n                n: 'sw3',\n                f: '?: sw1 sw1 sw2'\n            },\n            {\n                n: 'da2',\n                f: '+- swAng 0 sw3'\n            },\n            {\n                n: 'g5',\n                f: 'max y1 y2'\n            },\n            {\n                n: 'ib',\n                f: '?: da2 b g5'\n            },\n            {\n                n: 'sw4',\n                f: '+- cd2 0 stAng'\n            },\n            {\n                n: 'sw5',\n                f: '+- 32400000 0 stAng'\n            },\n            {\n                n: 'sw6',\n                f: '?: sw4 sw4 sw5'\n            },\n            {\n                n: 'da3',\n                f: '+- swAng 0 sw6'\n            },\n            {\n                n: 'g9',\n                f: 'min x1 x2'\n            },\n            {\n                n: 'il',\n                f: '?: da3 l g9'\n            },\n            {\n                n: 'sw7',\n                f: '+- 3cd4 0 stAng'\n            },\n            {\n                n: 'sw8',\n                f: '+- 37800000 0 stAng'\n            },\n            {\n                n: 'sw9',\n                f: '?: sw7 sw7 sw8'\n            },\n            {\n                n: 'da4',\n                f: '+- swAng 0 sw9'\n            },\n            {\n                n: 'g13',\n                f: 'min y1 y2'\n            },\n            {\n                n: 'it',\n                f: '?: da4 t g13'\n            },\n            {\n                n: 'cang1',\n                f: '+- stAng 0 cd4'\n            },\n            {\n                n: 'cang2',\n                f: '+- enAng cd4 0'\n            },\n            {\n                n: 'cang3',\n                f: '+/ cang1 cang2 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bentArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 43750'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 50000'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'aw2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'th2',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'dh2',\n                f: '+- aw2 0 th2'\n            },\n            {\n                n: 'ah',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'bw',\n                f: '+- r 0 ah'\n            },\n            {\n                n: 'bh',\n                f: '+- b 0 dh2'\n            },\n            {\n                n: 'bs',\n                f: 'min bw bh'\n            },\n            {\n                n: 'maxAdj4',\n                f: '*/ 100000 bs ss'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'bd',\n                f: '*/ ss a4 100000'\n            },\n            {\n                n: 'bd3',\n                f: '+- bd 0 th'\n            },\n            {\n                n: 'bd2',\n                f: 'max bd3 0'\n            },\n            {\n                n: 'x3',\n                f: '+- th bd2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 ah'\n            },\n            {\n                n: 'y3',\n                f: '+- dh2 th 0'\n            },\n            {\n                n: 'y4',\n                f: '+- y3 dh2 0'\n            },\n            {\n                n: 'y5',\n                f: '+- dh2 bd 0'\n            },\n            {\n                n: 'y6',\n                f: '+- y3 bd2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bd',\n                        hR: 'bd',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'dh2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'aw2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bd2',\n                        hR: 'bd2',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'th',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bentConnector2: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bentConnector3: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'x1',\n                f: '*/ w adj1 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bentConnector4: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'x1',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'x2',\n                f: '+/ x1 r 2'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'y1',\n                f: '+/ t y2 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bentConnector5: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'x1',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '+/ x1 x3 2'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'y1',\n                f: '+/ t y2 2'\n            },\n            {\n                n: 'y3',\n                f: '+/ b y2 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bentUpArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 50000'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a2 50000'\n            },\n            {\n                n: 'x1',\n                f: '+- r 0 dx1'\n            },\n            {\n                n: 'dx3',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 dx3'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x2',\n                f: '+- x3 0 dx2'\n            },\n            {\n                n: 'x4',\n                f: '+- x3 dx2 0'\n            },\n            {\n                n: 'dy2',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 dy2'\n            },\n            {\n                n: 'x0',\n                f: '*/ x4 1 2'\n            },\n            {\n                n: 'y3',\n                f: '+/ y2 b 2'\n            },\n            {\n                n: 'y15',\n                f: '+/ y1 b 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bevel: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 x1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'lightenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'lighten',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darken',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    blockArc: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 10800000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 0'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'stAng',\n                f: 'pin 0 adj1 21599999'\n            },\n            {\n                n: 'istAng',\n                f: 'pin 0 adj2 21599999'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 50000'\n            },\n            {\n                n: 'sw11',\n                f: '+- istAng 0 stAng'\n            },\n            {\n                n: 'sw12',\n                f: '+- sw11 21600000 0'\n            },\n            {\n                n: 'swAng',\n                f: '?: sw11 sw11 sw12'\n            },\n            {\n                n: 'iswAng',\n                f: '+- 0 0 swAng'\n            },\n            {\n                n: 'wt1',\n                f: 'sin wd2 stAng'\n            },\n            {\n                n: 'ht1',\n                f: 'cos hd2 stAng'\n            },\n            {\n                n: 'wt3',\n                f: 'sin wd2 istAng'\n            },\n            {\n                n: 'ht3',\n                f: 'cos hd2 istAng'\n            },\n            {\n                n: 'dx1',\n                f: 'cat2 wd2 ht1 wt1'\n            },\n            {\n                n: 'dy1',\n                f: 'sat2 hd2 ht1 wt1'\n            },\n            {\n                n: 'dx3',\n                f: 'cat2 wd2 ht3 wt3'\n            },\n            {\n                n: 'dy3',\n                f: 'sat2 hd2 ht3 wt3'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy3 0'\n            },\n            {\n                n: 'dr',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'iwd2',\n                f: '+- wd2 0 dr'\n            },\n            {\n                n: 'ihd2',\n                f: '+- hd2 0 dr'\n            },\n            {\n                n: 'wt2',\n                f: 'sin iwd2 istAng'\n            },\n            {\n                n: 'ht2',\n                f: 'cos ihd2 istAng'\n            },\n            {\n                n: 'wt4',\n                f: 'sin iwd2 stAng'\n            },\n            {\n                n: 'ht4',\n                f: 'cos ihd2 stAng'\n            },\n            {\n                n: 'dx2',\n                f: 'cat2 iwd2 ht2 wt2'\n            },\n            {\n                n: 'dy2',\n                f: 'sat2 ihd2 ht2 wt2'\n            },\n            {\n                n: 'dx4',\n                f: 'cat2 iwd2 ht4 wt4'\n            },\n            {\n                n: 'dy4',\n                f: 'sat2 ihd2 ht4 wt4'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx4 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy4 0'\n            },\n            {\n                n: 'sw0',\n                f: '+- 21600000 0 stAng'\n            },\n            {\n                n: 'da1',\n                f: '+- swAng 0 sw0'\n            },\n            {\n                n: 'g1',\n                f: 'max x1 x2'\n            },\n            {\n                n: 'g2',\n                f: 'max x3 x4'\n            },\n            {\n                n: 'g3',\n                f: 'max g1 g2'\n            },\n            {\n                n: 'ir',\n                f: '?: da1 r g3'\n            },\n            {\n                n: 'sw1',\n                f: '+- cd4 0 stAng'\n            },\n            {\n                n: 'sw2',\n                f: '+- 27000000 0 stAng'\n            },\n            {\n                n: 'sw3',\n                f: '?: sw1 sw1 sw2'\n            },\n            {\n                n: 'da2',\n                f: '+- swAng 0 sw3'\n            },\n            {\n                n: 'g5',\n                f: 'max y1 y2'\n            },\n            {\n                n: 'g6',\n                f: 'max y3 y4'\n            },\n            {\n                n: 'g7',\n                f: 'max g5 g6'\n            },\n            {\n                n: 'ib',\n                f: '?: da2 b g7'\n            },\n            {\n                n: 'sw4',\n                f: '+- cd2 0 stAng'\n            },\n            {\n                n: 'sw5',\n                f: '+- 32400000 0 stAng'\n            },\n            {\n                n: 'sw6',\n                f: '?: sw4 sw4 sw5'\n            },\n            {\n                n: 'da3',\n                f: '+- swAng 0 sw6'\n            },\n            {\n                n: 'g9',\n                f: 'min x1 x2'\n            },\n            {\n                n: 'g10',\n                f: 'min x3 x4'\n            },\n            {\n                n: 'g11',\n                f: 'min g9 g10'\n            },\n            {\n                n: 'il',\n                f: '?: da3 l g11'\n            },\n            {\n                n: 'sw7',\n                f: '+- 3cd4 0 stAng'\n            },\n            {\n                n: 'sw8',\n                f: '+- 37800000 0 stAng'\n            },\n            {\n                n: 'sw9',\n                f: '?: sw7 sw7 sw8'\n            },\n            {\n                n: 'da4',\n                f: '+- swAng 0 sw9'\n            },\n            {\n                n: 'g13',\n                f: 'min y1 y2'\n            },\n            {\n                n: 'g14',\n                f: 'min y3 y4'\n            },\n            {\n                n: 'g15',\n                f: 'min g13 g14'\n            },\n            {\n                n: 'it',\n                f: '?: da4 t g15'\n            },\n            {\n                n: 'x5',\n                f: '+/ x1 x4 2'\n            },\n            {\n                n: 'y5',\n                f: '+/ y1 y4 2'\n            },\n            {\n                n: 'x6',\n                f: '+/ x3 x2 2'\n            },\n            {\n                n: 'y6',\n                f: '+/ y3 y2 2'\n            },\n            {\n                n: 'cang1',\n                f: '+- stAng 0 cd4'\n            },\n            {\n                n: 'cang2',\n                f: '+- istAng cd4 0'\n            },\n            {\n                n: 'cang3',\n                f: '+/ cang1 cang2 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'iwd2',\n                        hR: 'ihd2',\n                        stAng: 'istAng',\n                        swAng: 'iswAng'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    borderCallout1: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj4',\n                f: 'val -38333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    borderCallout2: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj6',\n                f: 'val -46667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    borderCallout3: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 100000'\n            },\n            {\n                n: 'adj6',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj7',\n                f: 'val 112963'\n            },\n            {\n                n: 'adj8',\n                f: 'val -8333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            },\n            {\n                n: 'y4',\n                f: '*/ h adj7 100000'\n            },\n            {\n                n: 'x4',\n                f: '*/ w adj8 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bracePair: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 8333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 25000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ ss a 50000'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 x2'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 x1'\n            },\n            {\n                n: 'y3',\n                f: '+- vc x1 0'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'it',\n                f: '*/ x1 29289 100000'\n            },\n            {\n                n: 'il',\n                f: '+- x1 it 0'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 it'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    bracketPair: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'il',\n                f: '*/ x1 29289 100000'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    callout1: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj4',\n                f: 'val -38333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    callout2: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 112500'\n            },\n            {\n                n: 'adj6',\n                f: 'val -46667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    callout3: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj2',\n                f: 'val -8333'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18750'\n            },\n            {\n                n: 'adj4',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj5',\n                f: 'val 100000'\n            },\n            {\n                n: 'adj6',\n                f: 'val -16667'\n            },\n            {\n                n: 'adj7',\n                f: 'val 112963'\n            },\n            {\n                n: 'adj8',\n                f: 'val -8333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w adj2 100000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h adj3 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w adj4 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h adj5 100000'\n            },\n            {\n                n: 'x3',\n                f: '*/ w adj6 100000'\n            },\n            {\n                n: 'y4',\n                f: '*/ h adj7 100000'\n            },\n            {\n                n: 'x4',\n                f: '*/ w adj8 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    can: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a 200000'\n            },\n            {\n                n: 'y2',\n                f: '+- y1 y1 0'\n            },\n            {\n                n: 'y3',\n                f: '+- b 0 y1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'lighten',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    chartPlus: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '5'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 10,\n                h: 10\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 10,\n                h: 10\n            }\n        ]\n    },\n    chartStar: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '10'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 10,\n                h: 10\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 10,\n                h: 10\n            }\n        ]\n    },\n    chartX: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '0'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 10,\n                h: 10\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 10,\n                h: 10\n            }\n        ]\n    },\n    chevron: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'x3',\n                f: '*/ x2 1 2'\n            },\n            {\n                n: 'dx',\n                f: '+- x2 0 x1'\n            },\n            {\n                n: 'il',\n                f: '?: dx x1 l'\n            },\n            {\n                n: 'ir',\n                f: '?: dx x2 r'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    chord: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 2700000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 16200000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'stAng',\n                f: 'pin 0 adj1 21599999'\n            },\n            {\n                n: 'enAng',\n                f: 'pin 0 adj2 21599999'\n            },\n            {\n                n: 'sw1',\n                f: '+- enAng 0 stAng'\n            },\n            {\n                n: 'sw2',\n                f: '+- sw1 21600000 0'\n            },\n            {\n                n: 'swAng',\n                f: '?: sw1 sw1 sw2'\n            },\n            {\n                n: 'wt1',\n                f: 'sin wd2 stAng'\n            },\n            {\n                n: 'ht1',\n                f: 'cos hd2 stAng'\n            },\n            {\n                n: 'dx1',\n                f: 'cat2 wd2 ht1 wt1'\n            },\n            {\n                n: 'dy1',\n                f: 'sat2 hd2 ht1 wt1'\n            },\n            {\n                n: 'wt2',\n                f: 'sin wd2 enAng'\n            },\n            {\n                n: 'ht2',\n                f: 'cos hd2 enAng'\n            },\n            {\n                n: 'dx2',\n                f: 'cat2 wd2 ht2 wt2'\n            },\n            {\n                n: 'dy2',\n                f: 'sat2 hd2 ht2 wt2'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'x3',\n                f: '+/ x1 x2 2'\n            },\n            {\n                n: 'y3',\n                f: '+/ y1 y2 2'\n            },\n            {\n                n: 'midAng0',\n                f: '*/ swAng 1 2'\n            },\n            {\n                n: 'midAng',\n                f: '+- stAng midAng0 cd2'\n            },\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    circularArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 12500'\n            },\n            {\n                n: 'adj2',\n                f: 'val 1142319'\n            },\n            {\n                n: 'adj3',\n                f: 'val 20457681'\n            },\n            {\n                n: 'adj4',\n                f: 'val 10800000'\n            },\n            {\n                n: 'adj5',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a5',\n                f: 'pin 0 adj5 25000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a5 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'enAng',\n                f: 'pin 1 adj3 21599999'\n            },\n            {\n                n: 'stAng',\n                f: 'pin 0 adj4 21599999'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'thh',\n                f: '*/ ss a5 100000'\n            },\n            {\n                n: 'th2',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'rw1',\n                f: '+- wd2 th2 thh'\n            },\n            {\n                n: 'rh1',\n                f: '+- hd2 th2 thh'\n            },\n            {\n                n: 'rw2',\n                f: '+- rw1 0 th'\n            },\n            {\n                n: 'rh2',\n                f: '+- rh1 0 th'\n            },\n            {\n                n: 'rw3',\n                f: '+- rw2 th2 0'\n            },\n            {\n                n: 'rh3',\n                f: '+- rh2 th2 0'\n            },\n            {\n                n: 'wtH',\n                f: 'sin rw3 enAng'\n            },\n            {\n                n: 'htH',\n                f: 'cos rh3 enAng'\n            },\n            {\n                n: 'dxH',\n                f: 'cat2 rw3 htH wtH'\n            },\n            {\n                n: 'dyH',\n                f: 'sat2 rh3 htH wtH'\n            },\n            {\n                n: 'xH',\n                f: '+- hc dxH 0'\n            },\n            {\n                n: 'yH',\n                f: '+- vc dyH 0'\n            },\n            {\n                n: 'rI',\n                f: 'min rw2 rh2'\n            },\n            {\n                n: 'u1',\n                f: '*/ dxH dxH 1'\n            },\n            {\n                n: 'u2',\n                f: '*/ dyH dyH 1'\n            },\n            {\n                n: 'u3',\n                f: '*/ rI rI 1'\n            },\n            {\n                n: 'u4',\n                f: '+- u1 0 u3'\n            },\n            {\n                n: 'u5',\n                f: '+- u2 0 u3'\n            },\n            {\n                n: 'u6',\n                f: '*/ u4 u5 u1'\n            },\n            {\n                n: 'u7',\n                f: '*/ u6 1 u2'\n            },\n            {\n                n: 'u8',\n                f: '+- 1 0 u7'\n            },\n            {\n                n: 'u9',\n                f: 'sqrt u8'\n            },\n            {\n                n: 'u10',\n                f: '*/ u4 1 dxH'\n            },\n            {\n                n: 'u11',\n                f: '*/ u10 1 dyH'\n            },\n            {\n                n: 'u12',\n                f: '+/ 1 u9 u11'\n            },\n            {\n                n: 'u13',\n                f: 'at2 1 u12'\n            },\n            {\n                n: 'u14',\n                f: '+- u13 21600000 0'\n            },\n            {\n                n: 'u15',\n                f: '?: u13 u13 u14'\n            },\n            {\n                n: 'u16',\n                f: '+- u15 0 enAng'\n            },\n            {\n                n: 'u17',\n                f: '+- u16 21600000 0'\n            },\n            {\n                n: 'u18',\n                f: '?: u16 u16 u17'\n            },\n            {\n                n: 'u19',\n                f: '+- u18 0 cd2'\n            },\n            {\n                n: 'u20',\n                f: '+- u18 0 21600000'\n            },\n            {\n                n: 'u21',\n                f: '?: u19 u20 u18'\n            },\n            {\n                n: 'maxAng',\n                f: 'abs u21'\n            },\n            {\n                n: 'aAng',\n                f: 'pin 0 adj2 maxAng'\n            },\n            {\n                n: 'ptAng',\n                f: '+- enAng aAng 0'\n            },\n            {\n                n: 'wtA',\n                f: 'sin rw3 ptAng'\n            },\n            {\n                n: 'htA',\n                f: 'cos rh3 ptAng'\n            },\n            {\n                n: 'dxA',\n                f: 'cat2 rw3 htA wtA'\n            },\n            {\n                n: 'dyA',\n                f: 'sat2 rh3 htA wtA'\n            },\n            {\n                n: 'xA',\n                f: '+- hc dxA 0'\n            },\n            {\n                n: 'yA',\n                f: '+- vc dyA 0'\n            },\n            {\n                n: 'wtE',\n                f: 'sin rw1 stAng'\n            },\n            {\n                n: 'htE',\n                f: 'cos rh1 stAng'\n            },\n            {\n                n: 'dxE',\n                f: 'cat2 rw1 htE wtE'\n            },\n            {\n                n: 'dyE',\n                f: 'sat2 rh1 htE wtE'\n            },\n            {\n                n: 'xE',\n                f: '+- hc dxE 0'\n            },\n            {\n                n: 'yE',\n                f: '+- vc dyE 0'\n            },\n            {\n                n: 'dxG',\n                f: 'cos thh ptAng'\n            },\n            {\n                n: 'dyG',\n                f: 'sin thh ptAng'\n            },\n            {\n                n: 'xG',\n                f: '+- xH dxG 0'\n            },\n            {\n                n: 'yG',\n                f: '+- yH dyG 0'\n            },\n            {\n                n: 'dxB',\n                f: 'cos thh ptAng'\n            },\n            {\n                n: 'dyB',\n                f: 'sin thh ptAng'\n            },\n            {\n                n: 'xB',\n                f: '+- xH 0 dxB 0'\n            },\n            {\n                n: 'yB',\n                f: '+- yH 0 dyB 0'\n            },\n            {\n                n: 'sx1',\n                f: '+- xB 0 hc'\n            },\n            {\n                n: 'sy1',\n                f: '+- yB 0 vc'\n            },\n            {\n                n: 'sx2',\n                f: '+- xG 0 hc'\n            },\n            {\n                n: 'sy2',\n                f: '+- yG 0 vc'\n            },\n            {\n                n: 'rO',\n                f: 'min rw1 rh1'\n            },\n            {\n                n: 'x1O',\n                f: '*/ sx1 rO rw1'\n            },\n            {\n                n: 'y1O',\n                f: '*/ sy1 rO rh1'\n            },\n            {\n                n: 'x2O',\n                f: '*/ sx2 rO rw1'\n            },\n            {\n                n: 'y2O',\n                f: '*/ sy2 rO rh1'\n            },\n            {\n                n: 'dxO',\n                f: '+- x2O 0 x1O'\n            },\n            {\n                n: 'dyO',\n                f: '+- y2O 0 y1O'\n            },\n            {\n                n: 'dO',\n                f: 'mod dxO dyO 0'\n            },\n            {\n                n: 'q1',\n                f: '*/ x1O y2O 1'\n            },\n            {\n                n: 'q2',\n                f: '*/ x2O y1O 1'\n            },\n            {\n                n: 'DO',\n                f: '+- q1 0 q2'\n            },\n            {\n                n: 'q3',\n                f: '*/ rO rO 1'\n            },\n            {\n                n: 'q4',\n                f: '*/ dO dO 1'\n            },\n            {\n                n: 'q5',\n                f: '*/ q3 q4 1'\n            },\n            {\n                n: 'q6',\n                f: '*/ DO DO 1'\n            },\n            {\n                n: 'q7',\n                f: '+- q5 0 q6'\n            },\n            {\n                n: 'q8',\n                f: 'max q7 0'\n            },\n            {\n                n: 'sdelO',\n                f: 'sqrt q8'\n            },\n            {\n                n: 'ndyO',\n                f: '*/ dyO -1 1'\n            },\n            {\n                n: 'sdyO',\n                f: '?: ndyO -1 1'\n            },\n            {\n                n: 'q9',\n                f: '*/ sdyO dxO 1'\n            },\n            {\n                n: 'q10',\n                f: '*/ q9 sdelO 1'\n            },\n            {\n                n: 'q11',\n                f: '*/ DO dyO 1'\n            },\n            {\n                n: 'dxF1',\n                f: '+/ q11 q10 q4'\n            },\n            {\n                n: 'q12',\n                f: '+- q11 0 q10'\n            },\n            {\n                n: 'dxF2',\n                f: '*/ q12 1 q4'\n            },\n            {\n                n: 'adyO',\n                f: 'abs dyO'\n            },\n            {\n                n: 'q13',\n                f: '*/ adyO sdelO 1'\n            },\n            {\n                n: 'q14',\n                f: '*/ DO dxO -1'\n            },\n            {\n                n: 'dyF1',\n                f: '+/ q14 q13 q4'\n            },\n            {\n                n: 'q15',\n                f: '+- q14 0 q13'\n            },\n            {\n                n: 'dyF2',\n                f: '*/ q15 1 q4'\n            },\n            {\n                n: 'q16',\n                f: '+- x2O 0 dxF1'\n            },\n            {\n                n: 'q17',\n                f: '+- x2O 0 dxF2'\n            },\n            {\n                n: 'q18',\n                f: '+- y2O 0 dyF1'\n            },\n            {\n                n: 'q19',\n                f: '+- y2O 0 dyF2'\n            },\n            {\n                n: 'q20',\n                f: 'mod q16 q18 0'\n            },\n            {\n                n: 'q21',\n                f: 'mod q17 q19 0'\n            },\n            {\n                n: 'q22',\n                f: '+- q21 0 q20'\n            },\n            {\n                n: 'dxF',\n                f: '?: q22 dxF1 dxF2'\n            },\n            {\n                n: 'dyF',\n                f: '?: q22 dyF1 dyF2'\n            },\n            {\n                n: 'sdxF',\n                f: '*/ dxF rw1 rO'\n            },\n            {\n                n: 'sdyF',\n                f: '*/ dyF rh1 rO'\n            },\n            {\n                n: 'xF',\n                f: '+- hc sdxF 0'\n            },\n            {\n                n: 'yF',\n                f: '+- vc sdyF 0'\n            },\n            {\n                n: 'x1I',\n                f: '*/ sx1 rI rw2'\n            },\n            {\n                n: 'y1I',\n                f: '*/ sy1 rI rh2'\n            },\n            {\n                n: 'x2I',\n                f: '*/ sx2 rI rw2'\n            },\n            {\n                n: 'y2I',\n                f: '*/ sy2 rI rh2'\n            },\n            {\n                n: 'dxI',\n                f: '+- x2I 0 x1I'\n            },\n            {\n                n: 'dyI',\n                f: '+- y2I 0 y1I'\n            },\n            {\n                n: 'dI',\n                f: 'mod dxI dyI 0'\n            },\n            {\n                n: 'v1',\n                f: '*/ x1I y2I 1'\n            },\n            {\n                n: 'v2',\n                f: '*/ x2I y1I 1'\n            },\n            {\n                n: 'DI',\n                f: '+- v1 0 v2'\n            },\n            {\n                n: 'v3',\n                f: '*/ rI rI 1'\n            },\n            {\n                n: 'v4',\n                f: '*/ dI dI 1'\n            },\n            {\n                n: 'v5',\n                f: '*/ v3 v4 1'\n            },\n            {\n                n: 'v6',\n                f: '*/ DI DI 1'\n            },\n            {\n                n: 'v7',\n                f: '+- v5 0 v6'\n            },\n            {\n                n: 'v8',\n                f: 'max v7 0'\n            },\n            {\n                n: 'sdelI',\n                f: 'sqrt v8'\n            },\n            {\n                n: 'v9',\n                f: '*/ sdyO dxI 1'\n            },\n            {\n                n: 'v10',\n                f: '*/ v9 sdelI 1'\n            },\n            {\n                n: 'v11',\n                f: '*/ DI dyI 1'\n            },\n            {\n                n: 'dxC1',\n                f: '+/ v11 v10 v4'\n            },\n            {\n                n: 'v12',\n                f: '+- v11 0 v10'\n            },\n            {\n                n: 'dxC2',\n                f: '*/ v12 1 v4'\n            },\n            {\n                n: 'adyI',\n                f: 'abs dyI'\n            },\n            {\n                n: 'v13',\n                f: '*/ adyI sdelI 1'\n            },\n            {\n                n: 'v14',\n                f: '*/ DI dxI -1'\n            },\n            {\n                n: 'dyC1',\n                f: '+/ v14 v13 v4'\n            },\n            {\n                n: 'v15',\n                f: '+- v14 0 v13'\n            },\n            {\n                n: 'dyC2',\n                f: '*/ v15 1 v4'\n            },\n            {\n                n: 'v16',\n                f: '+- x1I 0 dxC1'\n            },\n            {\n                n: 'v17',\n                f: '+- x1I 0 dxC2'\n            },\n            {\n                n: 'v18',\n                f: '+- y1I 0 dyC1'\n            },\n            {\n                n: 'v19',\n                f: '+- y1I 0 dyC2'\n            },\n            {\n                n: 'v20',\n                f: 'mod v16 v18 0'\n            },\n            {\n                n: 'v21',\n                f: 'mod v17 v19 0'\n            },\n            {\n                n: 'v22',\n                f: '+- v21 0 v20'\n            },\n            {\n                n: 'dxC',\n                f: '?: v22 dxC1 dxC2'\n            },\n            {\n                n: 'dyC',\n                f: '?: v22 dyC1 dyC2'\n            },\n            {\n                n: 'sdxC',\n                f: '*/ dxC rw2 rI'\n            },\n            {\n                n: 'sdyC',\n                f: '*/ dyC rh2 rI'\n            },\n            {\n                n: 'xC',\n                f: '+- hc sdxC 0'\n            },\n            {\n                n: 'yC',\n                f: '+- vc sdyC 0'\n            },\n            {\n                n: 'ist0',\n                f: 'at2 sdxC sdyC'\n            },\n            {\n                n: 'ist1',\n                f: '+- ist0 21600000 0'\n            },\n            {\n                n: 'istAng',\n                f: '?: ist0 ist0 ist1'\n            },\n            {\n                n: 'isw1',\n                f: '+- stAng 0 istAng'\n            },\n            {\n                n: 'isw2',\n                f: '+- isw1 0 21600000'\n            },\n            {\n                n: 'iswAng',\n                f: '?: isw1 isw2 isw1'\n            },\n            {\n                n: 'p1',\n                f: '+- xF 0 xC'\n            },\n            {\n                n: 'p2',\n                f: '+- yF 0 yC'\n            },\n            {\n                n: 'p3',\n                f: 'mod p1 p2 0'\n            },\n            {\n                n: 'p4',\n                f: '*/ p3 1 2'\n            },\n            {\n                n: 'p5',\n                f: '+- p4 0 thh'\n            },\n            {\n                n: 'xGp',\n                f: '?: p5 xF xG'\n            },\n            {\n                n: 'yGp',\n                f: '?: p5 yF yG'\n            },\n            {\n                n: 'xBp',\n                f: '?: p5 xC xB'\n            },\n            {\n                n: 'yBp',\n                f: '?: p5 yC yB'\n            },\n            {\n                n: 'en0',\n                f: 'at2 sdxF sdyF'\n            },\n            {\n                n: 'en1',\n                f: '+- en0 21600000 0'\n            },\n            {\n                n: 'en2',\n                f: '?: en0 en0 en1'\n            },\n            {\n                n: 'sw0',\n                f: '+- en2 0 stAng'\n            },\n            {\n                n: 'sw1',\n                f: '+- sw0 21600000 0'\n            },\n            {\n                n: 'swAng',\n                f: '?: sw0 sw0 sw1'\n            },\n            {\n                n: 'wtI',\n                f: 'sin rw3 stAng'\n            },\n            {\n                n: 'htI',\n                f: 'cos rh3 stAng'\n            },\n            {\n                n: 'dxI',\n                f: 'cat2 rw3 htI wtI'\n            },\n            {\n                n: 'dyI',\n                f: 'sat2 rh3 htI wtI'\n            },\n            {\n                n: 'xI',\n                f: '+- hc dxI 0'\n            },\n            {\n                n: 'yI',\n                f: '+- vc dyI 0'\n            },\n            {\n                n: 'aI',\n                f: '+- stAng 0 cd4'\n            },\n            {\n                n: 'aA',\n                f: '+- ptAng cd4 0'\n            },\n            {\n                n: 'aB',\n                f: '+- ptAng cd2 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos rw1 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin rh1 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'xE',\n                            y: 'yE'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw1',\n                        hR: 'rh1',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xGp',\n                            y: 'yGp'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xA',\n                            y: 'yA'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xBp',\n                            y: 'yBp'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC',\n                            y: 'yC'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw2',\n                        hR: 'rh2',\n                        stAng: 'istAng',\n                        swAng: 'iswAng'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    cloud: {\n        gdLst: [\n            {\n                n: 'il',\n                f: '*/ w 2977 21600'\n            },\n            {\n                n: 'it',\n                f: '*/ h 3262 21600'\n            },\n            {\n                n: 'ir',\n                f: '*/ w 17087 21600'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 17337 21600'\n            },\n            {\n                n: 'g27',\n                f: '*/ w 67 21600'\n            },\n            {\n                n: 'g28',\n                f: '*/ h 21577 21600'\n            },\n            {\n                n: 'g29',\n                f: '*/ w 21582 21600'\n            },\n            {\n                n: 'g30',\n                f: '*/ h 1235 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '3900',\n                            y: '14370'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6753',\n                        hR: '9190',\n                        stAng: '-11429249',\n                        swAng: '7426832'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5333',\n                        hR: '7267',\n                        stAng: '-8646143',\n                        swAng: '5396714'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4365',\n                        hR: '5945',\n                        stAng: '-8748475',\n                        swAng: '5983381'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4857',\n                        hR: '6595',\n                        stAng: '-7859164',\n                        swAng: '7034504'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5333',\n                        hR: '7273',\n                        stAng: '-4722533',\n                        swAng: '6541615'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6775',\n                        hR: '9220',\n                        stAng: '-2776035',\n                        swAng: '7816140'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5785',\n                        hR: '7867',\n                        stAng: '37501',\n                        swAng: '6842000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6752',\n                        hR: '9215',\n                        stAng: '1347096',\n                        swAng: '6910353'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '7720',\n                        hR: '10543',\n                        stAng: '3974558',\n                        swAng: '4542661'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4360',\n                        hR: '5918',\n                        stAng: '-16496525',\n                        swAng: '8804134'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4345',\n                        hR: '5945',\n                        stAng: '-14809710',\n                        swAng: '9151131'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 43200,\n                h: 43200\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '4693',\n                            y: '26177'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4345',\n                        hR: '5945',\n                        stAng: '5204520',\n                        swAng: '1585770'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '6928',\n                            y: '34899'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4360',\n                        hR: '5918',\n                        stAng: '4416628',\n                        swAng: '686848'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '16478',\n                            y: '39090'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6752',\n                        hR: '9215',\n                        stAng: '8257449',\n                        swAng: '844866'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '28827',\n                            y: '34751'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6752',\n                        hR: '9215',\n                        stAng: '387196',\n                        swAng: '959901'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '34129',\n                            y: '22954'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5785',\n                        hR: '7867',\n                        stAng: '-4217541',\n                        swAng: '4255042'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '41798',\n                            y: '15354'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5333',\n                        hR: '7273',\n                        stAng: '1819082',\n                        swAng: '1665090'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '38324',\n                            y: '5426'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4857',\n                        hR: '6595',\n                        stAng: '-824660',\n                        swAng: '891534'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '29078',\n                            y: '3952'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4857',\n                        hR: '6595',\n                        stAng: '-8950887',\n                        swAng: '1091722'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '22141',\n                            y: '4720'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4365',\n                        hR: '5945',\n                        stAng: '-9809656',\n                        swAng: '1061181'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '14000',\n                            y: '5192'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6753',\n                        hR: '9190',\n                        stAng: '-4002417',\n                        swAng: '739161'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '4127',\n                            y: '15789'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6753',\n                        hR: '9190',\n                        stAng: '9459261',\n                        swAng: '711490'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 43200,\n                h: 43200\n            }\n        ]\n    },\n    cloudCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val -20833'\n            },\n            {\n                n: 'adj2',\n                f: 'val 62500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'dxPos',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'dyPos',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'xPos',\n                f: '+- hc dxPos 0'\n            },\n            {\n                n: 'yPos',\n                f: '+- vc dyPos 0'\n            },\n            {\n                n: 'ht',\n                f: 'cat2 hd2 dxPos dyPos'\n            },\n            {\n                n: 'wt',\n                f: 'sat2 wd2 dxPos dyPos'\n            },\n            {\n                n: 'g2',\n                f: 'cat2 wd2 ht wt'\n            },\n            {\n                n: 'g3',\n                f: 'sat2 hd2 ht wt'\n            },\n            {\n                n: 'g4',\n                f: '+- hc g2 0'\n            },\n            {\n                n: 'g5',\n                f: '+- vc g3 0'\n            },\n            {\n                n: 'g6',\n                f: '+- g4 0 xPos'\n            },\n            {\n                n: 'g7',\n                f: '+- g5 0 yPos'\n            },\n            {\n                n: 'g8',\n                f: 'mod g6 g7 0'\n            },\n            {\n                n: 'g9',\n                f: '*/ ss 6600 21600'\n            },\n            {\n                n: 'g10',\n                f: '+- g8 0 g9'\n            },\n            {\n                n: 'g11',\n                f: '*/ g10 1 3'\n            },\n            {\n                n: 'g12',\n                f: '*/ ss 1800 21600'\n            },\n            {\n                n: 'g13',\n                f: '+- g11 g12 0'\n            },\n            {\n                n: 'g14',\n                f: '*/ g13 g6 g8'\n            },\n            {\n                n: 'g15',\n                f: '*/ g13 g7 g8'\n            },\n            {\n                n: 'g16',\n                f: '+- g14 xPos 0'\n            },\n            {\n                n: 'g17',\n                f: '+- g15 yPos 0'\n            },\n            {\n                n: 'g18',\n                f: '*/ ss 4800 21600'\n            },\n            {\n                n: 'g19',\n                f: '*/ g11 2 1'\n            },\n            {\n                n: 'g20',\n                f: '+- g18 g19 0'\n            },\n            {\n                n: 'g21',\n                f: '*/ g20 g6 g8'\n            },\n            {\n                n: 'g22',\n                f: '*/ g20 g7 g8'\n            },\n            {\n                n: 'g23',\n                f: '+- g21 xPos 0'\n            },\n            {\n                n: 'g24',\n                f: '+- g22 yPos 0'\n            },\n            {\n                n: 'g25',\n                f: '*/ ss 1200 21600'\n            },\n            {\n                n: 'g26',\n                f: '*/ ss 600 21600'\n            },\n            {\n                n: 'x23',\n                f: '+- xPos g26 0'\n            },\n            {\n                n: 'x24',\n                f: '+- g16 g25 0'\n            },\n            {\n                n: 'x25',\n                f: '+- g23 g12 0'\n            },\n            {\n                n: 'il',\n                f: '*/ w 2977 21600'\n            },\n            {\n                n: 'it',\n                f: '*/ h 3262 21600'\n            },\n            {\n                n: 'ir',\n                f: '*/ w 17087 21600'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 17337 21600'\n            },\n            {\n                n: 'g27',\n                f: '*/ w 67 21600'\n            },\n            {\n                n: 'g28',\n                f: '*/ h 21577 21600'\n            },\n            {\n                n: 'g29',\n                f: '*/ w 21582 21600'\n            },\n            {\n                n: 'g30',\n                f: '*/ h 1235 21600'\n            },\n            {\n                n: 'pang',\n                f: 'at2 dxPos dyPos'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '3900',\n                            y: '14370'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6753',\n                        hR: '9190',\n                        stAng: '-11429249',\n                        swAng: '7426832'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5333',\n                        hR: '7267',\n                        stAng: '-8646143',\n                        swAng: '5396714'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4365',\n                        hR: '5945',\n                        stAng: '-8748475',\n                        swAng: '5983381'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4857',\n                        hR: '6595',\n                        stAng: '-7859164',\n                        swAng: '7034504'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5333',\n                        hR: '7273',\n                        stAng: '-4722533',\n                        swAng: '6541615'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6775',\n                        hR: '9220',\n                        stAng: '-2776035',\n                        swAng: '7816140'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5785',\n                        hR: '7867',\n                        stAng: '37501',\n                        swAng: '6842000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6752',\n                        hR: '9215',\n                        stAng: '1347096',\n                        swAng: '6910353'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '7720',\n                        hR: '10543',\n                        stAng: '3974558',\n                        swAng: '4542661'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4360',\n                        hR: '5918',\n                        stAng: '-16496525',\n                        swAng: '8804134'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4345',\n                        hR: '5945',\n                        stAng: '-14809710',\n                        swAng: '9151131'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 43200,\n                h: 43200\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x23',\n                            y: 'yPos'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g26',\n                        hR: 'g26',\n                        stAng: '0',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x24',\n                            y: 'g17'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g25',\n                        hR: 'g25',\n                        stAng: '0',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x25',\n                            y: 'g24'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g12',\n                        hR: 'g12',\n                        stAng: '0',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '4693',\n                            y: '26177'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4345',\n                        hR: '5945',\n                        stAng: '5204520',\n                        swAng: '1585770'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '6928',\n                            y: '34899'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4360',\n                        hR: '5918',\n                        stAng: '4416628',\n                        swAng: '686848'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '16478',\n                            y: '39090'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6752',\n                        hR: '9215',\n                        stAng: '8257449',\n                        swAng: '844866'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '28827',\n                            y: '34751'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6752',\n                        hR: '9215',\n                        stAng: '387196',\n                        swAng: '959901'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '34129',\n                            y: '22954'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5785',\n                        hR: '7867',\n                        stAng: '-4217541',\n                        swAng: '4255042'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '41798',\n                            y: '15354'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5333',\n                        hR: '7273',\n                        stAng: '1819082',\n                        swAng: '1665090'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '38324',\n                            y: '5426'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4857',\n                        hR: '6595',\n                        stAng: '-824660',\n                        swAng: '891534'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '29078',\n                            y: '3952'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4857',\n                        hR: '6595',\n                        stAng: '-8950887',\n                        swAng: '1091722'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '22141',\n                            y: '4720'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '4365',\n                        hR: '5945',\n                        stAng: '-9809656',\n                        swAng: '1061181'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '14000',\n                            y: '5192'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6753',\n                        hR: '9190',\n                        stAng: '-4002417',\n                        swAng: '739161'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '4127',\n                            y: '15789'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '6753',\n                        hR: '9190',\n                        stAng: '9459261',\n                        swAng: '711490'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 43200,\n                h: 43200\n            }\n        ]\n    },\n    corner: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj1',\n                f: '*/ 100000 h ss'\n            },\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'y1',\n                f: '+- b 0 dy1'\n            },\n            {\n                n: 'cx1',\n                f: '*/ x1 1 2'\n            },\n            {\n                n: 'cy1',\n                f: '+/ y1 b 2'\n            },\n            {\n                n: 'd',\n                f: '+- w 0 h'\n            },\n            {\n                n: 'it',\n                f: '?: d y1 t'\n            },\n            {\n                n: 'ir',\n                f: '?: d r x1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    cornerTabs: {\n        gdLst: [\n            {\n                n: 'md',\n                f: 'mod w h 0'\n            },\n            {\n                n: 'dx',\n                f: '*/ 1 md 20'\n            },\n            {\n                n: 'y1',\n                f: '+- 0 b dx'\n            },\n            {\n                n: 'x1',\n                f: '+- 0 r dx'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dx',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'dx'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dx',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'dx'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    cube: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 100000'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'y2',\n                f: '*/ y4 1 2'\n            },\n            {\n                n: 'y3',\n                f: '+/ y1 b 2'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 y1'\n            },\n            {\n                n: 'x2',\n                f: '*/ x4 1 2'\n            },\n            {\n                n: 'x3',\n                f: '+/ y1 r 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'y1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'lightenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'y1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedConnector2: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'wd2',\n                                y: 't'\n                            },\n                            {\n                                x: 'r',\n                                y: 'hd2'\n                            },\n                            {\n                                x: 'r',\n                                y: 'b'\n                            }\n                        ]\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedConnector3: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '+/ l x2 2'\n            },\n            {\n                n: 'x3',\n                f: '+/ r x2 2'\n            },\n            {\n                n: 'y3',\n                f: '*/ h 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x1',\n                                y: 't'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'hd4'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'vc'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x2',\n                                y: 'y3'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'b'\n                            },\n                            {\n                                x: 'r',\n                                y: 'b'\n                            }\n                        ]\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedConnector4: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'x1',\n                f: '+/ l x2 2'\n            },\n            {\n                n: 'x3',\n                f: '+/ r x2 2'\n            },\n            {\n                n: 'x4',\n                f: '+/ x2 x3 2'\n            },\n            {\n                n: 'x5',\n                f: '+/ x3 r 2'\n            },\n            {\n                n: 'y4',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'y1',\n                f: '+/ t y4 2'\n            },\n            {\n                n: 'y2',\n                f: '+/ t y1 2'\n            },\n            {\n                n: 'y3',\n                f: '+/ y1 y4 2'\n            },\n            {\n                n: 'y5',\n                f: '+/ b y4 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x1',\n                                y: 't'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y2'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x2',\n                                y: 'y3'\n                            },\n                            {\n                                x: 'x4',\n                                y: 'y4'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y4'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x5',\n                                y: 'y4'\n                            },\n                            {\n                                x: 'r',\n                                y: 'y5'\n                            },\n                            {\n                                x: 'r',\n                                y: 'b'\n                            }\n                        ]\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedConnector5: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'x3',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'x6',\n                f: '*/ w adj3 100000'\n            },\n            {\n                n: 'x1',\n                f: '+/ x3 x6 2'\n            },\n            {\n                n: 'x2',\n                f: '+/ l x3 2'\n            },\n            {\n                n: 'x4',\n                f: '+/ x3 x1 2'\n            },\n            {\n                n: 'x5',\n                f: '+/ x6 x1 2'\n            },\n            {\n                n: 'x7',\n                f: '+/ x6 r 2'\n            },\n            {\n                n: 'y4',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'y1',\n                f: '+/ t y4 2'\n            },\n            {\n                n: 'y2',\n                f: '+/ t y1 2'\n            },\n            {\n                n: 'y3',\n                f: '+/ y1 y4 2'\n            },\n            {\n                n: 'y5',\n                f: '+/ b y4 2'\n            },\n            {\n                n: 'y6',\n                f: '+/ y5 y4 2'\n            },\n            {\n                n: 'y7',\n                f: '+/ y5 b 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x2',\n                                y: 't'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y2'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x3',\n                                y: 'y3'\n                            },\n                            {\n                                x: 'x4',\n                                y: 'y4'\n                            },\n                            {\n                                x: 'x1',\n                                y: 'y4'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x5',\n                                y: 'y4'\n                            },\n                            {\n                                x: 'x6',\n                                y: 'y6'\n                            },\n                            {\n                                x: 'x6',\n                                y: 'y5'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x6',\n                                y: 'y7'\n                            },\n                            {\n                                x: 'x7',\n                                y: 'b'\n                            },\n                            {\n                                x: 'r',\n                                y: 'b'\n                            }\n                        ]\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedDownArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'aw',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'q1',\n                f: '+/ th aw 4'\n            },\n            {\n                n: 'wR',\n                f: '+- wd2 0 q1'\n            },\n            {\n                n: 'q7',\n                f: '*/ wR 2 1'\n            },\n            {\n                n: 'q8',\n                f: '*/ q7 q7 1'\n            },\n            {\n                n: 'q9',\n                f: '*/ th th 1'\n            },\n            {\n                n: 'q10',\n                f: '+- q8 0 q9'\n            },\n            {\n                n: 'q11',\n                f: 'sqrt q10'\n            },\n            {\n                n: 'idy',\n                f: '*/ q11 h q7'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 idy ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'ah',\n                f: '*/ ss adj3 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- wR th 0'\n            },\n            {\n                n: 'q2',\n                f: '*/ h h 1'\n            },\n            {\n                n: 'q3',\n                f: '*/ ah ah 1'\n            },\n            {\n                n: 'q4',\n                f: '+- q2 0 q3'\n            },\n            {\n                n: 'q5',\n                f: 'sqrt q4'\n            },\n            {\n                n: 'dx',\n                f: '*/ q5 wR h'\n            },\n            {\n                n: 'x5',\n                f: '+- wR dx 0'\n            },\n            {\n                n: 'x7',\n                f: '+- x3 dx 0'\n            },\n            {\n                n: 'q6',\n                f: '+- aw 0 th'\n            },\n            {\n                n: 'dh',\n                f: '*/ q6 1 2'\n            },\n            {\n                n: 'x4',\n                f: '+- x5 0 dh'\n            },\n            {\n                n: 'x8',\n                f: '+- x7 dh 0'\n            },\n            {\n                n: 'aw2',\n                f: '*/ aw 1 2'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 aw2'\n            },\n            {\n                n: 'y1',\n                f: '+- b 0 ah'\n            },\n            {\n                n: 'swAng',\n                f: 'at2 ah dx'\n            },\n            {\n                n: 'mswAng',\n                f: '+- 0 0 swAng'\n            },\n            {\n                n: 'iy',\n                f: '+- b 0 idy'\n            },\n            {\n                n: 'ix',\n                f: '+/ wR x3 2'\n            },\n            {\n                n: 'q12',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'dang2',\n                f: 'at2 idy q12'\n            },\n            {\n                n: 'stAng',\n                f: '+- 3cd4 swAng 0'\n            },\n            {\n                n: 'stAng2',\n                f: '+- 3cd4 0 dang2'\n            },\n            {\n                n: 'swAng2',\n                f: '+- dang2 0 cd4'\n            },\n            {\n                n: 'swAng3',\n                f: '+- cd4 dang2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng',\n                        swAng: 'mswAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: '3cd4',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ix',\n                            y: 'iy'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng2',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'cd2',\n                        swAng: 'swAng3'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ix',\n                            y: 'iy'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng2',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: '3cd4',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng',\n                        swAng: 'mswAng'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedLeftArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 a2'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'aw',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'q1',\n                f: '+/ th aw 4'\n            },\n            {\n                n: 'hR',\n                f: '+- hd2 0 q1'\n            },\n            {\n                n: 'q7',\n                f: '*/ hR 2 1'\n            },\n            {\n                n: 'q8',\n                f: '*/ q7 q7 1'\n            },\n            {\n                n: 'q9',\n                f: '*/ th th 1'\n            },\n            {\n                n: 'q10',\n                f: '+- q8 0 q9'\n            },\n            {\n                n: 'q11',\n                f: 'sqrt q10'\n            },\n            {\n                n: 'idx',\n                f: '*/ q11 w q7'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 idx ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'ah',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'y3',\n                f: '+- hR th 0'\n            },\n            {\n                n: 'q2',\n                f: '*/ w w 1'\n            },\n            {\n                n: 'q3',\n                f: '*/ ah ah 1'\n            },\n            {\n                n: 'q4',\n                f: '+- q2 0 q3'\n            },\n            {\n                n: 'q5',\n                f: 'sqrt q4'\n            },\n            {\n                n: 'dy',\n                f: '*/ q5 hR w'\n            },\n            {\n                n: 'y5',\n                f: '+- hR dy 0'\n            },\n            {\n                n: 'y7',\n                f: '+- y3 dy 0'\n            },\n            {\n                n: 'q6',\n                f: '+- aw 0 th'\n            },\n            {\n                n: 'dh',\n                f: '*/ q6 1 2'\n            },\n            {\n                n: 'y4',\n                f: '+- y5 0 dh'\n            },\n            {\n                n: 'y8',\n                f: '+- y7 dh 0'\n            },\n            {\n                n: 'aw2',\n                f: '*/ aw 1 2'\n            },\n            {\n                n: 'y6',\n                f: '+- b 0 aw2'\n            },\n            {\n                n: 'x1',\n                f: '+- l ah 0'\n            },\n            {\n                n: 'swAng',\n                f: 'at2 ah dy'\n            },\n            {\n                n: 'mswAng',\n                f: '+- 0 0 swAng'\n            },\n            {\n                n: 'ix',\n                f: '+- l idx 0'\n            },\n            {\n                n: 'iy',\n                f: '+/ hR y3 2'\n            },\n            {\n                n: 'q12',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'dang2',\n                f: 'at2 idx q12'\n            },\n            {\n                n: 'swAng2',\n                f: '+- dang2 0 swAng'\n            },\n            {\n                n: 'swAng3',\n                f: '+- swAng dang2 0'\n            },\n            {\n                n: 'stAng3',\n                f: '+- 0 0 dang2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'swAng',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'stAng3',\n                        swAng: 'swAng3'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'swAng',\n                        swAng: 'swAng2'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedRightArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 a2'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'aw',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'q1',\n                f: '+/ th aw 4'\n            },\n            {\n                n: 'hR',\n                f: '+- hd2 0 q1'\n            },\n            {\n                n: 'q7',\n                f: '*/ hR 2 1'\n            },\n            {\n                n: 'q8',\n                f: '*/ q7 q7 1'\n            },\n            {\n                n: 'q9',\n                f: '*/ th th 1'\n            },\n            {\n                n: 'q10',\n                f: '+- q8 0 q9'\n            },\n            {\n                n: 'q11',\n                f: 'sqrt q10'\n            },\n            {\n                n: 'idx',\n                f: '*/ q11 w q7'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 idx ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'ah',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'y3',\n                f: '+- hR th 0'\n            },\n            {\n                n: 'q2',\n                f: '*/ w w 1'\n            },\n            {\n                n: 'q3',\n                f: '*/ ah ah 1'\n            },\n            {\n                n: 'q4',\n                f: '+- q2 0 q3'\n            },\n            {\n                n: 'q5',\n                f: 'sqrt q4'\n            },\n            {\n                n: 'dy',\n                f: '*/ q5 hR w'\n            },\n            {\n                n: 'y5',\n                f: '+- hR dy 0'\n            },\n            {\n                n: 'y7',\n                f: '+- y3 dy 0'\n            },\n            {\n                n: 'q6',\n                f: '+- aw 0 th'\n            },\n            {\n                n: 'dh',\n                f: '*/ q6 1 2'\n            },\n            {\n                n: 'y4',\n                f: '+- y5 0 dh'\n            },\n            {\n                n: 'y8',\n                f: '+- y7 dh 0'\n            },\n            {\n                n: 'aw2',\n                f: '*/ aw 1 2'\n            },\n            {\n                n: 'y6',\n                f: '+- b 0 aw2'\n            },\n            {\n                n: 'x1',\n                f: '+- r 0 ah'\n            },\n            {\n                n: 'swAng',\n                f: 'at2 ah dy'\n            },\n            {\n                n: 'stAng',\n                f: '+- cd2 0 swAng'\n            },\n            {\n                n: 'mswAng',\n                f: '+- 0 0 swAng'\n            },\n            {\n                n: 'ix',\n                f: '+- r 0 idx'\n            },\n            {\n                n: 'iy',\n                f: '+/ hR y3 2'\n            },\n            {\n                n: 'q12',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'dang2',\n                f: 'at2 idx q12'\n            },\n            {\n                n: 'swAng2',\n                f: '+- dang2 0 cd4'\n            },\n            {\n                n: 'swAng3',\n                f: '+- cd4 dang2 0'\n            },\n            {\n                n: 'stAng3',\n                f: '+- cd2 0 dang2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: 'mswAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'th'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'stAng3',\n                        swAng: 'swAng3'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: 'mswAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'th'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'swAng2'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    curvedUpArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'aw',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'q1',\n                f: '+/ th aw 4'\n            },\n            {\n                n: 'wR',\n                f: '+- wd2 0 q1'\n            },\n            {\n                n: 'q7',\n                f: '*/ wR 2 1'\n            },\n            {\n                n: 'q8',\n                f: '*/ q7 q7 1'\n            },\n            {\n                n: 'q9',\n                f: '*/ th th 1'\n            },\n            {\n                n: 'q10',\n                f: '+- q8 0 q9'\n            },\n            {\n                n: 'q11',\n                f: 'sqrt q10'\n            },\n            {\n                n: 'idy',\n                f: '*/ q11 h q7'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 idy ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'ah',\n                f: '*/ ss adj3 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- wR th 0'\n            },\n            {\n                n: 'q2',\n                f: '*/ h h 1'\n            },\n            {\n                n: 'q3',\n                f: '*/ ah ah 1'\n            },\n            {\n                n: 'q4',\n                f: '+- q2 0 q3'\n            },\n            {\n                n: 'q5',\n                f: 'sqrt q4'\n            },\n            {\n                n: 'dx',\n                f: '*/ q5 wR h'\n            },\n            {\n                n: 'x5',\n                f: '+- wR dx 0'\n            },\n            {\n                n: 'x7',\n                f: '+- x3 dx 0'\n            },\n            {\n                n: 'q6',\n                f: '+- aw 0 th'\n            },\n            {\n                n: 'dh',\n                f: '*/ q6 1 2'\n            },\n            {\n                n: 'x4',\n                f: '+- x5 0 dh'\n            },\n            {\n                n: 'x8',\n                f: '+- x7 dh 0'\n            },\n            {\n                n: 'aw2',\n                f: '*/ aw 1 2'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 aw2'\n            },\n            {\n                n: 'y1',\n                f: '+- t ah 0'\n            },\n            {\n                n: 'swAng',\n                f: 'at2 ah dx'\n            },\n            {\n                n: 'mswAng',\n                f: '+- 0 0 swAng'\n            },\n            {\n                n: 'iy',\n                f: '+- t idy 0'\n            },\n            {\n                n: 'ix',\n                f: '+/ wR x3 2'\n            },\n            {\n                n: 'q12',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'dang2',\n                f: 'at2 idy q12'\n            },\n            {\n                n: 'swAng2',\n                f: '+- dang2 0 swAng'\n            },\n            {\n                n: 'mswAng2',\n                f: '+- 0 0 swAng2'\n            },\n            {\n                n: 'stAng3',\n                f: '+- cd4 0 swAng'\n            },\n            {\n                n: 'swAng3',\n                f: '+- swAng dang2 0'\n            },\n            {\n                n: 'stAng2',\n                f: '+- cd4 0 dang2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x6',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng3',\n                        swAng: 'swAng3'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng2',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'wR',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'th',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ix',\n                            y: 'iy'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng2',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'stAng3',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wR',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'th',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'h',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    decagon: {\n        avLst: [\n            {\n                n: 'vf',\n                f: 'val 105146'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'shd2',\n                f: '*/ hd2 vf 100000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos wd2 2160000'\n            },\n            {\n                n: 'dx2',\n                f: 'cos wd2 4320000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'dy1',\n                f: 'sin shd2 4320000'\n            },\n            {\n                n: 'dy2',\n                f: 'sin shd2 2160000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    diagStripe: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 100000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w a 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ x2 1 2'\n            },\n            {\n                n: 'x3',\n                f: '+/ x2 r 2'\n            },\n            {\n                n: 'y2',\n                f: '*/ h a 100000'\n            },\n            {\n                n: 'y1',\n                f: '*/ y2 1 2'\n            },\n            {\n                n: 'y3',\n                f: '+/ y2 b 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    diamond: {\n        gdLst: [\n            {\n                n: 'ir',\n                f: '*/ w 3 4'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    dodecagon: {\n        gdLst: [\n            {\n                n: 'x1',\n                f: '*/ w 2894 21600'\n            },\n            {\n                n: 'x2',\n                f: '*/ w 7906 21600'\n            },\n            {\n                n: 'x3',\n                f: '*/ w 13694 21600'\n            },\n            {\n                n: 'x4',\n                f: '*/ w 18706 21600'\n            },\n            {\n                n: 'y1',\n                f: '*/ h 2894 21600'\n            },\n            {\n                n: 'y2',\n                f: '*/ h 7906 21600'\n            },\n            {\n                n: 'y3',\n                f: '*/ h 13694 21600'\n            },\n            {\n                n: 'y4',\n                f: '*/ h 18706 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    donut: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dr',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'iwd2',\n                f: '+- wd2 0 dr'\n            },\n            {\n                n: 'ihd2',\n                f: '+- hd2 0 dr'\n            },\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'dr',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'iwd2',\n                        hR: 'ihd2',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'iwd2',\n                        hR: 'ihd2',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'iwd2',\n                        hR: 'ihd2',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'iwd2',\n                        hR: 'ihd2',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    doubleWave: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 6250'\n            },\n            {\n                n: 'adj2',\n                f: 'val 0'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 12500'\n            },\n            {\n                n: 'a2',\n                f: 'pin -10000 adj2 10000'\n            },\n            {\n                n: 'y1',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ y1 10 3'\n            },\n            {\n                n: 'y2',\n                f: '+- y1 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- y1 dy2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'y5',\n                f: '+- y4 0 dy2'\n            },\n            {\n                n: 'y6',\n                f: '+- y4 dy2 0'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w a2 100000'\n            },\n            {\n                n: 'of2',\n                f: '*/ w a2 50000'\n            },\n            {\n                n: 'x1',\n                f: 'abs dx1'\n            },\n            {\n                n: 'dx2',\n                f: '?: of2 0 of2'\n            },\n            {\n                n: 'x2',\n                f: '+- l 0 dx2'\n            },\n            {\n                n: 'dx8',\n                f: '?: of2 of2 0'\n            },\n            {\n                n: 'x8',\n                f: '+- r 0 dx8'\n            },\n            {\n                n: 'dx3',\n                f: '+/ dx2 x8 6'\n            },\n            {\n                n: 'x3',\n                f: '+- x2 dx3 0'\n            },\n            {\n                n: 'dx4',\n                f: '+/ dx2 x8 3'\n            },\n            {\n                n: 'x4',\n                f: '+- x2 dx4 0'\n            },\n            {\n                n: 'x5',\n                f: '+/ x2 x8 2'\n            },\n            {\n                n: 'x6',\n                f: '+- x5 dx3 0'\n            },\n            {\n                n: 'x7',\n                f: '+/ x6 x8 2'\n            },\n            {\n                n: 'x9',\n                f: '+- l dx8 0'\n            },\n            {\n                n: 'x15',\n                f: '+- r dx2 0'\n            },\n            {\n                n: 'x10',\n                f: '+- x9 dx3 0'\n            },\n            {\n                n: 'x11',\n                f: '+- x9 dx4 0'\n            },\n            {\n                n: 'x12',\n                f: '+/ x9 x15 2'\n            },\n            {\n                n: 'x13',\n                f: '+- x12 dx3 0'\n            },\n            {\n                n: 'x14',\n                f: '+/ x13 x15 2'\n            },\n            {\n                n: 'x16',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'xAdj',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'il',\n                f: 'max x2 x9'\n            },\n            {\n                n: 'ir',\n                f: 'min x8 x15'\n            },\n            {\n                n: 'it',\n                f: '*/ h a1 50000'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 it'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x3',\n                                y: 'y2'\n                            },\n                            {\n                                x: 'x4',\n                                y: 'y3'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x6',\n                                y: 'y2'\n                            },\n                            {\n                                x: 'x7',\n                                y: 'y3'\n                            },\n                            {\n                                x: 'x8',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x15',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x14',\n                                y: 'y6'\n                            },\n                            {\n                                x: 'x13',\n                                y: 'y5'\n                            },\n                            {\n                                x: 'x12',\n                                y: 'y4'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x11',\n                                y: 'y6'\n                            },\n                            {\n                                x: 'x10',\n                                y: 'y5'\n                            },\n                            {\n                                x: 'x9',\n                                y: 'y4'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    downArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 h ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'dy1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'y1',\n                f: '+- b 0 dy1'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w a1 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'dy2',\n                f: '*/ x1 dy1 wd2'\n            },\n            {\n                n: 'y2',\n                f: '+- y1 dy2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    downArrowCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 64977'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 h ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q2',\n                f: '*/ a3 ss h'\n            },\n            {\n                n: 'maxAdj4',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'dy3',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'y3',\n                f: '+- b 0 dy3'\n            },\n            {\n                n: 'y2',\n                f: '*/ h a4 100000'\n            },\n            {\n                n: 'y1',\n                f: '*/ y2 1 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    ellipse: {\n        gdLst: [\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    ellipseRibbon: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 25000 adj2 75000'\n            },\n            {\n                n: 'q10',\n                f: '+- 100000 0 a1'\n            },\n            {\n                n: 'q11',\n                f: '*/ q10 1 2'\n            },\n            {\n                n: 'q12',\n                f: '+- a1 0 q11'\n            },\n            {\n                n: 'minAdj3',\n                f: 'max 0 q12'\n            },\n            {\n                n: 'a3',\n                f: 'pin minAdj3 adj3 a1'\n            },\n            {\n                n: 'dx2',\n                f: '*/ w a2 200000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- x2 wd8 0'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x3'\n            },\n            {\n                n: 'x5',\n                f: '+- r 0 x2'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 wd8'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a3 100000'\n            },\n            {\n                n: 'f1',\n                f: '*/ 4 dy1 w'\n            },\n            {\n                n: 'q1',\n                f: '*/ x3 x3 w'\n            },\n            {\n                n: 'q2',\n                f: '+- x3 0 q1'\n            },\n            {\n                n: 'y1',\n                f: '*/ f1 q2 1'\n            },\n            {\n                n: 'cx1',\n                f: '*/ x3 1 2'\n            },\n            {\n                n: 'cy1',\n                f: '*/ f1 cx1 1'\n            },\n            {\n                n: 'cx2',\n                f: '+- r 0 cx1'\n            },\n            {\n                n: 'q1',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'dy3',\n                f: '+- q1 0 dy1'\n            },\n            {\n                n: 'q3',\n                f: '*/ x2 x2 w'\n            },\n            {\n                n: 'q4',\n                f: '+- x2 0 q3'\n            },\n            {\n                n: 'q5',\n                f: '*/ f1 q4 1'\n            },\n            {\n                n: 'y3',\n                f: '+- q5 dy3 0'\n            },\n            {\n                n: 'q6',\n                f: '+- dy1 dy3 y3'\n            },\n            {\n                n: 'q7',\n                f: '+- q6 dy1 0'\n            },\n            {\n                n: 'cy3',\n                f: '+- q7 dy3 0'\n            },\n            {\n                n: 'rh',\n                f: '+- b 0 q1'\n            },\n            {\n                n: 'q8',\n                f: '*/ dy1 14 16'\n            },\n            {\n                n: 'y2',\n                f: '+/ q8 rh 2'\n            },\n            {\n                n: 'y5',\n                f: '+- q5 rh 0'\n            },\n            {\n                n: 'y6',\n                f: '+- y3 rh 0'\n            },\n            {\n                n: 'cx4',\n                f: '*/ x2 1 2'\n            },\n            {\n                n: 'q9',\n                f: '*/ f1 cx4 1'\n            },\n            {\n                n: 'cy4',\n                f: '+- q9 rh 0'\n            },\n            {\n                n: 'cx5',\n                f: '+- r 0 cx4'\n            },\n            {\n                n: 'cy6',\n                f: '+- cy3 rh 0'\n            },\n            {\n                n: 'y7',\n                f: '+- y1 dy3 0'\n            },\n            {\n                n: 'cy7',\n                f: '+- q1 q1 y7'\n            },\n            {\n                n: 'y8',\n                f: '+- b 0 dy1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx1',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy3'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y3'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx2',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'r',\n                                y: 't'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'rh'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx5',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y5'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy6'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y6'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx4',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'l',\n                                y: 'rh'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy3'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y3'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy7'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y7'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx1',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy3'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y3'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx2',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'r',\n                                y: 't'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'rh'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx5',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y5'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy6'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y6'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx4',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'l',\n                                y: 'rh'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    ellipseRibbon2: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 25000 adj2 75000'\n            },\n            {\n                n: 'q10',\n                f: '+- 100000 0 a1'\n            },\n            {\n                n: 'q11',\n                f: '*/ q10 1 2'\n            },\n            {\n                n: 'q12',\n                f: '+- a1 0 q11'\n            },\n            {\n                n: 'minAdj3',\n                f: 'max 0 q12'\n            },\n            {\n                n: 'a3',\n                f: 'pin minAdj3 adj3 a1'\n            },\n            {\n                n: 'dx2',\n                f: '*/ w a2 200000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- x2 wd8 0'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x3'\n            },\n            {\n                n: 'x5',\n                f: '+- r 0 x2'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 wd8'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a3 100000'\n            },\n            {\n                n: 'f1',\n                f: '*/ 4 dy1 w'\n            },\n            {\n                n: 'q1',\n                f: '*/ x3 x3 w'\n            },\n            {\n                n: 'q2',\n                f: '+- x3 0 q1'\n            },\n            {\n                n: 'u1',\n                f: '*/ f1 q2 1'\n            },\n            {\n                n: 'y1',\n                f: '+- b 0 u1'\n            },\n            {\n                n: 'cx1',\n                f: '*/ x3 1 2'\n            },\n            {\n                n: 'cu1',\n                f: '*/ f1 cx1 1'\n            },\n            {\n                n: 'cy1',\n                f: '+- b 0 cu1'\n            },\n            {\n                n: 'cx2',\n                f: '+- r 0 cx1'\n            },\n            {\n                n: 'q1',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'dy3',\n                f: '+- q1 0 dy1'\n            },\n            {\n                n: 'q3',\n                f: '*/ x2 x2 w'\n            },\n            {\n                n: 'q4',\n                f: '+- x2 0 q3'\n            },\n            {\n                n: 'q5',\n                f: '*/ f1 q4 1'\n            },\n            {\n                n: 'u3',\n                f: '+- q5 dy3 0'\n            },\n            {\n                n: 'y3',\n                f: '+- b 0 u3'\n            },\n            {\n                n: 'q6',\n                f: '+- dy1 dy3 u3'\n            },\n            {\n                n: 'q7',\n                f: '+- q6 dy1 0'\n            },\n            {\n                n: 'cu3',\n                f: '+- q7 dy3 0'\n            },\n            {\n                n: 'cy3',\n                f: '+- b 0 cu3'\n            },\n            {\n                n: 'rh',\n                f: '+- b 0 q1'\n            },\n            {\n                n: 'q8',\n                f: '*/ dy1 14 16'\n            },\n            {\n                n: 'u2',\n                f: '+/ q8 rh 2'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 u2'\n            },\n            {\n                n: 'u5',\n                f: '+- q5 rh 0'\n            },\n            {\n                n: 'y5',\n                f: '+- b 0 u5'\n            },\n            {\n                n: 'u6',\n                f: '+- u3 rh 0'\n            },\n            {\n                n: 'y6',\n                f: '+- b 0 u6'\n            },\n            {\n                n: 'cx4',\n                f: '*/ x2 1 2'\n            },\n            {\n                n: 'q9',\n                f: '*/ f1 cx4 1'\n            },\n            {\n                n: 'cu4',\n                f: '+- q9 rh 0'\n            },\n            {\n                n: 'cy4',\n                f: '+- b 0 cu4'\n            },\n            {\n                n: 'cx5',\n                f: '+- r 0 cx4'\n            },\n            {\n                n: 'cu6',\n                f: '+- cu3 rh 0'\n            },\n            {\n                n: 'cy6',\n                f: '+- b 0 cu6'\n            },\n            {\n                n: 'u7',\n                f: '+- u1 dy3 0'\n            },\n            {\n                n: 'y7',\n                f: '+- b 0 u7'\n            },\n            {\n                n: 'cu7',\n                f: '+- q1 q1 u7'\n            },\n            {\n                n: 'cy7',\n                f: '+- b 0 cu7'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx1',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy3'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y3'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx2',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'r',\n                                y: 'b'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'q1'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx5',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y5'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy6'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y6'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx4',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'l',\n                                y: 'q1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy3'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y3'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy7'\n                            },\n                            {\n                                x: 'x3',\n                                y: 'y7'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'q1'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx4',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y5'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy6'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y6'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx5',\n                                y: 'cy4'\n                            },\n                            {\n                                x: 'r',\n                                y: 'q1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx2',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'x4',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'cy3'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y3'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'cx1',\n                                y: 'cy1'\n                            },\n                            {\n                                x: 'l',\n                                y: 'b'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y7'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    flowChartAlternateProcess: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '+- r 0 ssd6'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 ssd6'\n            },\n            {\n                n: 'il',\n                f: '*/ ssd6 29289 100000'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'ssd6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ssd6',\n                        hR: 'ssd6',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ssd6',\n                        hR: 'ssd6',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ssd6',\n                        hR: 'ssd6',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ssd6',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ssd6',\n                        hR: 'ssd6',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    flowChartCollate: {\n        gdLst: [\n            {\n                n: 'ir',\n                f: '*/ w 3 4'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 2,\n                h: 2\n            }\n        ]\n    },\n    flowChartConnector: {\n        gdLst: [\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    flowChartDecision: {\n        gdLst: [\n            {\n                n: 'ir',\n                f: '*/ w 3 4'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 2,\n                h: 2\n            }\n        ]\n    },\n    flowChartDelay: {\n        gdLst: [\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    flowChartDisplay: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 5 6'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '6'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 6,\n                h: 6\n            }\n        ]\n    },\n    flowChartDocument: {\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h 17322 21600'\n            },\n            {\n                n: 'y2',\n                f: '*/ h 20172 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '17322'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '10800',\n                                y: '17322'\n                            },\n                            {\n                                x: '10800',\n                                y: '23922'\n                            },\n                            {\n                                x: '0',\n                                y: '20172'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 21600,\n                h: 21600\n            }\n        ]\n    },\n    flowChartExtract: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 2,\n                h: 2\n            }\n        ]\n    },\n    flowChartInputOutput: {\n        gdLst: [\n            {\n                n: 'x3',\n                f: '*/ w 2 5'\n            },\n            {\n                n: 'x4',\n                f: '*/ w 3 5'\n            },\n            {\n                n: 'x5',\n                f: '*/ w 4 5'\n            },\n            {\n                n: 'x6',\n                f: '*/ w 9 10'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '4',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 5,\n                h: 5\n            }\n        ]\n    },\n    flowChartInternalStorage: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 1,\n                h: 1\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '8'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '8',\n                            y: '1'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 8,\n                h: 8\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 1,\n                h: 1\n            }\n        ]\n    },\n    flowChartMagneticDisk: {\n        gdLst: [\n            {\n                n: 'y3',\n                f: '*/ h 5 6'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '3',\n                        hR: '1',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '6',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '3',\n                        hR: '1',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 6,\n                h: 6\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '6',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '3',\n                        hR: '1',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 6,\n                h: 6\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '3',\n                        hR: '1',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '6',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '3',\n                        hR: '1',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 6,\n                h: 6\n            }\n        ]\n    },\n    flowChartMagneticDrum: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 2 3'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 6,\n                h: 6\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '5',\n                            y: '6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 6,\n                h: 6\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 6,\n                h: 6\n            }\n        ]\n    },\n    flowChartMagneticTape: {\n        gdLst: [\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            },\n            {\n                n: 'ang1',\n                f: 'at2 w h'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'ang1'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'ib'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    flowChartManualInput: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 5,\n                h: 5\n            }\n        ]\n    },\n    flowChartManualOperation: {\n        gdLst: [\n            {\n                n: 'x3',\n                f: '*/ w 4 5'\n            },\n            {\n                n: 'x4',\n                f: '*/ w 9 10'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '4',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 5,\n                h: 5\n            }\n        ]\n    },\n    flowChartMerge: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 2,\n                h: 2\n            }\n        ]\n    },\n    flowChartMultidocument: {\n        gdLst: [\n            {\n                n: 'y2',\n                f: '*/ h 3675 21600'\n            },\n            {\n                n: 'y8',\n                f: '*/ h 20782 21600'\n            },\n            {\n                n: 'x3',\n                f: '*/ w 9298 21600'\n            },\n            {\n                n: 'x4',\n                f: '*/ w 12286 21600'\n            },\n            {\n                n: 'x5',\n                f: '*/ w 18595 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '20782'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '9298',\n                                y: '23542'\n                            },\n                            {\n                                x: '9298',\n                                y: '18022'\n                            },\n                            {\n                                x: '18595',\n                                y: '18022'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18595',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '1532',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1532',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '20000',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '20000',\n                            y: '16252'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '19298',\n                                y: '16252'\n                            },\n                            {\n                                x: '18595',\n                                y: '16352'\n                            },\n                            {\n                                x: '18595',\n                                y: '16352'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18595',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '2972',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2972',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '14392'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '20800',\n                                y: '14392'\n                            },\n                            {\n                                x: '20000',\n                                y: '14467'\n                            },\n                            {\n                                x: '20000',\n                                y: '14467'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '20000',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 21600,\n                h: 21600\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18595',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18595',\n                            y: '18022'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '9298',\n                                y: '18022'\n                            },\n                            {\n                                x: '9298',\n                                y: '23542'\n                            },\n                            {\n                                x: '0',\n                                y: '20782'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '1532',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1532',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '20000',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '20000',\n                            y: '16252'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '19298',\n                                y: '16252'\n                            },\n                            {\n                                x: '18595',\n                                y: '16352'\n                            },\n                            {\n                                x: '18595',\n                                y: '16352'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '2972',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2972',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '14392'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '20800',\n                                y: '14392'\n                            },\n                            {\n                                x: '20000',\n                                y: '14467'\n                            },\n                            {\n                                x: '20000',\n                                y: '14467'\n                            }\n                        ]\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 21600,\n                h: 21600\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '20782'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '9298',\n                                y: '23542'\n                            },\n                            {\n                                x: '9298',\n                                y: '18022'\n                            },\n                            {\n                                x: '18595',\n                                y: '18022'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18595',\n                            y: '16352'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '18595',\n                                y: '16352'\n                            },\n                            {\n                                x: '19298',\n                                y: '16252'\n                            },\n                            {\n                                x: '20000',\n                                y: '16252'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '20000',\n                            y: '14467'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: '20000',\n                                y: '14467'\n                            },\n                            {\n                                x: '20800',\n                                y: '14392'\n                            },\n                            {\n                                x: '21600',\n                                y: '14392'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2972',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2972',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1532',\n                            y: '1815'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1532',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '3675'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: false,\n                w: 21600,\n                h: 21600\n            }\n        ]\n    },\n    flowChartOfflineStorage: {\n        gdLst: [\n            {\n                n: 'x4',\n                f: '*/ w 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 2,\n                h: 2\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '2',\n                            y: '4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '3',\n                            y: '4'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 5,\n                h: 5\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: true,\n                stroke: true,\n                w: 2,\n                h: 2\n            }\n        ]\n    },\n    flowChartOffpageConnector: {\n        gdLst: [\n            {\n                n: 'y1',\n                f: '*/ h 4 5'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '8'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 10,\n                h: 10\n            }\n        ]\n    },\n    flowChartOnlineStorage: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 5 6'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '6',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '1',\n                        hR: '3',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 6,\n                h: 6\n            }\n        ]\n    },\n    flowChartOr: {\n        gdLst: [\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    flowChartPredefinedProcess: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 7 8'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 1,\n                h: 1\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '8'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '7',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '7',\n                            y: '8'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 8,\n                h: 8\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 1,\n                h: 1\n            }\n        ]\n    },\n    flowChartPreparation: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 4 5'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '8',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '8',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 10,\n                h: 10\n            }\n        ]\n    },\n    flowChartProcess: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 1,\n                h: 1\n            }\n        ]\n    },\n    flowChartPunchedCard: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '5'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 5,\n                h: 5\n            }\n        ]\n    },\n    flowChartPunchedTape: {\n        gdLst: [\n            {\n                n: 'y2',\n                f: '*/ h 9 10'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 4 5'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5',\n                        hR: '2',\n                        stAng: 'cd2',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5',\n                        hR: '2',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '20',\n                            y: '18'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5',\n                        hR: '2',\n                        stAng: '0',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '5',\n                        hR: '2',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 20,\n                h: 20\n            }\n        ]\n    },\n    flowChartSort: {\n        gdLst: [\n            {\n                n: 'ir',\n                f: '*/ w 3 4'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 3 4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false,\n                w: 2,\n                h: 2\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '1'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 2,\n                h: 2\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '0',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '2',\n                            y: '1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1',\n                            y: '2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true,\n                w: 2,\n                h: 2\n            }\n        ]\n    },\n    flowChartSummingJunction: {\n        gdLst: [\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'il',\n                            y: 'it'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ir',\n                            y: 'ib'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ir',\n                            y: 'it'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'il',\n                            y: 'ib'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    flowChartTerminator: {\n        gdLst: [\n            {\n                n: 'il',\n                f: '*/ w 1018 21600'\n            },\n            {\n                n: 'ir',\n                f: '*/ w 20582 21600'\n            },\n            {\n                n: 'it',\n                f: '*/ h 3163 21600'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 18437 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '3475',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18125',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '3475',\n                        hR: '10800',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '3475',\n                            y: '21600'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: '3475',\n                        hR: '10800',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 21600,\n                h: 21600\n            }\n        ]\n    },\n    foldedCorner: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ dy2 1 5'\n            },\n            {\n                n: 'x1',\n                f: '+- r 0 dy2'\n            },\n            {\n                n: 'x2',\n                f: '+- x1 dy1 0'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 dy2'\n            },\n            {\n                n: 'y1',\n                f: '+- y2 dy1 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    frame: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 x1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    funnel: {\n        gdLst: [\n            {\n                n: 'd',\n                f: '*/ ss 1 20'\n            },\n            {\n                n: 'rw2',\n                f: '+- wd2 0 d'\n            },\n            {\n                n: 'rh2',\n                f: '+- hd4 0 d'\n            },\n            {\n                n: 't1',\n                f: 'cos wd2 480000'\n            },\n            {\n                n: 't2',\n                f: 'sin hd4 480000'\n            },\n            {\n                n: 'da',\n                f: 'at2 t1 t2'\n            },\n            {\n                n: '2da',\n                f: '*/ da 2 1'\n            },\n            {\n                n: 'stAng1',\n                f: '+- cd2 0 da'\n            },\n            {\n                n: 'swAng1',\n                f: '+- cd2 2da 0'\n            },\n            {\n                n: 'swAng3',\n                f: '+- cd2 0 2da'\n            },\n            {\n                n: 'rw3',\n                f: '*/ wd2 1 4'\n            },\n            {\n                n: 'rh3',\n                f: '*/ hd4 1 4'\n            },\n            {\n                n: 'ct1',\n                f: 'cos hd4 stAng1'\n            },\n            {\n                n: 'st1',\n                f: 'sin wd2 stAng1'\n            },\n            {\n                n: 'm1',\n                f: 'mod ct1 st1 0'\n            },\n            {\n                n: 'n1',\n                f: '*/ wd2 hd4 m1'\n            },\n            {\n                n: 'dx1',\n                f: 'cos n1 stAng1'\n            },\n            {\n                n: 'dy1',\n                f: 'sin n1 stAng1'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- hd4 dy1 0'\n            },\n            {\n                n: 'ct3',\n                f: 'cos rh3 da'\n            },\n            {\n                n: 'st3',\n                f: 'sin rw3 da'\n            },\n            {\n                n: 'm3',\n                f: 'mod ct3 st3 0'\n            },\n            {\n                n: 'n3',\n                f: '*/ rw3 rh3 m3'\n            },\n            {\n                n: 'dx3',\n                f: 'cos n3 da'\n            },\n            {\n                n: 'dy3',\n                f: 'sin n3 da'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'vc3',\n                f: '+- b 0 rh3'\n            },\n            {\n                n: 'y2',\n                f: '+- vc3 dy3 0'\n            },\n            {\n                n: 'x2',\n                f: '+- wd2 0 rw2'\n            },\n            {\n                n: 'cd',\n                f: '*/ cd2 2 1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd4',\n                        stAng: 'stAng1',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw3',\n                        hR: 'rh3',\n                        stAng: 'da',\n                        swAng: 'swAng3'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'hd4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw2',\n                        hR: 'rh2',\n                        stAng: 'cd2',\n                        swAng: '-21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    gear6: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 15000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 3526'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 20000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 5358'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'lFD',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'th2',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'l2',\n                f: '*/ lFD 1 2'\n            },\n            {\n                n: 'l3',\n                f: '+- th2 l2 0'\n            },\n            {\n                n: 'rh',\n                f: '+- hd2 0 th'\n            },\n            {\n                n: 'rw',\n                f: '+- wd2 0 th'\n            },\n            {\n                n: 'dr',\n                f: '+- rw 0 rh'\n            },\n            {\n                n: 'maxr',\n                f: '?: dr rh rw'\n            },\n            {\n                n: 'ha',\n                f: 'at2 maxr l3'\n            },\n            {\n                n: 'aA1',\n                f: '+- 19800000 0 ha'\n            },\n            {\n                n: 'aD1',\n                f: '+- 19800000 ha 0'\n            },\n            {\n                n: 'ta11',\n                f: 'cos rw aA1'\n            },\n            {\n                n: 'ta12',\n                f: 'sin rh aA1'\n            },\n            {\n                n: 'bA1',\n                f: 'at2 ta11 ta12'\n            },\n            {\n                n: 'cta1',\n                f: 'cos rh bA1'\n            },\n            {\n                n: 'sta1',\n                f: 'sin rw bA1'\n            },\n            {\n                n: 'ma1',\n                f: 'mod cta1 sta1 0'\n            },\n            {\n                n: 'na1',\n                f: '*/ rw rh ma1'\n            },\n            {\n                n: 'dxa1',\n                f: 'cos na1 bA1'\n            },\n            {\n                n: 'dya1',\n                f: 'sin na1 bA1'\n            },\n            {\n                n: 'xA1',\n                f: '+- hc dxa1 0'\n            },\n            {\n                n: 'yA1',\n                f: '+- vc dya1 0'\n            },\n            {\n                n: 'td11',\n                f: 'cos rw aD1'\n            },\n            {\n                n: 'td12',\n                f: 'sin rh aD1'\n            },\n            {\n                n: 'bD1',\n                f: 'at2 td11 td12'\n            },\n            {\n                n: 'ctd1',\n                f: 'cos rh bD1'\n            },\n            {\n                n: 'std1',\n                f: 'sin rw bD1'\n            },\n            {\n                n: 'md1',\n                f: 'mod ctd1 std1 0'\n            },\n            {\n                n: 'nd1',\n                f: '*/ rw rh md1'\n            },\n            {\n                n: 'dxd1',\n                f: 'cos nd1 bD1'\n            },\n            {\n                n: 'dyd1',\n                f: 'sin nd1 bD1'\n            },\n            {\n                n: 'xD1',\n                f: '+- hc dxd1 0'\n            },\n            {\n                n: 'yD1',\n                f: '+- vc dyd1 0'\n            },\n            {\n                n: 'xAD1',\n                f: '+- xA1 0 xD1'\n            },\n            {\n                n: 'yAD1',\n                f: '+- yA1 0 yD1'\n            },\n            {\n                n: 'lAD1',\n                f: 'mod xAD1 yAD1 0'\n            },\n            {\n                n: 'a1',\n                f: 'at2 yAD1 xAD1'\n            },\n            {\n                n: 'dxF1',\n                f: 'sin lFD a1'\n            },\n            {\n                n: 'dyF1',\n                f: 'cos lFD a1'\n            },\n            {\n                n: 'xF1',\n                f: '+- xD1 dxF1 0'\n            },\n            {\n                n: 'yF1',\n                f: '+- yD1 dyF1 0'\n            },\n            {\n                n: 'xE1',\n                f: '+- xA1 0 dxF1'\n            },\n            {\n                n: 'yE1',\n                f: '+- yA1 0 dyF1'\n            },\n            {\n                n: 'yC1t',\n                f: 'sin th a1'\n            },\n            {\n                n: 'xC1t',\n                f: 'cos th a1'\n            },\n            {\n                n: 'yC1',\n                f: '+- yF1 yC1t 0'\n            },\n            {\n                n: 'xC1',\n                f: '+- xF1 0 xC1t'\n            },\n            {\n                n: 'yB1',\n                f: '+- yE1 yC1t 0'\n            },\n            {\n                n: 'xB1',\n                f: '+- xE1 0 xC1t'\n            },\n            {\n                n: 'aD6',\n                f: '+- 3cd4 ha 0'\n            },\n            {\n                n: 'td61',\n                f: 'cos rw aD6'\n            },\n            {\n                n: 'td62',\n                f: 'sin rh aD6'\n            },\n            {\n                n: 'bD6',\n                f: 'at2 td61 td62'\n            },\n            {\n                n: 'ctd6',\n                f: 'cos rh bD6'\n            },\n            {\n                n: 'std6',\n                f: 'sin rw bD6'\n            },\n            {\n                n: 'md6',\n                f: 'mod ctd6 std6 0'\n            },\n            {\n                n: 'nd6',\n                f: '*/ rw rh md6'\n            },\n            {\n                n: 'dxd6',\n                f: 'cos nd6 bD6'\n            },\n            {\n                n: 'dyd6',\n                f: 'sin nd6 bD6'\n            },\n            {\n                n: 'xD6',\n                f: '+- hc dxd6 0'\n            },\n            {\n                n: 'yD6',\n                f: '+- vc dyd6 0'\n            },\n            {\n                n: 'xA6',\n                f: '+- hc 0 dxd6'\n            },\n            {\n                n: 'xF6',\n                f: '+- xD6 0 lFD'\n            },\n            {\n                n: 'xE6',\n                f: '+- xA6 lFD 0'\n            },\n            {\n                n: 'yC6',\n                f: '+- yD6 0 th'\n            },\n            {\n                n: 'swAng1',\n                f: '+- bA1 0 bD6'\n            },\n            {\n                n: 'aA2',\n                f: '+- 1800000 0 ha'\n            },\n            {\n                n: 'aD2',\n                f: '+- 1800000 ha 0'\n            },\n            {\n                n: 'ta21',\n                f: 'cos rw aA2'\n            },\n            {\n                n: 'ta22',\n                f: 'sin rh aA2'\n            },\n            {\n                n: 'bA2',\n                f: 'at2 ta21 ta22'\n            },\n            {\n                n: 'yA2',\n                f: '+- h 0 yD1'\n            },\n            {\n                n: 'td21',\n                f: 'cos rw aD2'\n            },\n            {\n                n: 'td22',\n                f: 'sin rh aD2'\n            },\n            {\n                n: 'bD2',\n                f: 'at2 td21 td22'\n            },\n            {\n                n: 'yD2',\n                f: '+- h 0 yA1'\n            },\n            {\n                n: 'yC2',\n                f: '+- h 0 yB1'\n            },\n            {\n                n: 'yB2',\n                f: '+- h 0 yC1'\n            },\n            {\n                n: 'xB2',\n                f: 'val xC1'\n            },\n            {\n                n: 'swAng2',\n                f: '+- bA2 0 bD1'\n            },\n            {\n                n: 'aD3',\n                f: '+- cd4 ha 0'\n            },\n            {\n                n: 'td31',\n                f: 'cos rw aD3'\n            },\n            {\n                n: 'td32',\n                f: 'sin rh aD3'\n            },\n            {\n                n: 'bD3',\n                f: 'at2 td31 td32'\n            },\n            {\n                n: 'yD3',\n                f: '+- h 0 yD6'\n            },\n            {\n                n: 'yB3',\n                f: '+- h 0 yC6'\n            },\n            {\n                n: 'aD4',\n                f: '+- 9000000 ha 0'\n            },\n            {\n                n: 'td41',\n                f: 'cos rw aD4'\n            },\n            {\n                n: 'td42',\n                f: 'sin rh aD4'\n            },\n            {\n                n: 'bD4',\n                f: 'at2 td41 td42'\n            },\n            {\n                n: 'xD4',\n                f: '+- w 0 xD1'\n            },\n            {\n                n: 'xC4',\n                f: '+- w 0 xC1'\n            },\n            {\n                n: 'xB4',\n                f: '+- w 0 xB1'\n            },\n            {\n                n: 'aD5',\n                f: '+- 12600000 ha 0'\n            },\n            {\n                n: 'td51',\n                f: 'cos rw aD5'\n            },\n            {\n                n: 'td52',\n                f: 'sin rh aD5'\n            },\n            {\n                n: 'bD5',\n                f: 'at2 td51 td52'\n            },\n            {\n                n: 'xD5',\n                f: '+- w 0 xA1'\n            },\n            {\n                n: 'xC5',\n                f: '+- w 0 xB1'\n            },\n            {\n                n: 'xB5',\n                f: '+- w 0 xC1'\n            },\n            {\n                n: 'xCxn1',\n                f: '+/ xB1 xC1 2'\n            },\n            {\n                n: 'yCxn1',\n                f: '+/ yB1 yC1 2'\n            },\n            {\n                n: 'yCxn2',\n                f: '+- b 0 yCxn1'\n            },\n            {\n                n: 'xCxn4',\n                f: '+/ r 0 xCxn1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'xA1',\n                            y: 'yA1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB1',\n                            y: 'yB1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC1',\n                            y: 'yC1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD1',\n                            y: 'yD1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD1',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC1',\n                            y: 'yB2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB1',\n                            y: 'yC2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xA1',\n                            y: 'yD2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD2',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xF6',\n                            y: 'yB3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xE6',\n                            y: 'yB3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xA6',\n                            y: 'yD3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD3',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB4',\n                            y: 'yC2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC4',\n                            y: 'yB2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD4',\n                            y: 'yA2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD4',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB5',\n                            y: 'yC1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC5',\n                            y: 'yB1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD5',\n                            y: 'yA1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD5',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xE6',\n                            y: 'yC6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xF6',\n                            y: 'yC6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD6',\n                            y: 'yD6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD6',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    gear9: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 10000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 1763'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 20000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 2679'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'lFD',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'th2',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'l2',\n                f: '*/ lFD 1 2'\n            },\n            {\n                n: 'l3',\n                f: '+- th2 l2 0'\n            },\n            {\n                n: 'rh',\n                f: '+- hd2 0 th'\n            },\n            {\n                n: 'rw',\n                f: '+- wd2 0 th'\n            },\n            {\n                n: 'dr',\n                f: '+- rw 0 rh'\n            },\n            {\n                n: 'maxr',\n                f: '?: dr rh rw'\n            },\n            {\n                n: 'ha',\n                f: 'at2 maxr l3'\n            },\n            {\n                n: 'aA1',\n                f: '+- 18600000 0 ha'\n            },\n            {\n                n: 'aD1',\n                f: '+- 18600000 ha 0'\n            },\n            {\n                n: 'ta11',\n                f: 'cos rw aA1'\n            },\n            {\n                n: 'ta12',\n                f: 'sin rh aA1'\n            },\n            {\n                n: 'bA1',\n                f: 'at2 ta11 ta12'\n            },\n            {\n                n: 'cta1',\n                f: 'cos rh bA1'\n            },\n            {\n                n: 'sta1',\n                f: 'sin rw bA1'\n            },\n            {\n                n: 'ma1',\n                f: 'mod cta1 sta1 0'\n            },\n            {\n                n: 'na1',\n                f: '*/ rw rh ma1'\n            },\n            {\n                n: 'dxa1',\n                f: 'cos na1 bA1'\n            },\n            {\n                n: 'dya1',\n                f: 'sin na1 bA1'\n            },\n            {\n                n: 'xA1',\n                f: '+- hc dxa1 0'\n            },\n            {\n                n: 'yA1',\n                f: '+- vc dya1 0'\n            },\n            {\n                n: 'td11',\n                f: 'cos rw aD1'\n            },\n            {\n                n: 'td12',\n                f: 'sin rh aD1'\n            },\n            {\n                n: 'bD1',\n                f: 'at2 td11 td12'\n            },\n            {\n                n: 'ctd1',\n                f: 'cos rh bD1'\n            },\n            {\n                n: 'std1',\n                f: 'sin rw bD1'\n            },\n            {\n                n: 'md1',\n                f: 'mod ctd1 std1 0'\n            },\n            {\n                n: 'nd1',\n                f: '*/ rw rh md1'\n            },\n            {\n                n: 'dxd1',\n                f: 'cos nd1 bD1'\n            },\n            {\n                n: 'dyd1',\n                f: 'sin nd1 bD1'\n            },\n            {\n                n: 'xD1',\n                f: '+- hc dxd1 0'\n            },\n            {\n                n: 'yD1',\n                f: '+- vc dyd1 0'\n            },\n            {\n                n: 'xAD1',\n                f: '+- xA1 0 xD1'\n            },\n            {\n                n: 'yAD1',\n                f: '+- yA1 0 yD1'\n            },\n            {\n                n: 'lAD1',\n                f: 'mod xAD1 yAD1 0'\n            },\n            {\n                n: 'a1',\n                f: 'at2 yAD1 xAD1'\n            },\n            {\n                n: 'dxF1',\n                f: 'sin lFD a1'\n            },\n            {\n                n: 'dyF1',\n                f: 'cos lFD a1'\n            },\n            {\n                n: 'xF1',\n                f: '+- xD1 dxF1 0'\n            },\n            {\n                n: 'yF1',\n                f: '+- yD1 dyF1 0'\n            },\n            {\n                n: 'xE1',\n                f: '+- xA1 0 dxF1'\n            },\n            {\n                n: 'yE1',\n                f: '+- yA1 0 dyF1'\n            },\n            {\n                n: 'yC1t',\n                f: 'sin th a1'\n            },\n            {\n                n: 'xC1t',\n                f: 'cos th a1'\n            },\n            {\n                n: 'yC1',\n                f: '+- yF1 yC1t 0'\n            },\n            {\n                n: 'xC1',\n                f: '+- xF1 0 xC1t'\n            },\n            {\n                n: 'yB1',\n                f: '+- yE1 yC1t 0'\n            },\n            {\n                n: 'xB1',\n                f: '+- xE1 0 xC1t'\n            },\n            {\n                n: 'aA2',\n                f: '+- 21000000 0 ha'\n            },\n            {\n                n: 'aD2',\n                f: '+- 21000000 ha 0'\n            },\n            {\n                n: 'ta21',\n                f: 'cos rw aA2'\n            },\n            {\n                n: 'ta22',\n                f: 'sin rh aA2'\n            },\n            {\n                n: 'bA2',\n                f: 'at2 ta21 ta22'\n            },\n            {\n                n: 'cta2',\n                f: 'cos rh bA2'\n            },\n            {\n                n: 'sta2',\n                f: 'sin rw bA2'\n            },\n            {\n                n: 'ma2',\n                f: 'mod cta2 sta2 0'\n            },\n            {\n                n: 'na2',\n                f: '*/ rw rh ma2'\n            },\n            {\n                n: 'dxa2',\n                f: 'cos na2 bA2'\n            },\n            {\n                n: 'dya2',\n                f: 'sin na2 bA2'\n            },\n            {\n                n: 'xA2',\n                f: '+- hc dxa2 0'\n            },\n            {\n                n: 'yA2',\n                f: '+- vc dya2 0'\n            },\n            {\n                n: 'td21',\n                f: 'cos rw aD2'\n            },\n            {\n                n: 'td22',\n                f: 'sin rh aD2'\n            },\n            {\n                n: 'bD2',\n                f: 'at2 td21 td22'\n            },\n            {\n                n: 'ctd2',\n                f: 'cos rh bD2'\n            },\n            {\n                n: 'std2',\n                f: 'sin rw bD2'\n            },\n            {\n                n: 'md2',\n                f: 'mod ctd2 std2 0'\n            },\n            {\n                n: 'nd2',\n                f: '*/ rw rh md2'\n            },\n            {\n                n: 'dxd2',\n                f: 'cos nd2 bD2'\n            },\n            {\n                n: 'dyd2',\n                f: 'sin nd2 bD2'\n            },\n            {\n                n: 'xD2',\n                f: '+- hc dxd2 0'\n            },\n            {\n                n: 'yD2',\n                f: '+- vc dyd2 0'\n            },\n            {\n                n: 'xAD2',\n                f: '+- xA2 0 xD2'\n            },\n            {\n                n: 'yAD2',\n                f: '+- yA2 0 yD2'\n            },\n            {\n                n: 'lAD2',\n                f: 'mod xAD2 yAD2 0'\n            },\n            {\n                n: 'a2',\n                f: 'at2 yAD2 xAD2'\n            },\n            {\n                n: 'dxF2',\n                f: 'sin lFD a2'\n            },\n            {\n                n: 'dyF2',\n                f: 'cos lFD a2'\n            },\n            {\n                n: 'xF2',\n                f: '+- xD2 dxF2 0'\n            },\n            {\n                n: 'yF2',\n                f: '+- yD2 dyF2 0'\n            },\n            {\n                n: 'xE2',\n                f: '+- xA2 0 dxF2'\n            },\n            {\n                n: 'yE2',\n                f: '+- yA2 0 dyF2'\n            },\n            {\n                n: 'yC2t',\n                f: 'sin th a2'\n            },\n            {\n                n: 'xC2t',\n                f: 'cos th a2'\n            },\n            {\n                n: 'yC2',\n                f: '+- yF2 yC2t 0'\n            },\n            {\n                n: 'xC2',\n                f: '+- xF2 0 xC2t'\n            },\n            {\n                n: 'yB2',\n                f: '+- yE2 yC2t 0'\n            },\n            {\n                n: 'xB2',\n                f: '+- xE2 0 xC2t'\n            },\n            {\n                n: 'swAng1',\n                f: '+- bA2 0 bD1'\n            },\n            {\n                n: 'aA3',\n                f: '+- 1800000 0 ha'\n            },\n            {\n                n: 'aD3',\n                f: '+- 1800000 ha 0'\n            },\n            {\n                n: 'ta31',\n                f: 'cos rw aA3'\n            },\n            {\n                n: 'ta32',\n                f: 'sin rh aA3'\n            },\n            {\n                n: 'bA3',\n                f: 'at2 ta31 ta32'\n            },\n            {\n                n: 'cta3',\n                f: 'cos rh bA3'\n            },\n            {\n                n: 'sta3',\n                f: 'sin rw bA3'\n            },\n            {\n                n: 'ma3',\n                f: 'mod cta3 sta3 0'\n            },\n            {\n                n: 'na3',\n                f: '*/ rw rh ma3'\n            },\n            {\n                n: 'dxa3',\n                f: 'cos na3 bA3'\n            },\n            {\n                n: 'dya3',\n                f: 'sin na3 bA3'\n            },\n            {\n                n: 'xA3',\n                f: '+- hc dxa3 0'\n            },\n            {\n                n: 'yA3',\n                f: '+- vc dya3 0'\n            },\n            {\n                n: 'td31',\n                f: 'cos rw aD3'\n            },\n            {\n                n: 'td32',\n                f: 'sin rh aD3'\n            },\n            {\n                n: 'bD3',\n                f: 'at2 td31 td32'\n            },\n            {\n                n: 'ctd3',\n                f: 'cos rh bD3'\n            },\n            {\n                n: 'std3',\n                f: 'sin rw bD3'\n            },\n            {\n                n: 'md3',\n                f: 'mod ctd3 std3 0'\n            },\n            {\n                n: 'nd3',\n                f: '*/ rw rh md3'\n            },\n            {\n                n: 'dxd3',\n                f: 'cos nd3 bD3'\n            },\n            {\n                n: 'dyd3',\n                f: 'sin nd3 bD3'\n            },\n            {\n                n: 'xD3',\n                f: '+- hc dxd3 0'\n            },\n            {\n                n: 'yD3',\n                f: '+- vc dyd3 0'\n            },\n            {\n                n: 'xAD3',\n                f: '+- xA3 0 xD3'\n            },\n            {\n                n: 'yAD3',\n                f: '+- yA3 0 yD3'\n            },\n            {\n                n: 'lAD3',\n                f: 'mod xAD3 yAD3 0'\n            },\n            {\n                n: 'a3',\n                f: 'at2 yAD3 xAD3'\n            },\n            {\n                n: 'dxF3',\n                f: 'sin lFD a3'\n            },\n            {\n                n: 'dyF3',\n                f: 'cos lFD a3'\n            },\n            {\n                n: 'xF3',\n                f: '+- xD3 dxF3 0'\n            },\n            {\n                n: 'yF3',\n                f: '+- yD3 dyF3 0'\n            },\n            {\n                n: 'xE3',\n                f: '+- xA3 0 dxF3'\n            },\n            {\n                n: 'yE3',\n                f: '+- yA3 0 dyF3'\n            },\n            {\n                n: 'yC3t',\n                f: 'sin th a3'\n            },\n            {\n                n: 'xC3t',\n                f: 'cos th a3'\n            },\n            {\n                n: 'yC3',\n                f: '+- yF3 yC3t 0'\n            },\n            {\n                n: 'xC3',\n                f: '+- xF3 0 xC3t'\n            },\n            {\n                n: 'yB3',\n                f: '+- yE3 yC3t 0'\n            },\n            {\n                n: 'xB3',\n                f: '+- xE3 0 xC3t'\n            },\n            {\n                n: 'swAng2',\n                f: '+- bA3 0 bD2'\n            },\n            {\n                n: 'aA4',\n                f: '+- 4200000 0 ha'\n            },\n            {\n                n: 'aD4',\n                f: '+- 4200000 ha 0'\n            },\n            {\n                n: 'ta41',\n                f: 'cos rw aA4'\n            },\n            {\n                n: 'ta42',\n                f: 'sin rh aA4'\n            },\n            {\n                n: 'bA4',\n                f: 'at2 ta41 ta42'\n            },\n            {\n                n: 'cta4',\n                f: 'cos rh bA4'\n            },\n            {\n                n: 'sta4',\n                f: 'sin rw bA4'\n            },\n            {\n                n: 'ma4',\n                f: 'mod cta4 sta4 0'\n            },\n            {\n                n: 'na4',\n                f: '*/ rw rh ma4'\n            },\n            {\n                n: 'dxa4',\n                f: 'cos na4 bA4'\n            },\n            {\n                n: 'dya4',\n                f: 'sin na4 bA4'\n            },\n            {\n                n: 'xA4',\n                f: '+- hc dxa4 0'\n            },\n            {\n                n: 'yA4',\n                f: '+- vc dya4 0'\n            },\n            {\n                n: 'td41',\n                f: 'cos rw aD4'\n            },\n            {\n                n: 'td42',\n                f: 'sin rh aD4'\n            },\n            {\n                n: 'bD4',\n                f: 'at2 td41 td42'\n            },\n            {\n                n: 'ctd4',\n                f: 'cos rh bD4'\n            },\n            {\n                n: 'std4',\n                f: 'sin rw bD4'\n            },\n            {\n                n: 'md4',\n                f: 'mod ctd4 std4 0'\n            },\n            {\n                n: 'nd4',\n                f: '*/ rw rh md4'\n            },\n            {\n                n: 'dxd4',\n                f: 'cos nd4 bD4'\n            },\n            {\n                n: 'dyd4',\n                f: 'sin nd4 bD4'\n            },\n            {\n                n: 'xD4',\n                f: '+- hc dxd4 0'\n            },\n            {\n                n: 'yD4',\n                f: '+- vc dyd4 0'\n            },\n            {\n                n: 'xAD4',\n                f: '+- xA4 0 xD4'\n            },\n            {\n                n: 'yAD4',\n                f: '+- yA4 0 yD4'\n            },\n            {\n                n: 'lAD4',\n                f: 'mod xAD4 yAD4 0'\n            },\n            {\n                n: 'a4',\n                f: 'at2 yAD4 xAD4'\n            },\n            {\n                n: 'dxF4',\n                f: 'sin lFD a4'\n            },\n            {\n                n: 'dyF4',\n                f: 'cos lFD a4'\n            },\n            {\n                n: 'xF4',\n                f: '+- xD4 dxF4 0'\n            },\n            {\n                n: 'yF4',\n                f: '+- yD4 dyF4 0'\n            },\n            {\n                n: 'xE4',\n                f: '+- xA4 0 dxF4'\n            },\n            {\n                n: 'yE4',\n                f: '+- yA4 0 dyF4'\n            },\n            {\n                n: 'yC4t',\n                f: 'sin th a4'\n            },\n            {\n                n: 'xC4t',\n                f: 'cos th a4'\n            },\n            {\n                n: 'yC4',\n                f: '+- yF4 yC4t 0'\n            },\n            {\n                n: 'xC4',\n                f: '+- xF4 0 xC4t'\n            },\n            {\n                n: 'yB4',\n                f: '+- yE4 yC4t 0'\n            },\n            {\n                n: 'xB4',\n                f: '+- xE4 0 xC4t'\n            },\n            {\n                n: 'swAng3',\n                f: '+- bA4 0 bD3'\n            },\n            {\n                n: 'aA5',\n                f: '+- 6600000 0 ha'\n            },\n            {\n                n: 'aD5',\n                f: '+- 6600000 ha 0'\n            },\n            {\n                n: 'ta51',\n                f: 'cos rw aA5'\n            },\n            {\n                n: 'ta52',\n                f: 'sin rh aA5'\n            },\n            {\n                n: 'bA5',\n                f: 'at2 ta51 ta52'\n            },\n            {\n                n: 'td51',\n                f: 'cos rw aD5'\n            },\n            {\n                n: 'td52',\n                f: 'sin rh aD5'\n            },\n            {\n                n: 'bD5',\n                f: 'at2 td51 td52'\n            },\n            {\n                n: 'xD5',\n                f: '+- w 0 xA4'\n            },\n            {\n                n: 'xC5',\n                f: '+- w 0 xB4'\n            },\n            {\n                n: 'xB5',\n                f: '+- w 0 xC4'\n            },\n            {\n                n: 'swAng4',\n                f: '+- bA5 0 bD4'\n            },\n            {\n                n: 'aD6',\n                f: '+- 9000000 ha 0'\n            },\n            {\n                n: 'td61',\n                f: 'cos rw aD6'\n            },\n            {\n                n: 'td62',\n                f: 'sin rh aD6'\n            },\n            {\n                n: 'bD6',\n                f: 'at2 td61 td62'\n            },\n            {\n                n: 'xD6',\n                f: '+- w 0 xA3'\n            },\n            {\n                n: 'xC6',\n                f: '+- w 0 xB3'\n            },\n            {\n                n: 'xB6',\n                f: '+- w 0 xC3'\n            },\n            {\n                n: 'aD7',\n                f: '+- 11400000 ha 0'\n            },\n            {\n                n: 'td71',\n                f: 'cos rw aD7'\n            },\n            {\n                n: 'td72',\n                f: 'sin rh aD7'\n            },\n            {\n                n: 'bD7',\n                f: 'at2 td71 td72'\n            },\n            {\n                n: 'xD7',\n                f: '+- w 0 xA2'\n            },\n            {\n                n: 'xC7',\n                f: '+- w 0 xB2'\n            },\n            {\n                n: 'xB7',\n                f: '+- w 0 xC2'\n            },\n            {\n                n: 'aD8',\n                f: '+- 13800000 ha 0'\n            },\n            {\n                n: 'td81',\n                f: 'cos rw aD8'\n            },\n            {\n                n: 'td82',\n                f: 'sin rh aD8'\n            },\n            {\n                n: 'bD8',\n                f: 'at2 td81 td82'\n            },\n            {\n                n: 'xA8',\n                f: '+- w 0 xD1'\n            },\n            {\n                n: 'xD8',\n                f: '+- w 0 xA1'\n            },\n            {\n                n: 'xC8',\n                f: '+- w 0 xB1'\n            },\n            {\n                n: 'xB8',\n                f: '+- w 0 xC1'\n            },\n            {\n                n: 'aA9',\n                f: '+- 3cd4 0 ha'\n            },\n            {\n                n: 'aD9',\n                f: '+- 3cd4 ha 0'\n            },\n            {\n                n: 'td91',\n                f: 'cos rw aD9'\n            },\n            {\n                n: 'td92',\n                f: 'sin rh aD9'\n            },\n            {\n                n: 'bD9',\n                f: 'at2 td91 td92'\n            },\n            {\n                n: 'ctd9',\n                f: 'cos rh bD9'\n            },\n            {\n                n: 'std9',\n                f: 'sin rw bD9'\n            },\n            {\n                n: 'md9',\n                f: 'mod ctd9 std9 0'\n            },\n            {\n                n: 'nd9',\n                f: '*/ rw rh md9'\n            },\n            {\n                n: 'dxd9',\n                f: 'cos nd9 bD9'\n            },\n            {\n                n: 'dyd9',\n                f: 'sin nd9 bD9'\n            },\n            {\n                n: 'xD9',\n                f: '+- hc dxd9 0'\n            },\n            {\n                n: 'yD9',\n                f: '+- vc dyd9 0'\n            },\n            {\n                n: 'ta91',\n                f: 'cos rw aA9'\n            },\n            {\n                n: 'ta92',\n                f: 'sin rh aA9'\n            },\n            {\n                n: 'bA9',\n                f: 'at2 ta91 ta92'\n            },\n            {\n                n: 'xA9',\n                f: '+- hc 0 dxd9'\n            },\n            {\n                n: 'xF9',\n                f: '+- xD9 0 lFD'\n            },\n            {\n                n: 'xE9',\n                f: '+- xA9 lFD 0'\n            },\n            {\n                n: 'yC9',\n                f: '+- yD9 0 th'\n            },\n            {\n                n: 'swAng5',\n                f: '+- bA9 0 bD8'\n            },\n            {\n                n: 'xCxn1',\n                f: '+/ xB1 xC1 2'\n            },\n            {\n                n: 'yCxn1',\n                f: '+/ yB1 yC1 2'\n            },\n            {\n                n: 'xCxn2',\n                f: '+/ xB2 xC2 2'\n            },\n            {\n                n: 'yCxn2',\n                f: '+/ yB2 yC2 2'\n            },\n            {\n                n: 'xCxn3',\n                f: '+/ xB3 xC3 2'\n            },\n            {\n                n: 'yCxn3',\n                f: '+/ yB3 yC3 2'\n            },\n            {\n                n: 'xCxn4',\n                f: '+/ xB4 xC4 2'\n            },\n            {\n                n: 'yCxn4',\n                f: '+/ yB4 yC4 2'\n            },\n            {\n                n: 'xCxn5',\n                f: '+/ r 0 xCxn4'\n            },\n            {\n                n: 'xCxn6',\n                f: '+/ r 0 xCxn3'\n            },\n            {\n                n: 'xCxn7',\n                f: '+/ r 0 xCxn2'\n            },\n            {\n                n: 'xCxn8',\n                f: '+/ r 0 xCxn1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'xA1',\n                            y: 'yA1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB1',\n                            y: 'yB1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC1',\n                            y: 'yC1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD1',\n                            y: 'yD1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD1',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB2',\n                            y: 'yB2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC2',\n                            y: 'yC2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD2',\n                            y: 'yD2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD2',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB3',\n                            y: 'yB3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC3',\n                            y: 'yC3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD3',\n                            y: 'yD3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD3',\n                        swAng: 'swAng3'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB4',\n                            y: 'yB4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC4',\n                            y: 'yC4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD4',\n                            y: 'yD4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD4',\n                        swAng: 'swAng4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB5',\n                            y: 'yC4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC5',\n                            y: 'yB4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD5',\n                            y: 'yA4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD5',\n                        swAng: 'swAng3'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB6',\n                            y: 'yC3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC6',\n                            y: 'yB3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD6',\n                            y: 'yA3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD6',\n                        swAng: 'swAng2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB7',\n                            y: 'yC2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC7',\n                            y: 'yB2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD7',\n                            y: 'yA2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD7',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB8',\n                            y: 'yC1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC8',\n                            y: 'yB1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD8',\n                            y: 'yA1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD8',\n                        swAng: 'swAng5'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xE9',\n                            y: 'yC9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xF9',\n                            y: 'yC9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD9',\n                            y: 'yD9'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw',\n                        hR: 'rh',\n                        stAng: 'bD9',\n                        swAng: 'swAng5'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    halfFrame: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 33333'\n            },\n            {\n                n: 'adj2',\n                f: 'val 33333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'g1',\n                f: '*/ h x1 w'\n            },\n            {\n                n: 'g2',\n                f: '+- h 0 g1'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ 100000 g2 ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ y1 w h'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 dx2'\n            },\n            {\n                n: 'dy2',\n                f: '*/ x1 h w'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 dy2'\n            },\n            {\n                n: 'cx1',\n                f: '*/ x1 1 2'\n            },\n            {\n                n: 'cy1',\n                f: '+/ y2 b 2'\n            },\n            {\n                n: 'cx2',\n                f: '+/ x2 r 2'\n            },\n            {\n                n: 'cy2',\n                f: '*/ y1 1 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    heart: {\n        gdLst: [\n            {\n                n: 'dx1',\n                f: '*/ w 49 48'\n            },\n            {\n                n: 'dx2',\n                f: '*/ w 10 48'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- t 0 hd3'\n            },\n            {\n                n: 'il',\n                f: '*/ w 1 6'\n            },\n            {\n                n: 'ir',\n                f: '*/ w 5 6'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 2 3'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'hd4'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x3',\n                                y: 'y1'\n                            },\n                            {\n                                x: 'x4',\n                                y: 'hd4'\n                            },\n                            {\n                                x: 'hc',\n                                y: 'b'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x1',\n                                y: 'hd4'\n                            },\n                            {\n                                x: 'x2',\n                                y: 'y1'\n                            },\n                            {\n                                x: 'hc',\n                                y: 'hd4'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    heptagon: {\n        avLst: [\n            {\n                n: 'hf',\n                f: 'val 102572'\n            },\n            {\n                n: 'vf',\n                f: 'val 105210'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'swd2',\n                f: '*/ wd2 hf 100000'\n            },\n            {\n                n: 'shd2',\n                f: '*/ hd2 vf 100000'\n            },\n            {\n                n: 'svc',\n                f: '*/ vc  vf 100000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ swd2 97493 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ swd2 78183 100000'\n            },\n            {\n                n: 'dx3',\n                f: '*/ swd2 43388 100000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ shd2 62349 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ shd2 22252 100000'\n            },\n            {\n                n: 'dy3',\n                f: '*/ shd2 90097 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'x5',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x6',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- svc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- svc dy2 0'\n            },\n            {\n                n: 'y3',\n                f: '+- svc dy3 0'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 y1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    hexagon: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            },\n            {\n                n: 'vf',\n                f: 'val 115470'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'shd2',\n                f: '*/ hd2 vf 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'dy1',\n                f: 'sin shd2 3600000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'q1',\n                f: '*/ maxAdj -1 2'\n            },\n            {\n                n: 'q2',\n                f: '+- a q1 0'\n            },\n            {\n                n: 'q3',\n                f: '?: q2 4 2'\n            },\n            {\n                n: 'q4',\n                f: '?: q2 3 2'\n            },\n            {\n                n: 'q5',\n                f: '?: q2 q1 0'\n            },\n            {\n                n: 'q6',\n                f: '+/ a q5 q1'\n            },\n            {\n                n: 'q7',\n                f: '*/ q6 q4 -1'\n            },\n            {\n                n: 'q8',\n                f: '+- q3 q7 0'\n            },\n            {\n                n: 'il',\n                f: '*/ w q8 24'\n            },\n            {\n                n: 'it',\n                f: '*/ h q8 24'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 it'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    homePlate: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- r 0 dx1'\n            },\n            {\n                n: 'ir',\n                f: '+/ x1 r 2'\n            },\n            {\n                n: 'x2',\n                f: '*/ x1 1 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    horizontalScroll: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 25000'\n            },\n            {\n                n: 'ch',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'ch2',\n                f: '*/ ch 1 2'\n            },\n            {\n                n: 'ch4',\n                f: '*/ ch 1 4'\n            },\n            {\n                n: 'y3',\n                f: '+- ch ch2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- ch ch 0'\n            },\n            {\n                n: 'y6',\n                f: '+- b 0 ch'\n            },\n            {\n                n: 'y7',\n                f: '+- b 0 ch2'\n            },\n            {\n                n: 'y5',\n                f: '+- y6 0 ch2'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 ch'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 ch2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd2',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: '0',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: '0',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: '-16200000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: 'cd2',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: 'cd2',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y6'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    irregularSeal1: {\n        gdLst: [\n            {\n                n: 'x5',\n                f: '*/ w 4627 21600'\n            },\n            {\n                n: 'x12',\n                f: '*/ w 8485 21600'\n            },\n            {\n                n: 'x21',\n                f: '*/ w 16702 21600'\n            },\n            {\n                n: 'x24',\n                f: '*/ w 14522 21600'\n            },\n            {\n                n: 'y3',\n                f: '*/ h 6320 21600'\n            },\n            {\n                n: 'y6',\n                f: '*/ h 8615 21600'\n            },\n            {\n                n: 'y9',\n                f: '*/ h 13937 21600'\n            },\n            {\n                n: 'y18',\n                f: '*/ h 13290 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '10800',\n                            y: '5800'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14522',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14155',\n                            y: '5325'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18380',\n                            y: '4457'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '16702',\n                            y: '7315'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21097',\n                            y: '8137'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '17607',\n                            y: '10475'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '13290'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '16837',\n                            y: '12942'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18145',\n                            y: '18095'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14020',\n                            y: '14457'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '13247',\n                            y: '19737'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10532',\n                            y: '14935'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '8485',\n                            y: '21600'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '7715',\n                            y: '15627'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '4762',\n                            y: '17617'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5667',\n                            y: '13937'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '135',\n                            y: '14587'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '3722',\n                            y: '11775'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '8615'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '4627',\n                            y: '7617'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '370',\n                            y: '2295'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '7312',\n                            y: '6320'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '8352',\n                            y: '2295'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 21600,\n                h: 21600\n            }\n        ]\n    },\n    irregularSeal2: {\n        gdLst: [\n            {\n                n: 'x2',\n                f: '*/ w 9722 21600'\n            },\n            {\n                n: 'x5',\n                f: '*/ w 5372 21600'\n            },\n            {\n                n: 'x16',\n                f: '*/ w 11612 21600'\n            },\n            {\n                n: 'x19',\n                f: '*/ w 14640 21600'\n            },\n            {\n                n: 'y2',\n                f: '*/ h 1887 21600'\n            },\n            {\n                n: 'y3',\n                f: '*/ h 6382 21600'\n            },\n            {\n                n: 'y8',\n                f: '*/ h 12877 21600'\n            },\n            {\n                n: 'y14',\n                f: '*/ h 19712 21600'\n            },\n            {\n                n: 'y16',\n                f: '*/ h 18842 21600'\n            },\n            {\n                n: 'y17',\n                f: '*/ h 15935 21600'\n            },\n            {\n                n: 'y24',\n                f: '*/ h 6645 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '11462',\n                            y: '4342'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14790',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14525',\n                            y: '5777'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18007',\n                            y: '3172'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '16380',\n                            y: '6532'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '6645'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '16985',\n                            y: '9402'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18270',\n                            y: '11290'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '16380',\n                            y: '12310'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '18877',\n                            y: '15632'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14640',\n                            y: '14350'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14942',\n                            y: '17370'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '12180',\n                            y: '15935'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '11612',\n                            y: '18842'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '9872',\n                            y: '17370'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '8700',\n                            y: '19712'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '7527',\n                            y: '18125'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '4917',\n                            y: '21600'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '4805',\n                            y: '18240'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1285',\n                            y: '17825'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '3330',\n                            y: '15370'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '12877'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '3935',\n                            y: '11592'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '1172',\n                            y: '8270'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5372',\n                            y: '7817'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '4502',\n                            y: '3625'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '8550',\n                            y: '6382'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '9722',\n                            y: '1887'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 21600,\n                h: 21600\n            }\n        ]\n    },\n    leftArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- l dx2 0'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'dx1',\n                f: '*/ y1 dx2 hd2'\n            },\n            {\n                n: 'x1',\n                f: '+- x2  0 dx1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftArrowCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 64977'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q2',\n                f: '*/ a3 ss w'\n            },\n            {\n                n: 'maxAdj4',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'dy1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ w a4 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+/ x2 r 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftBrace: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 8333'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 100000'\n            },\n            {\n                n: 'q1',\n                f: '+- 100000 0 a2'\n            },\n            {\n                n: 'q2',\n                f: 'min q1 a2'\n            },\n            {\n                n: 'q3',\n                f: '*/ q2 1 2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ q3 h ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h a2 100000'\n            },\n            {\n                n: 'y4',\n                f: '+- y3 y1 0'\n            },\n            {\n                n: 'dx1',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin y1 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- r 0 dx1'\n            },\n            {\n                n: 'it',\n                f: '+- y1 0 dy1'\n            },\n            {\n                n: 'ib',\n                f: '+- b dy1 y1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftBracket: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 8333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'dx1',\n                f: 'cos w 2700000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin y1 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- r 0 dx1'\n            },\n            {\n                n: 'it',\n                f: '+- y1 0 dy1'\n            },\n            {\n                n: 'ib',\n                f: '+- b dy1 y1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftCircularArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 12500'\n            },\n            {\n                n: 'adj2',\n                f: 'val -1142319'\n            },\n            {\n                n: 'adj3',\n                f: 'val 1142319'\n            },\n            {\n                n: 'adj4',\n                f: 'val 10800000'\n            },\n            {\n                n: 'adj5',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a5',\n                f: 'pin 0 adj5 25000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a5 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'enAng',\n                f: 'pin 1 adj3 21599999'\n            },\n            {\n                n: 'stAng',\n                f: 'pin 0 adj4 21599999'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'thh',\n                f: '*/ ss a5 100000'\n            },\n            {\n                n: 'th2',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'rw1',\n                f: '+- wd2 th2 thh'\n            },\n            {\n                n: 'rh1',\n                f: '+- hd2 th2 thh'\n            },\n            {\n                n: 'rw2',\n                f: '+- rw1 0 th'\n            },\n            {\n                n: 'rh2',\n                f: '+- rh1 0 th'\n            },\n            {\n                n: 'rw3',\n                f: '+- rw2 th2 0'\n            },\n            {\n                n: 'rh3',\n                f: '+- rh2 th2 0'\n            },\n            {\n                n: 'wtH',\n                f: 'sin rw3 enAng'\n            },\n            {\n                n: 'htH',\n                f: 'cos rh3 enAng'\n            },\n            {\n                n: 'dxH',\n                f: 'cat2 rw3 htH wtH'\n            },\n            {\n                n: 'dyH',\n                f: 'sat2 rh3 htH wtH'\n            },\n            {\n                n: 'xH',\n                f: '+- hc dxH 0'\n            },\n            {\n                n: 'yH',\n                f: '+- vc dyH 0'\n            },\n            {\n                n: 'rI',\n                f: 'min rw2 rh2'\n            },\n            {\n                n: 'u1',\n                f: '*/ dxH dxH 1'\n            },\n            {\n                n: 'u2',\n                f: '*/ dyH dyH 1'\n            },\n            {\n                n: 'u3',\n                f: '*/ rI rI 1'\n            },\n            {\n                n: 'u4',\n                f: '+- u1 0 u3'\n            },\n            {\n                n: 'u5',\n                f: '+- u2 0 u3'\n            },\n            {\n                n: 'u6',\n                f: '*/ u4 u5 u1'\n            },\n            {\n                n: 'u7',\n                f: '*/ u6 1 u2'\n            },\n            {\n                n: 'u8',\n                f: '+- 1 0 u7'\n            },\n            {\n                n: 'u9',\n                f: 'sqrt u8'\n            },\n            {\n                n: 'u10',\n                f: '*/ u4 1 dxH'\n            },\n            {\n                n: 'u11',\n                f: '*/ u10 1 dyH'\n            },\n            {\n                n: 'u12',\n                f: '+/ 1 u9 u11'\n            },\n            {\n                n: 'u13',\n                f: 'at2 1 u12'\n            },\n            {\n                n: 'u14',\n                f: '+- u13 21600000 0'\n            },\n            {\n                n: 'u15',\n                f: '?: u13 u13 u14'\n            },\n            {\n                n: 'u16',\n                f: '+- u15 0 enAng'\n            },\n            {\n                n: 'u17',\n                f: '+- u16 21600000 0'\n            },\n            {\n                n: 'u18',\n                f: '?: u16 u16 u17'\n            },\n            {\n                n: 'u19',\n                f: '+- u18 0 cd2'\n            },\n            {\n                n: 'u20',\n                f: '+- u18 0 21600000'\n            },\n            {\n                n: 'u21',\n                f: '?: u19 u20 u18'\n            },\n            {\n                n: 'u22',\n                f: 'abs u21'\n            },\n            {\n                n: 'minAng',\n                f: '*/ u22 -1 1'\n            },\n            {\n                n: 'u23',\n                f: 'abs adj2'\n            },\n            {\n                n: 'a2',\n                f: '*/ u23 -1 1'\n            },\n            {\n                n: 'aAng',\n                f: 'pin minAng a2 0'\n            },\n            {\n                n: 'ptAng',\n                f: '+- enAng aAng 0'\n            },\n            {\n                n: 'wtA',\n                f: 'sin rw3 ptAng'\n            },\n            {\n                n: 'htA',\n                f: 'cos rh3 ptAng'\n            },\n            {\n                n: 'dxA',\n                f: 'cat2 rw3 htA wtA'\n            },\n            {\n                n: 'dyA',\n                f: 'sat2 rh3 htA wtA'\n            },\n            {\n                n: 'xA',\n                f: '+- hc dxA 0'\n            },\n            {\n                n: 'yA',\n                f: '+- vc dyA 0'\n            },\n            {\n                n: 'wtE',\n                f: 'sin rw1 stAng'\n            },\n            {\n                n: 'htE',\n                f: 'cos rh1 stAng'\n            },\n            {\n                n: 'dxE',\n                f: 'cat2 rw1 htE wtE'\n            },\n            {\n                n: 'dyE',\n                f: 'sat2 rh1 htE wtE'\n            },\n            {\n                n: 'xE',\n                f: '+- hc dxE 0'\n            },\n            {\n                n: 'yE',\n                f: '+- vc dyE 0'\n            },\n            {\n                n: 'wtD',\n                f: 'sin rw2 stAng'\n            },\n            {\n                n: 'htD',\n                f: 'cos rh2 stAng'\n            },\n            {\n                n: 'dxD',\n                f: 'cat2 rw2 htD wtD'\n            },\n            {\n                n: 'dyD',\n                f: 'sat2 rh2 htD wtD'\n            },\n            {\n                n: 'xD',\n                f: '+- hc dxD 0'\n            },\n            {\n                n: 'yD',\n                f: '+- vc dyD 0'\n            },\n            {\n                n: 'dxG',\n                f: 'cos thh ptAng'\n            },\n            {\n                n: 'dyG',\n                f: 'sin thh ptAng'\n            },\n            {\n                n: 'xG',\n                f: '+- xH dxG 0'\n            },\n            {\n                n: 'yG',\n                f: '+- yH dyG 0'\n            },\n            {\n                n: 'dxB',\n                f: 'cos thh ptAng'\n            },\n            {\n                n: 'dyB',\n                f: 'sin thh ptAng'\n            },\n            {\n                n: 'xB',\n                f: '+- xH 0 dxB 0'\n            },\n            {\n                n: 'yB',\n                f: '+- yH 0 dyB 0'\n            },\n            {\n                n: 'sx1',\n                f: '+- xB 0 hc'\n            },\n            {\n                n: 'sy1',\n                f: '+- yB 0 vc'\n            },\n            {\n                n: 'sx2',\n                f: '+- xG 0 hc'\n            },\n            {\n                n: 'sy2',\n                f: '+- yG 0 vc'\n            },\n            {\n                n: 'rO',\n                f: 'min rw1 rh1'\n            },\n            {\n                n: 'x1O',\n                f: '*/ sx1 rO rw1'\n            },\n            {\n                n: 'y1O',\n                f: '*/ sy1 rO rh1'\n            },\n            {\n                n: 'x2O',\n                f: '*/ sx2 rO rw1'\n            },\n            {\n                n: 'y2O',\n                f: '*/ sy2 rO rh1'\n            },\n            {\n                n: 'dxO',\n                f: '+- x2O 0 x1O'\n            },\n            {\n                n: 'dyO',\n                f: '+- y2O 0 y1O'\n            },\n            {\n                n: 'dO',\n                f: 'mod dxO dyO 0'\n            },\n            {\n                n: 'q1',\n                f: '*/ x1O y2O 1'\n            },\n            {\n                n: 'q2',\n                f: '*/ x2O y1O 1'\n            },\n            {\n                n: 'DO',\n                f: '+- q1 0 q2'\n            },\n            {\n                n: 'q3',\n                f: '*/ rO rO 1'\n            },\n            {\n                n: 'q4',\n                f: '*/ dO dO 1'\n            },\n            {\n                n: 'q5',\n                f: '*/ q3 q4 1'\n            },\n            {\n                n: 'q6',\n                f: '*/ DO DO 1'\n            },\n            {\n                n: 'q7',\n                f: '+- q5 0 q6'\n            },\n            {\n                n: 'q8',\n                f: 'max q7 0'\n            },\n            {\n                n: 'sdelO',\n                f: 'sqrt q8'\n            },\n            {\n                n: 'ndyO',\n                f: '*/ dyO -1 1'\n            },\n            {\n                n: 'sdyO',\n                f: '?: ndyO -1 1'\n            },\n            {\n                n: 'q9',\n                f: '*/ sdyO dxO 1'\n            },\n            {\n                n: 'q10',\n                f: '*/ q9 sdelO 1'\n            },\n            {\n                n: 'q11',\n                f: '*/ DO dyO 1'\n            },\n            {\n                n: 'dxF1',\n                f: '+/ q11 q10 q4'\n            },\n            {\n                n: 'q12',\n                f: '+- q11 0 q10'\n            },\n            {\n                n: 'dxF2',\n                f: '*/ q12 1 q4'\n            },\n            {\n                n: 'adyO',\n                f: 'abs dyO'\n            },\n            {\n                n: 'q13',\n                f: '*/ adyO sdelO 1'\n            },\n            {\n                n: 'q14',\n                f: '*/ DO dxO -1'\n            },\n            {\n                n: 'dyF1',\n                f: '+/ q14 q13 q4'\n            },\n            {\n                n: 'q15',\n                f: '+- q14 0 q13'\n            },\n            {\n                n: 'dyF2',\n                f: '*/ q15 1 q4'\n            },\n            {\n                n: 'q16',\n                f: '+- x2O 0 dxF1'\n            },\n            {\n                n: 'q17',\n                f: '+- x2O 0 dxF2'\n            },\n            {\n                n: 'q18',\n                f: '+- y2O 0 dyF1'\n            },\n            {\n                n: 'q19',\n                f: '+- y2O 0 dyF2'\n            },\n            {\n                n: 'q20',\n                f: 'mod q16 q18 0'\n            },\n            {\n                n: 'q21',\n                f: 'mod q17 q19 0'\n            },\n            {\n                n: 'q22',\n                f: '+- q21 0 q20'\n            },\n            {\n                n: 'dxF',\n                f: '?: q22 dxF1 dxF2'\n            },\n            {\n                n: 'dyF',\n                f: '?: q22 dyF1 dyF2'\n            },\n            {\n                n: 'sdxF',\n                f: '*/ dxF rw1 rO'\n            },\n            {\n                n: 'sdyF',\n                f: '*/ dyF rh1 rO'\n            },\n            {\n                n: 'xF',\n                f: '+- hc sdxF 0'\n            },\n            {\n                n: 'yF',\n                f: '+- vc sdyF 0'\n            },\n            {\n                n: 'x1I',\n                f: '*/ sx1 rI rw2'\n            },\n            {\n                n: 'y1I',\n                f: '*/ sy1 rI rh2'\n            },\n            {\n                n: 'x2I',\n                f: '*/ sx2 rI rw2'\n            },\n            {\n                n: 'y2I',\n                f: '*/ sy2 rI rh2'\n            },\n            {\n                n: 'dxI',\n                f: '+- x2I 0 x1I'\n            },\n            {\n                n: 'dyI',\n                f: '+- y2I 0 y1I'\n            },\n            {\n                n: 'dI',\n                f: 'mod dxI dyI 0'\n            },\n            {\n                n: 'v1',\n                f: '*/ x1I y2I 1'\n            },\n            {\n                n: 'v2',\n                f: '*/ x2I y1I 1'\n            },\n            {\n                n: 'DI',\n                f: '+- v1 0 v2'\n            },\n            {\n                n: 'v3',\n                f: '*/ rI rI 1'\n            },\n            {\n                n: 'v4',\n                f: '*/ dI dI 1'\n            },\n            {\n                n: 'v5',\n                f: '*/ v3 v4 1'\n            },\n            {\n                n: 'v6',\n                f: '*/ DI DI 1'\n            },\n            {\n                n: 'v7',\n                f: '+- v5 0 v6'\n            },\n            {\n                n: 'v8',\n                f: 'max v7 0'\n            },\n            {\n                n: 'sdelI',\n                f: 'sqrt v8'\n            },\n            {\n                n: 'v9',\n                f: '*/ sdyO dxI 1'\n            },\n            {\n                n: 'v10',\n                f: '*/ v9 sdelI 1'\n            },\n            {\n                n: 'v11',\n                f: '*/ DI dyI 1'\n            },\n            {\n                n: 'dxC1',\n                f: '+/ v11 v10 v4'\n            },\n            {\n                n: 'v12',\n                f: '+- v11 0 v10'\n            },\n            {\n                n: 'dxC2',\n                f: '*/ v12 1 v4'\n            },\n            {\n                n: 'adyI',\n                f: 'abs dyI'\n            },\n            {\n                n: 'v13',\n                f: '*/ adyI sdelI 1'\n            },\n            {\n                n: 'v14',\n                f: '*/ DI dxI -1'\n            },\n            {\n                n: 'dyC1',\n                f: '+/ v14 v13 v4'\n            },\n            {\n                n: 'v15',\n                f: '+- v14 0 v13'\n            },\n            {\n                n: 'dyC2',\n                f: '*/ v15 1 v4'\n            },\n            {\n                n: 'v16',\n                f: '+- x1I 0 dxC1'\n            },\n            {\n                n: 'v17',\n                f: '+- x1I 0 dxC2'\n            },\n            {\n                n: 'v18',\n                f: '+- y1I 0 dyC1'\n            },\n            {\n                n: 'v19',\n                f: '+- y1I 0 dyC2'\n            },\n            {\n                n: 'v20',\n                f: 'mod v16 v18 0'\n            },\n            {\n                n: 'v21',\n                f: 'mod v17 v19 0'\n            },\n            {\n                n: 'v22',\n                f: '+- v21 0 v20'\n            },\n            {\n                n: 'dxC',\n                f: '?: v22 dxC1 dxC2'\n            },\n            {\n                n: 'dyC',\n                f: '?: v22 dyC1 dyC2'\n            },\n            {\n                n: 'sdxC',\n                f: '*/ dxC rw2 rI'\n            },\n            {\n                n: 'sdyC',\n                f: '*/ dyC rh2 rI'\n            },\n            {\n                n: 'xC',\n                f: '+- hc sdxC 0'\n            },\n            {\n                n: 'yC',\n                f: '+- vc sdyC 0'\n            },\n            {\n                n: 'ist0',\n                f: 'at2 sdxC sdyC'\n            },\n            {\n                n: 'ist1',\n                f: '+- ist0 21600000 0'\n            },\n            {\n                n: 'istAng0',\n                f: '?: ist0 ist0 ist1'\n            },\n            {\n                n: 'isw1',\n                f: '+- stAng 0 istAng0'\n            },\n            {\n                n: 'isw2',\n                f: '+- isw1 21600000 0'\n            },\n            {\n                n: 'iswAng0',\n                f: '?: isw1 isw1 isw2'\n            },\n            {\n                n: 'istAng',\n                f: '+- istAng0 iswAng0 0'\n            },\n            {\n                n: 'iswAng',\n                f: '+- 0 0 iswAng0'\n            },\n            {\n                n: 'p1',\n                f: '+- xF 0 xC'\n            },\n            {\n                n: 'p2',\n                f: '+- yF 0 yC'\n            },\n            {\n                n: 'p3',\n                f: 'mod p1 p2 0'\n            },\n            {\n                n: 'p4',\n                f: '*/ p3 1 2'\n            },\n            {\n                n: 'p5',\n                f: '+- p4 0 thh'\n            },\n            {\n                n: 'xGp',\n                f: '?: p5 xF xG'\n            },\n            {\n                n: 'yGp',\n                f: '?: p5 yF yG'\n            },\n            {\n                n: 'xBp',\n                f: '?: p5 xC xB'\n            },\n            {\n                n: 'yBp',\n                f: '?: p5 yC yB'\n            },\n            {\n                n: 'en0',\n                f: 'at2 sdxF sdyF'\n            },\n            {\n                n: 'en1',\n                f: '+- en0 21600000 0'\n            },\n            {\n                n: 'en2',\n                f: '?: en0 en0 en1'\n            },\n            {\n                n: 'sw0',\n                f: '+- en2 0 stAng'\n            },\n            {\n                n: 'sw1',\n                f: '+- sw0 0 21600000'\n            },\n            {\n                n: 'swAng',\n                f: '?: sw0 sw1 sw0'\n            },\n            {\n                n: 'stAng0',\n                f: '+- stAng swAng 0'\n            },\n            {\n                n: 'swAng0',\n                f: '+- 0 0 swAng'\n            },\n            {\n                n: 'wtI',\n                f: 'sin rw3 stAng'\n            },\n            {\n                n: 'htI',\n                f: 'cos rh3 stAng'\n            },\n            {\n                n: 'dxI',\n                f: 'cat2 rw3 htI wtI'\n            },\n            {\n                n: 'dyI',\n                f: 'sat2 rh3 htI wtI'\n            },\n            {\n                n: 'xI',\n                f: '+- hc dxI 0'\n            },\n            {\n                n: 'yI',\n                f: '+- vc dyI 0'\n            },\n            {\n                n: 'aI',\n                f: '+- stAng cd4 0'\n            },\n            {\n                n: 'aA',\n                f: '+- ptAng 0 cd4'\n            },\n            {\n                n: 'aB',\n                f: '+- ptAng cd2 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos rw1 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin rh1 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'xE',\n                            y: 'yE'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD',\n                            y: 'yD'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw2',\n                        hR: 'rh2',\n                        stAng: 'istAng',\n                        swAng: 'iswAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xBp',\n                            y: 'yBp'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xA',\n                            y: 'yA'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xGp',\n                            y: 'yGp'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xF',\n                            y: 'yF'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw1',\n                        hR: 'rh1',\n                        stAng: 'stAng0',\n                        swAng: 'swAng0'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftRightArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'x2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 x2'\n            },\n            {\n                n: 'dy',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy 0'\n            },\n            {\n                n: 'dx1',\n                f: '*/ y1 x2 hd2'\n            },\n            {\n                n: 'x1',\n                f: '+- x2 0 dx1'\n            },\n            {\n                n: 'x4',\n                f: '+- x3 dx1 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftRightArrowCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 48123'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q2',\n                f: '*/ a3 ss wd2'\n            },\n            {\n                n: 'maxAdj4',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'dy1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'dx2',\n                f: '*/ w a4 200000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftRightCircularArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 12500'\n            },\n            {\n                n: 'adj2',\n                f: 'val 1142319'\n            },\n            {\n                n: 'adj3',\n                f: 'val 20457681'\n            },\n            {\n                n: 'adj4',\n                f: 'val 11942319'\n            },\n            {\n                n: 'adj5',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a5',\n                f: 'pin 0 adj5 25000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a5 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'enAng',\n                f: 'pin 1 adj3 21599999'\n            },\n            {\n                n: 'stAng',\n                f: 'pin 0 adj4 21599999'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'thh',\n                f: '*/ ss a5 100000'\n            },\n            {\n                n: 'th2',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'rw1',\n                f: '+- wd2 th2 thh'\n            },\n            {\n                n: 'rh1',\n                f: '+- hd2 th2 thh'\n            },\n            {\n                n: 'rw2',\n                f: '+- rw1 0 th'\n            },\n            {\n                n: 'rh2',\n                f: '+- rh1 0 th'\n            },\n            {\n                n: 'rw3',\n                f: '+- rw2 th2 0'\n            },\n            {\n                n: 'rh3',\n                f: '+- rh2 th2 0'\n            },\n            {\n                n: 'wtH',\n                f: 'sin rw3 enAng'\n            },\n            {\n                n: 'htH',\n                f: 'cos rh3 enAng'\n            },\n            {\n                n: 'dxH',\n                f: 'cat2 rw3 htH wtH'\n            },\n            {\n                n: 'dyH',\n                f: 'sat2 rh3 htH wtH'\n            },\n            {\n                n: 'xH',\n                f: '+- hc dxH 0'\n            },\n            {\n                n: 'yH',\n                f: '+- vc dyH 0'\n            },\n            {\n                n: 'rI',\n                f: 'min rw2 rh2'\n            },\n            {\n                n: 'u1',\n                f: '*/ dxH dxH 1'\n            },\n            {\n                n: 'u2',\n                f: '*/ dyH dyH 1'\n            },\n            {\n                n: 'u3',\n                f: '*/ rI rI 1'\n            },\n            {\n                n: 'u4',\n                f: '+- u1 0 u3'\n            },\n            {\n                n: 'u5',\n                f: '+- u2 0 u3'\n            },\n            {\n                n: 'u6',\n                f: '*/ u4 u5 u1'\n            },\n            {\n                n: 'u7',\n                f: '*/ u6 1 u2'\n            },\n            {\n                n: 'u8',\n                f: '+- 1 0 u7'\n            },\n            {\n                n: 'u9',\n                f: 'sqrt u8'\n            },\n            {\n                n: 'u10',\n                f: '*/ u4 1 dxH'\n            },\n            {\n                n: 'u11',\n                f: '*/ u10 1 dyH'\n            },\n            {\n                n: 'u12',\n                f: '+/ 1 u9 u11'\n            },\n            {\n                n: 'u13',\n                f: 'at2 1 u12'\n            },\n            {\n                n: 'u14',\n                f: '+- u13 21600000 0'\n            },\n            {\n                n: 'u15',\n                f: '?: u13 u13 u14'\n            },\n            {\n                n: 'u16',\n                f: '+- u15 0 enAng'\n            },\n            {\n                n: 'u17',\n                f: '+- u16 21600000 0'\n            },\n            {\n                n: 'u18',\n                f: '?: u16 u16 u17'\n            },\n            {\n                n: 'u19',\n                f: '+- u18 0 cd2'\n            },\n            {\n                n: 'u20',\n                f: '+- u18 0 21600000'\n            },\n            {\n                n: 'u21',\n                f: '?: u19 u20 u18'\n            },\n            {\n                n: 'maxAng',\n                f: 'abs u21'\n            },\n            {\n                n: 'aAng',\n                f: 'pin 0 adj2 maxAng'\n            },\n            {\n                n: 'ptAng',\n                f: '+- enAng aAng 0'\n            },\n            {\n                n: 'wtA',\n                f: 'sin rw3 ptAng'\n            },\n            {\n                n: 'htA',\n                f: 'cos rh3 ptAng'\n            },\n            {\n                n: 'dxA',\n                f: 'cat2 rw3 htA wtA'\n            },\n            {\n                n: 'dyA',\n                f: 'sat2 rh3 htA wtA'\n            },\n            {\n                n: 'xA',\n                f: '+- hc dxA 0'\n            },\n            {\n                n: 'yA',\n                f: '+- vc dyA 0'\n            },\n            {\n                n: 'dxG',\n                f: 'cos thh ptAng'\n            },\n            {\n                n: 'dyG',\n                f: 'sin thh ptAng'\n            },\n            {\n                n: 'xG',\n                f: '+- xH dxG 0'\n            },\n            {\n                n: 'yG',\n                f: '+- yH dyG 0'\n            },\n            {\n                n: 'dxB',\n                f: 'cos thh ptAng'\n            },\n            {\n                n: 'dyB',\n                f: 'sin thh ptAng'\n            },\n            {\n                n: 'xB',\n                f: '+- xH 0 dxB 0'\n            },\n            {\n                n: 'yB',\n                f: '+- yH 0 dyB 0'\n            },\n            {\n                n: 'sx1',\n                f: '+- xB 0 hc'\n            },\n            {\n                n: 'sy1',\n                f: '+- yB 0 vc'\n            },\n            {\n                n: 'sx2',\n                f: '+- xG 0 hc'\n            },\n            {\n                n: 'sy2',\n                f: '+- yG 0 vc'\n            },\n            {\n                n: 'rO',\n                f: 'min rw1 rh1'\n            },\n            {\n                n: 'x1O',\n                f: '*/ sx1 rO rw1'\n            },\n            {\n                n: 'y1O',\n                f: '*/ sy1 rO rh1'\n            },\n            {\n                n: 'x2O',\n                f: '*/ sx2 rO rw1'\n            },\n            {\n                n: 'y2O',\n                f: '*/ sy2 rO rh1'\n            },\n            {\n                n: 'dxO',\n                f: '+- x2O 0 x1O'\n            },\n            {\n                n: 'dyO',\n                f: '+- y2O 0 y1O'\n            },\n            {\n                n: 'dO',\n                f: 'mod dxO dyO 0'\n            },\n            {\n                n: 'q1',\n                f: '*/ x1O y2O 1'\n            },\n            {\n                n: 'q2',\n                f: '*/ x2O y1O 1'\n            },\n            {\n                n: 'DO',\n                f: '+- q1 0 q2'\n            },\n            {\n                n: 'q3',\n                f: '*/ rO rO 1'\n            },\n            {\n                n: 'q4',\n                f: '*/ dO dO 1'\n            },\n            {\n                n: 'q5',\n                f: '*/ q3 q4 1'\n            },\n            {\n                n: 'q6',\n                f: '*/ DO DO 1'\n            },\n            {\n                n: 'q7',\n                f: '+- q5 0 q6'\n            },\n            {\n                n: 'q8',\n                f: 'max q7 0'\n            },\n            {\n                n: 'sdelO',\n                f: 'sqrt q8'\n            },\n            {\n                n: 'ndyO',\n                f: '*/ dyO -1 1'\n            },\n            {\n                n: 'sdyO',\n                f: '?: ndyO -1 1'\n            },\n            {\n                n: 'q9',\n                f: '*/ sdyO dxO 1'\n            },\n            {\n                n: 'q10',\n                f: '*/ q9 sdelO 1'\n            },\n            {\n                n: 'q11',\n                f: '*/ DO dyO 1'\n            },\n            {\n                n: 'dxF1',\n                f: '+/ q11 q10 q4'\n            },\n            {\n                n: 'q12',\n                f: '+- q11 0 q10'\n            },\n            {\n                n: 'dxF2',\n                f: '*/ q12 1 q4'\n            },\n            {\n                n: 'adyO',\n                f: 'abs dyO'\n            },\n            {\n                n: 'q13',\n                f: '*/ adyO sdelO 1'\n            },\n            {\n                n: 'q14',\n                f: '*/ DO dxO -1'\n            },\n            {\n                n: 'dyF1',\n                f: '+/ q14 q13 q4'\n            },\n            {\n                n: 'q15',\n                f: '+- q14 0 q13'\n            },\n            {\n                n: 'dyF2',\n                f: '*/ q15 1 q4'\n            },\n            {\n                n: 'q16',\n                f: '+- x2O 0 dxF1'\n            },\n            {\n                n: 'q17',\n                f: '+- x2O 0 dxF2'\n            },\n            {\n                n: 'q18',\n                f: '+- y2O 0 dyF1'\n            },\n            {\n                n: 'q19',\n                f: '+- y2O 0 dyF2'\n            },\n            {\n                n: 'q20',\n                f: 'mod q16 q18 0'\n            },\n            {\n                n: 'q21',\n                f: 'mod q17 q19 0'\n            },\n            {\n                n: 'q22',\n                f: '+- q21 0 q20'\n            },\n            {\n                n: 'dxF',\n                f: '?: q22 dxF1 dxF2'\n            },\n            {\n                n: 'dyF',\n                f: '?: q22 dyF1 dyF2'\n            },\n            {\n                n: 'sdxF',\n                f: '*/ dxF rw1 rO'\n            },\n            {\n                n: 'sdyF',\n                f: '*/ dyF rh1 rO'\n            },\n            {\n                n: 'xF',\n                f: '+- hc sdxF 0'\n            },\n            {\n                n: 'yF',\n                f: '+- vc sdyF 0'\n            },\n            {\n                n: 'x1I',\n                f: '*/ sx1 rI rw2'\n            },\n            {\n                n: 'y1I',\n                f: '*/ sy1 rI rh2'\n            },\n            {\n                n: 'x2I',\n                f: '*/ sx2 rI rw2'\n            },\n            {\n                n: 'y2I',\n                f: '*/ sy2 rI rh2'\n            },\n            {\n                n: 'dxI',\n                f: '+- x2I 0 x1I'\n            },\n            {\n                n: 'dyI',\n                f: '+- y2I 0 y1I'\n            },\n            {\n                n: 'dI',\n                f: 'mod dxI dyI 0'\n            },\n            {\n                n: 'v1',\n                f: '*/ x1I y2I 1'\n            },\n            {\n                n: 'v2',\n                f: '*/ x2I y1I 1'\n            },\n            {\n                n: 'DI',\n                f: '+- v1 0 v2'\n            },\n            {\n                n: 'v3',\n                f: '*/ rI rI 1'\n            },\n            {\n                n: 'v4',\n                f: '*/ dI dI 1'\n            },\n            {\n                n: 'v5',\n                f: '*/ v3 v4 1'\n            },\n            {\n                n: 'v6',\n                f: '*/ DI DI 1'\n            },\n            {\n                n: 'v7',\n                f: '+- v5 0 v6'\n            },\n            {\n                n: 'v8',\n                f: 'max v7 0'\n            },\n            {\n                n: 'sdelI',\n                f: 'sqrt v8'\n            },\n            {\n                n: 'v9',\n                f: '*/ sdyO dxI 1'\n            },\n            {\n                n: 'v10',\n                f: '*/ v9 sdelI 1'\n            },\n            {\n                n: 'v11',\n                f: '*/ DI dyI 1'\n            },\n            {\n                n: 'dxC1',\n                f: '+/ v11 v10 v4'\n            },\n            {\n                n: 'v12',\n                f: '+- v11 0 v10'\n            },\n            {\n                n: 'dxC2',\n                f: '*/ v12 1 v4'\n            },\n            {\n                n: 'adyI',\n                f: 'abs dyI'\n            },\n            {\n                n: 'v13',\n                f: '*/ adyI sdelI 1'\n            },\n            {\n                n: 'v14',\n                f: '*/ DI dxI -1'\n            },\n            {\n                n: 'dyC1',\n                f: '+/ v14 v13 v4'\n            },\n            {\n                n: 'v15',\n                f: '+- v14 0 v13'\n            },\n            {\n                n: 'dyC2',\n                f: '*/ v15 1 v4'\n            },\n            {\n                n: 'v16',\n                f: '+- x1I 0 dxC1'\n            },\n            {\n                n: 'v17',\n                f: '+- x1I 0 dxC2'\n            },\n            {\n                n: 'v18',\n                f: '+- y1I 0 dyC1'\n            },\n            {\n                n: 'v19',\n                f: '+- y1I 0 dyC2'\n            },\n            {\n                n: 'v20',\n                f: 'mod v16 v18 0'\n            },\n            {\n                n: 'v21',\n                f: 'mod v17 v19 0'\n            },\n            {\n                n: 'v22',\n                f: '+- v21 0 v20'\n            },\n            {\n                n: 'dxC',\n                f: '?: v22 dxC1 dxC2'\n            },\n            {\n                n: 'dyC',\n                f: '?: v22 dyC1 dyC2'\n            },\n            {\n                n: 'sdxC',\n                f: '*/ dxC rw2 rI'\n            },\n            {\n                n: 'sdyC',\n                f: '*/ dyC rh2 rI'\n            },\n            {\n                n: 'xC',\n                f: '+- hc sdxC 0'\n            },\n            {\n                n: 'yC',\n                f: '+- vc sdyC 0'\n            },\n            {\n                n: 'wtI',\n                f: 'sin rw3 stAng'\n            },\n            {\n                n: 'htI',\n                f: 'cos rh3 stAng'\n            },\n            {\n                n: 'dxI',\n                f: 'cat2 rw3 htI wtI'\n            },\n            {\n                n: 'dyI',\n                f: 'sat2 rh3 htI wtI'\n            },\n            {\n                n: 'xI',\n                f: '+- hc dxI 0'\n            },\n            {\n                n: 'yI',\n                f: '+- vc dyI 0'\n            },\n            {\n                n: 'lptAng',\n                f: '+- stAng 0 aAng'\n            },\n            {\n                n: 'wtL',\n                f: 'sin rw3 lptAng'\n            },\n            {\n                n: 'htL',\n                f: 'cos rh3 lptAng'\n            },\n            {\n                n: 'dxL',\n                f: 'cat2 rw3 htL wtL'\n            },\n            {\n                n: 'dyL',\n                f: 'sat2 rh3 htL wtL'\n            },\n            {\n                n: 'xL',\n                f: '+- hc dxL 0'\n            },\n            {\n                n: 'yL',\n                f: '+- vc dyL 0'\n            },\n            {\n                n: 'dxK',\n                f: 'cos thh lptAng'\n            },\n            {\n                n: 'dyK',\n                f: 'sin thh lptAng'\n            },\n            {\n                n: 'xK',\n                f: '+- xI dxK 0'\n            },\n            {\n                n: 'yK',\n                f: '+- yI dyK 0'\n            },\n            {\n                n: 'dxJ',\n                f: 'cos thh lptAng'\n            },\n            {\n                n: 'dyJ',\n                f: 'sin thh lptAng'\n            },\n            {\n                n: 'xJ',\n                f: '+- xI 0 dxJ 0'\n            },\n            {\n                n: 'yJ',\n                f: '+- yI 0 dyJ 0'\n            },\n            {\n                n: 'p1',\n                f: '+- xF 0 xC'\n            },\n            {\n                n: 'p2',\n                f: '+- yF 0 yC'\n            },\n            {\n                n: 'p3',\n                f: 'mod p1 p2 0'\n            },\n            {\n                n: 'p4',\n                f: '*/ p3 1 2'\n            },\n            {\n                n: 'p5',\n                f: '+- p4 0 thh'\n            },\n            {\n                n: 'xGp',\n                f: '?: p5 xF xG'\n            },\n            {\n                n: 'yGp',\n                f: '?: p5 yF yG'\n            },\n            {\n                n: 'xBp',\n                f: '?: p5 xC xB'\n            },\n            {\n                n: 'yBp',\n                f: '?: p5 yC yB'\n            },\n            {\n                n: 'en0',\n                f: 'at2 sdxF sdyF'\n            },\n            {\n                n: 'en1',\n                f: '+- en0 21600000 0'\n            },\n            {\n                n: 'en2',\n                f: '?: en0 en0 en1'\n            },\n            {\n                n: 'od0',\n                f: '+- en2 0 enAng'\n            },\n            {\n                n: 'od1',\n                f: '+- od0 21600000 0'\n            },\n            {\n                n: 'od2',\n                f: '?: od0 od0 od1'\n            },\n            {\n                n: 'st0',\n                f: '+- stAng 0 od2'\n            },\n            {\n                n: 'st1',\n                f: '+- st0 21600000 0'\n            },\n            {\n                n: 'st2',\n                f: '?: st0 st0 st1'\n            },\n            {\n                n: 'sw0',\n                f: '+- en2 0 st2'\n            },\n            {\n                n: 'sw1',\n                f: '+- sw0 21600000 0'\n            },\n            {\n                n: 'swAng',\n                f: '?: sw0 sw0 sw1'\n            },\n            {\n                n: 'ist0',\n                f: 'at2 sdxC sdyC'\n            },\n            {\n                n: 'ist1',\n                f: '+- ist0 21600000 0'\n            },\n            {\n                n: 'istAng',\n                f: '?: ist0 ist0 ist1'\n            },\n            {\n                n: 'id0',\n                f: '+- istAng 0 enAng'\n            },\n            {\n                n: 'id1',\n                f: '+- id0 0 21600000'\n            },\n            {\n                n: 'id2',\n                f: '?: id0 id1 id0'\n            },\n            {\n                n: 'ien0',\n                f: '+- stAng 0 id2'\n            },\n            {\n                n: 'ien1',\n                f: '+- ien0 0 21600000'\n            },\n            {\n                n: 'ien2',\n                f: '?: ien1 ien1 ien0'\n            },\n            {\n                n: 'isw1',\n                f: '+- ien2 0 istAng'\n            },\n            {\n                n: 'isw2',\n                f: '+- isw1 0 21600000'\n            },\n            {\n                n: 'iswAng',\n                f: '?: isw1 isw2 isw1'\n            },\n            {\n                n: 'wtE',\n                f: 'sin rw1 st2'\n            },\n            {\n                n: 'htE',\n                f: 'cos rh1 st2'\n            },\n            {\n                n: 'dxE',\n                f: 'cat2 rw1 htE wtE'\n            },\n            {\n                n: 'dyE',\n                f: 'sat2 rh1 htE wtE'\n            },\n            {\n                n: 'xE',\n                f: '+- hc dxE 0'\n            },\n            {\n                n: 'yE',\n                f: '+- vc dyE 0'\n            },\n            {\n                n: 'wtD',\n                f: 'sin rw2 ien2'\n            },\n            {\n                n: 'htD',\n                f: 'cos rh2 ien2'\n            },\n            {\n                n: 'dxD',\n                f: 'cat2 rw2 htD wtD'\n            },\n            {\n                n: 'dyD',\n                f: 'sat2 rh2 htD wtD'\n            },\n            {\n                n: 'xD',\n                f: '+- hc dxD 0'\n            },\n            {\n                n: 'yD',\n                f: '+- vc dyD 0'\n            },\n            {\n                n: 'xKp',\n                f: '?: p5 xE xK'\n            },\n            {\n                n: 'yKp',\n                f: '?: p5 yE yK'\n            },\n            {\n                n: 'xJp',\n                f: '?: p5 xD xJ'\n            },\n            {\n                n: 'yJp',\n                f: '?: p5 yD yJ'\n            },\n            {\n                n: 'aL',\n                f: '+- lptAng 0 cd4'\n            },\n            {\n                n: 'aA',\n                f: '+- ptAng cd4 0'\n            },\n            {\n                n: 'aB',\n                f: '+- ptAng cd2 0'\n            },\n            {\n                n: 'aJ',\n                f: '+- lptAng cd2 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos rw1 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin rh1 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'xL',\n                            y: 'yL'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xKp',\n                            y: 'yKp'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xE',\n                            y: 'yE'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw1',\n                        hR: 'rh1',\n                        stAng: 'st2',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xGp',\n                            y: 'yGp'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xA',\n                            y: 'yA'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xBp',\n                            y: 'yBp'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC',\n                            y: 'yC'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rw2',\n                        hR: 'rh2',\n                        stAng: 'istAng',\n                        swAng: 'iswAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xJp',\n                            y: 'yJp'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftRightRibbon: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 33333'\n            },\n            {\n                n: 'maxAdj1',\n                f: '+- 100000 0 a3'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'w1',\n                f: '+- wd2 0 wd32'\n            },\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 w1 ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ h a3 -200000'\n            },\n            {\n                n: 'ly1',\n                f: '+- vc dy2 dy1'\n            },\n            {\n                n: 'ry4',\n                f: '+- vc dy1 dy2'\n            },\n            {\n                n: 'ly2',\n                f: '+- ly1 dy1 0'\n            },\n            {\n                n: 'ry3',\n                f: '+- b 0 ly2'\n            },\n            {\n                n: 'ly4',\n                f: '*/ ly2 2 1'\n            },\n            {\n                n: 'ry1',\n                f: '+- b 0 ly4'\n            },\n            {\n                n: 'ly3',\n                f: '+- ly4 0 ly1'\n            },\n            {\n                n: 'ry2',\n                f: '+- b 0 ly3'\n            },\n            {\n                n: 'hR',\n                f: '*/ a3 ss 400000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 wd32'\n            },\n            {\n                n: 'x3',\n                f: '+- hc wd32 0'\n            },\n            {\n                n: 'y1',\n                f: '+- ly1 hR 0'\n            },\n            {\n                n: 'y2',\n                f: '+- ry2 0 hR'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'ly2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'ly1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'ly1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ry2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ry1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'ry3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ry4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'ry4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'ly3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'ly3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'ly4'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ry2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'ly2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'ly1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'ly1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ry2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ry1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'ry3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ry4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'ry4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'ly3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'ly3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'ly4'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ry2'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'ly3'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftRightUpArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'q1',\n                f: '+- 100000 0 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ q1 1 2'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x5',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'dx3',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'dy2',\n                f: '*/ ss a2 50000'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 dy2'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 dx2'\n            },\n            {\n                n: 'y3',\n                f: '+- y4 0 dx3'\n            },\n            {\n                n: 'y5',\n                f: '+- y4 dx3 0'\n            },\n            {\n                n: 'il',\n                f: '*/ dx3 x1 dx2'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    leftUpArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '+- 100000 0 maxAdj1'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a2 50000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 dx2'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 dx2'\n            },\n            {\n                n: 'dx4',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 dx4'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 dx4'\n            },\n            {\n                n: 'dx3',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x3',\n                f: '+- x4 0 dx3'\n            },\n            {\n                n: 'x5',\n                f: '+- x4 dx3 0'\n            },\n            {\n                n: 'y3',\n                f: '+- y4 0 dx3'\n            },\n            {\n                n: 'y5',\n                f: '+- y4 dx3 0'\n            },\n            {\n                n: 'il',\n                f: '*/ dx3 x1 dx4'\n            },\n            {\n                n: 'cx1',\n                f: '+/ x1 x5 2'\n            },\n            {\n                n: 'cy1',\n                f: '+/ x1 y5 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    lightningBolt: {\n        gdLst: [\n            {\n                n: 'x1',\n                f: '*/ w 5022 21600'\n            },\n            {\n                n: 'x3',\n                f: '*/ w 8472 21600'\n            },\n            {\n                n: 'x4',\n                f: '*/ w 8757 21600'\n            },\n            {\n                n: 'x5',\n                f: '*/ w 10012 21600'\n            },\n            {\n                n: 'x8',\n                f: '*/ w 12860 21600'\n            },\n            {\n                n: 'x9',\n                f: '*/ w 13917 21600'\n            },\n            {\n                n: 'x11',\n                f: '*/ w 16577 21600'\n            },\n            {\n                n: 'y1',\n                f: '*/ h 3890 21600'\n            },\n            {\n                n: 'y2',\n                f: '*/ h 6080 21600'\n            },\n            {\n                n: 'y4',\n                f: '*/ h 7437 21600'\n            },\n            {\n                n: 'y6',\n                f: '*/ h 9705 21600'\n            },\n            {\n                n: 'y7',\n                f: '*/ h 12007 21600'\n            },\n            {\n                n: 'y10',\n                f: '*/ h 14277 21600'\n            },\n            {\n                n: 'y11',\n                f: '*/ h 14915 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: '8472',\n                            y: '0'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '12860',\n                            y: '6080'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '11050',\n                            y: '6797'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '16577',\n                            y: '12007'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '14767',\n                            y: '12877'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '21600',\n                            y: '21600'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '10012',\n                            y: '14915'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '12222',\n                            y: '13987'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '5022',\n                            y: '9705'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '7602',\n                            y: '8382'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: '0',\n                            y: '3890'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true,\n                w: 21600,\n                h: 21600\n            }\n        ]\n    },\n    line: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    lineInv: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    mathDivide: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 23520'\n            },\n            {\n                n: 'adj2',\n                f: 'val 5880'\n            },\n            {\n                n: 'adj3',\n                f: 'val 11760'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 1000 adj1 36745'\n            },\n            {\n                n: 'ma1',\n                f: '+- 0 0 a1'\n            },\n            {\n                n: 'ma3h',\n                f: '+/ 73490 ma1 4'\n            },\n            {\n                n: 'ma3w',\n                f: '*/ 36745 w h'\n            },\n            {\n                n: 'maxAdj3',\n                f: 'min ma3h ma3w'\n            },\n            {\n                n: 'a3',\n                f: 'pin 1000 adj3 maxAdj3'\n            },\n            {\n                n: 'm4a3',\n                f: '*/ -4 a3 1'\n            },\n            {\n                n: 'maxAdj2',\n                f: '+- 73490 m4a3 a1'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'yg',\n                f: '*/ h a2 100000'\n            },\n            {\n                n: 'rad',\n                f: '*/ h a3 100000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w 73490 200000'\n            },\n            {\n                n: 'y3',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'a',\n                f: '+- yg rad 0'\n            },\n            {\n                n: 'y2',\n                f: '+- y3 0 a'\n            },\n            {\n                n: 'y1',\n                f: '+- y2 0 rad'\n            },\n            {\n                n: 'y5',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 rad'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rad',\n                        hR: 'rad',\n                        stAng: '3cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'rad',\n                        hR: 'rad',\n                        stAng: 'cd4',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    mathEqual: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 23520'\n            },\n            {\n                n: 'adj2',\n                f: 'val 11760'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 36745'\n            },\n            {\n                n: '2a1',\n                f: '*/ a1 2 1'\n            },\n            {\n                n: 'mAdj2',\n                f: '+- 100000 0 2a1'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 mAdj2'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ h a2 200000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w 73490 200000'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y1',\n                f: '+- y2 0 dy1'\n            },\n            {\n                n: 'y4',\n                f: '+- y3 dy1 0'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'yC1',\n                f: '+/ y1 y2 2'\n            },\n            {\n                n: 'yC2',\n                f: '+/ y3 y4 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    mathMinus: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 23520'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w 73490 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx1 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    mathMultiply: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 23520'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 51965'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'a',\n                f: 'at2 w h'\n            },\n            {\n                n: 'sa',\n                f: 'sin 1 a'\n            },\n            {\n                n: 'ca',\n                f: 'cos 1 a'\n            },\n            {\n                n: 'ta',\n                f: 'tan 1 a'\n            },\n            {\n                n: 'dl',\n                f: 'mod w h 0'\n            },\n            {\n                n: 'rw',\n                f: '*/ dl 51965 100000'\n            },\n            {\n                n: 'lM',\n                f: '+- dl 0 rw'\n            },\n            {\n                n: 'xM',\n                f: '*/ ca lM 2'\n            },\n            {\n                n: 'yM',\n                f: '*/ sa lM 2'\n            },\n            {\n                n: 'dxAM',\n                f: '*/ sa th 2'\n            },\n            {\n                n: 'dyAM',\n                f: '*/ ca th 2'\n            },\n            {\n                n: 'xA',\n                f: '+- xM 0 dxAM'\n            },\n            {\n                n: 'yA',\n                f: '+- yM dyAM 0'\n            },\n            {\n                n: 'xB',\n                f: '+- xM dxAM 0'\n            },\n            {\n                n: 'yB',\n                f: '+- yM 0 dyAM'\n            },\n            {\n                n: 'xBC',\n                f: '+- hc 0 xB'\n            },\n            {\n                n: 'yBC',\n                f: '*/ xBC ta 1'\n            },\n            {\n                n: 'yC',\n                f: '+- yBC yB 0'\n            },\n            {\n                n: 'xD',\n                f: '+- r 0 xB'\n            },\n            {\n                n: 'xE',\n                f: '+- r 0 xA'\n            },\n            {\n                n: 'yFE',\n                f: '+- vc 0 yA'\n            },\n            {\n                n: 'xFE',\n                f: '*/ yFE 1 ta'\n            },\n            {\n                n: 'xF',\n                f: '+- xE 0 xFE'\n            },\n            {\n                n: 'xL',\n                f: '+- xA xFE 0'\n            },\n            {\n                n: 'yG',\n                f: '+- b 0 yA'\n            },\n            {\n                n: 'yH',\n                f: '+- b 0 yB'\n            },\n            {\n                n: 'yI',\n                f: '+- b 0 yC'\n            },\n            {\n                n: 'xC2',\n                f: '+- r 0 xM'\n            },\n            {\n                n: 'yC3',\n                f: '+- b 0 yM'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'xA',\n                            y: 'yA'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB',\n                            y: 'yB'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'yC'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD',\n                            y: 'yB'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xE',\n                            y: 'yA'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xF',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xE',\n                            y: 'yG'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xD',\n                            y: 'yH'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'yI'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xB',\n                            y: 'yH'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xA',\n                            y: 'yG'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xL',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    mathNotEqual: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 23520'\n            },\n            {\n                n: 'adj2',\n                f: 'val 6600000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 11760'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'crAng',\n                f: 'pin 4200000 adj2 6600000'\n            },\n            {\n                n: '2a1',\n                f: '*/ a1 2 1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '+- 100000 0 2a1'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ h a3 200000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w 73490 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x8',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y1',\n                f: '+- y2 0 dy1'\n            },\n            {\n                n: 'y4',\n                f: '+- y3 dy1 0'\n            },\n            {\n                n: 'cadj2',\n                f: '+- crAng 0 cd4'\n            },\n            {\n                n: 'xadj2',\n                f: 'tan hd2 cadj2'\n            },\n            {\n                n: 'len',\n                f: 'mod xadj2 hd2 0'\n            },\n            {\n                n: 'bhw',\n                f: '*/ len dy1 hd2'\n            },\n            {\n                n: 'bhw2',\n                f: '*/ bhw 1 2'\n            },\n            {\n                n: 'x7',\n                f: '+- hc xadj2 bhw2'\n            },\n            {\n                n: 'dx67',\n                f: '*/ xadj2 y1 hd2'\n            },\n            {\n                n: 'x6',\n                f: '+- x7 0 dx67'\n            },\n            {\n                n: 'dx57',\n                f: '*/ xadj2 y2 hd2'\n            },\n            {\n                n: 'x5',\n                f: '+- x7 0 dx57'\n            },\n            {\n                n: 'dx47',\n                f: '*/ xadj2 y3 hd2'\n            },\n            {\n                n: 'x4',\n                f: '+- x7 0 dx47'\n            },\n            {\n                n: 'dx37',\n                f: '*/ xadj2 y4 hd2'\n            },\n            {\n                n: 'x3',\n                f: '+- x7 0 dx37'\n            },\n            {\n                n: 'dx27',\n                f: '*/ xadj2 2 1'\n            },\n            {\n                n: 'x2',\n                f: '+- x7 0 dx27'\n            },\n            {\n                n: 'rx7',\n                f: '+- x7 bhw 0'\n            },\n            {\n                n: 'rx6',\n                f: '+- x6 bhw 0'\n            },\n            {\n                n: 'rx5',\n                f: '+- x5 bhw 0'\n            },\n            {\n                n: 'rx4',\n                f: '+- x4 bhw 0'\n            },\n            {\n                n: 'rx3',\n                f: '+- x3 bhw 0'\n            },\n            {\n                n: 'rx2',\n                f: '+- x2 bhw 0'\n            },\n            {\n                n: 'dx7',\n                f: '*/ dy1 hd2 len'\n            },\n            {\n                n: 'rxt',\n                f: '+- x7 dx7 0'\n            },\n            {\n                n: 'lxt',\n                f: '+- rx7 0 dx7'\n            },\n            {\n                n: 'rx',\n                f: '?: cadj2 rxt rx7'\n            },\n            {\n                n: 'lx',\n                f: '?: cadj2 x7 lxt'\n            },\n            {\n                n: 'dy3',\n                f: '*/ dy1 xadj2 len'\n            },\n            {\n                n: 'dy4',\n                f: '+- 0 0 dy3'\n            },\n            {\n                n: 'ry',\n                f: '?: cadj2 dy3 t'\n            },\n            {\n                n: 'ly',\n                f: '?: cadj2 t dy4'\n            },\n            {\n                n: 'dlx',\n                f: '+- w 0 rx'\n            },\n            {\n                n: 'drx',\n                f: '+- w 0 lx'\n            },\n            {\n                n: 'dly',\n                f: '+- h 0 ry'\n            },\n            {\n                n: 'dry',\n                f: '+- h 0 ly'\n            },\n            {\n                n: 'xC1',\n                f: '+/ rx lx 2'\n            },\n            {\n                n: 'xC2',\n                f: '+/ drx dlx 2'\n            },\n            {\n                n: 'yC1',\n                f: '+/ ry ly 2'\n            },\n            {\n                n: 'yC2',\n                f: '+/ y1 y2 2'\n            },\n            {\n                n: 'yC3',\n                f: '+/ y3 y4 2'\n            },\n            {\n                n: 'yC4',\n                f: '+/ dry dly 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'lx',\n                            y: 'ly'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'rx',\n                            y: 'ry'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'rx6',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'rx5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'rx4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'rx3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'drx',\n                            y: 'dry'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dlx',\n                            y: 'dly'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    mathPlus: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 23520'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 73490'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w 73490 200000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h 73490 200000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    moon: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 87500'\n            },\n            {\n                n: 'g0',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'g0w',\n                f: '*/ g0 w ss'\n            },\n            {\n                n: 'g1',\n                f: '+- ss 0 g0'\n            },\n            {\n                n: 'g2',\n                f: '*/ g0 g0 g1'\n            },\n            {\n                n: 'g3',\n                f: '*/ ss ss g1'\n            },\n            {\n                n: 'g4',\n                f: '*/ g3 2 1'\n            },\n            {\n                n: 'g5',\n                f: '+- g4 0 g2'\n            },\n            {\n                n: 'g6',\n                f: '+- g5 0 g0'\n            },\n            {\n                n: 'g6w',\n                f: '*/ g6 w ss'\n            },\n            {\n                n: 'g7',\n                f: '*/ g5 1 2'\n            },\n            {\n                n: 'g8',\n                f: '+- g7 0 g0'\n            },\n            {\n                n: 'dy1',\n                f: '*/ g8 hd2 ss'\n            },\n            {\n                n: 'g10h',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'g11h',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'g12',\n                f: '*/ g0 9598 32768'\n            },\n            {\n                n: 'g12w',\n                f: '*/ g12 w ss'\n            },\n            {\n                n: 'g13',\n                f: '+- ss 0 g12'\n            },\n            {\n                n: 'q1',\n                f: '*/ ss ss 1'\n            },\n            {\n                n: 'q2',\n                f: '*/ g13 g13 1'\n            },\n            {\n                n: 'q3',\n                f: '+- q1 0 q2'\n            },\n            {\n                n: 'q4',\n                f: 'sqrt q3'\n            },\n            {\n                n: 'dy4',\n                f: '*/ q4 hd2 ss'\n            },\n            {\n                n: 'g15h',\n                f: '+- vc 0 dy4'\n            },\n            {\n                n: 'g16h',\n                f: '+- vc dy4 0'\n            },\n            {\n                n: 'g17w',\n                f: '+- g6w 0 g0w'\n            },\n            {\n                n: 'g18w',\n                f: '*/ g17w 1 2'\n            },\n            {\n                n: 'dx2p',\n                f: '+- g0w g18w w'\n            },\n            {\n                n: 'dx2',\n                f: '*/ dx2p -1 1'\n            },\n            {\n                n: 'dy2',\n                f: '*/ hd2 -1 1'\n            },\n            {\n                n: 'stAng1',\n                f: 'at2 dx2 dy2'\n            },\n            {\n                n: 'enAngp1',\n                f: 'at2 dx2 hd2'\n            },\n            {\n                n: 'enAng1',\n                f: '+- enAngp1 0 21600000'\n            },\n            {\n                n: 'swAng1',\n                f: '+- enAng1 0 stAng1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'g18w',\n                        hR: 'dy1',\n                        stAng: 'stAng1',\n                        swAng: 'swAng1'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    nonIsoscelesTrapezoid: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x2',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'dx3',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+/ r x3 2'\n            },\n            {\n                n: 'il',\n                f: '*/ wd3 a1 maxAdj'\n            },\n            {\n                n: 'adjm',\n                f: 'max a1 a2'\n            },\n            {\n                n: 'it',\n                f: '*/ hd3 adjm maxAdj'\n            },\n            {\n                n: 'irt',\n                f: '*/ wd3 a2 maxAdj'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 irt'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    noSmoking: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 18750'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dr',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'iwd2',\n                f: '+- wd2 0 dr'\n            },\n            {\n                n: 'ihd2',\n                f: '+- hd2 0 dr'\n            },\n            {\n                n: 'ang',\n                f: 'at2 w h'\n            },\n            {\n                n: 'ct',\n                f: 'cos ihd2 ang'\n            },\n            {\n                n: 'st',\n                f: 'sin iwd2 ang'\n            },\n            {\n                n: 'm',\n                f: 'mod ct st 0'\n            },\n            {\n                n: 'n',\n                f: '*/ iwd2 ihd2 m'\n            },\n            {\n                n: 'drd2',\n                f: '*/ dr 1 2'\n            },\n            {\n                n: 'dang',\n                f: 'at2 n drd2'\n            },\n            {\n                n: 'dang2',\n                f: '*/ dang 2 1'\n            },\n            {\n                n: 'swAng',\n                f: '+- -10800000 dang2 0'\n            },\n            {\n                n: 't3',\n                f: 'at2 w h'\n            },\n            {\n                n: 'stAng1',\n                f: '+- t3 0 dang'\n            },\n            {\n                n: 'stAng2',\n                f: '+- stAng1 0 cd2'\n            },\n            {\n                n: 'ct1',\n                f: 'cos ihd2 stAng1'\n            },\n            {\n                n: 'st1',\n                f: 'sin iwd2 stAng1'\n            },\n            {\n                n: 'm1',\n                f: 'mod ct1 st1 0'\n            },\n            {\n                n: 'n1',\n                f: '*/ iwd2 ihd2 m1'\n            },\n            {\n                n: 'dx1',\n                f: 'cos n1 stAng1'\n            },\n            {\n                n: 'dy1',\n                f: 'sin n1 stAng1'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'iwd2',\n                        hR: 'ihd2',\n                        stAng: 'stAng1',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'iwd2',\n                        hR: 'ihd2',\n                        stAng: 'stAng2',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    notchedRightArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 dx2'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'x1',\n                f: '*/ dy1 dx2 hd2'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 x1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    octagon: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 29289'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'il',\n                f: '*/ x1 1 2'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    parallelogram: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 200000'\n            },\n            {\n                n: 'x2',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'x5',\n                f: '+- r 0 x2'\n            },\n            {\n                n: 'x3',\n                f: '*/ x5 1 2'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x3'\n            },\n            {\n                n: 'il',\n                f: '*/ wd2 a maxAdj'\n            },\n            {\n                n: 'q1',\n                f: '*/ 5 a maxAdj'\n            },\n            {\n                n: 'q2',\n                f: '+/ 1 q1 12'\n            },\n            {\n                n: 'il',\n                f: '*/ q2 w 1'\n            },\n            {\n                n: 'it',\n                f: '*/ q2 h 1'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 it'\n            },\n            {\n                n: 'q3',\n                f: '*/ h hc x2'\n            },\n            {\n                n: 'y1',\n                f: 'pin 0 q3 h'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 y1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    pentagon: {\n        avLst: [\n            {\n                n: 'hf',\n                f: 'val 105146'\n            },\n            {\n                n: 'vf',\n                f: 'val 110557'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'swd2',\n                f: '*/ wd2 hf 100000'\n            },\n            {\n                n: 'shd2',\n                f: '*/ hd2 vf 100000'\n            },\n            {\n                n: 'svc',\n                f: '*/ vc  vf 100000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos swd2 1080000'\n            },\n            {\n                n: 'dx2',\n                f: 'cos swd2 18360000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin shd2 1080000'\n            },\n            {\n                n: 'dy2',\n                f: 'sin shd2 18360000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- svc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- svc 0 dy2'\n            },\n            {\n                n: 'it',\n                f: '*/ y1 dx2 dx1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    pie: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 0'\n            },\n            {\n                n: 'adj2',\n                f: 'val 16200000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'stAng',\n                f: 'pin 0 adj1 21599999'\n            },\n            {\n                n: 'enAng',\n                f: 'pin 0 adj2 21599999'\n            },\n            {\n                n: 'sw1',\n                f: '+- enAng 0 stAng'\n            },\n            {\n                n: 'sw2',\n                f: '+- sw1 21600000 0'\n            },\n            {\n                n: 'swAng',\n                f: '?: sw1 sw1 sw2'\n            },\n            {\n                n: 'wt1',\n                f: 'sin wd2 stAng'\n            },\n            {\n                n: 'ht1',\n                f: 'cos hd2 stAng'\n            },\n            {\n                n: 'dx1',\n                f: 'cat2 wd2 ht1 wt1'\n            },\n            {\n                n: 'dy1',\n                f: 'sat2 hd2 ht1 wt1'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'wt2',\n                f: 'sin wd2 enAng'\n            },\n            {\n                n: 'ht2',\n                f: 'cos hd2 enAng'\n            },\n            {\n                n: 'dx2',\n                f: 'cat2 wd2 ht2 wt2'\n            },\n            {\n                n: 'dy2',\n                f: 'sat2 hd2 ht2 wt2'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'stAng',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    pieWedge: {\n        gdLst: [\n            {\n                n: 'g1',\n                f: 'cos w 13500000'\n            },\n            {\n                n: 'g2',\n                f: 'sin h 13500000'\n            },\n            {\n                n: 'x1',\n                f: '+- r g1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- b g2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'h',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    plaque: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'il',\n                f: '*/ x1 70711 100000'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    plaqueTabs: {\n        gdLst: [\n            {\n                n: 'md',\n                f: 'mod w h 0'\n            },\n            {\n                n: 'dx',\n                f: '*/ 1 md 20'\n            },\n            {\n                n: 'y1',\n                f: '+- 0 b dx'\n            },\n            {\n                n: 'x1',\n                f: '+- 0 r dx'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dx',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx',\n                        hR: 'dx',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx',\n                        hR: 'dx',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'dx'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx',\n                        hR: 'dx',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx',\n                        hR: 'dx',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    plus: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'd',\n                f: '+- w 0 h'\n            },\n            {\n                n: 'il',\n                f: '?: d l x1'\n            },\n            {\n                n: 'ir',\n                f: '?: d r x2'\n            },\n            {\n                n: 'it',\n                f: '?: d x1 t'\n            },\n            {\n                n: 'ib',\n                f: '?: d y2 b'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    quadArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 22500'\n            },\n            {\n                n: 'adj2',\n                f: 'val 22500'\n            },\n            {\n                n: 'adj3',\n                f: 'val 22500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'q1',\n                f: '+- 100000 0 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ q1 1 2'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x5',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'dx3',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'y5',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'y3',\n                f: '+- vc 0 dx3'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dx3 0'\n            },\n            {\n                n: 'y6',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'il',\n                f: '*/ dx3 x1 dx2'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    quadArrowCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 18515'\n            },\n            {\n                n: 'adj2',\n                f: 'val 18515'\n            },\n            {\n                n: 'adj3',\n                f: 'val 18515'\n            },\n            {\n                n: 'adj4',\n                f: 'val 48123'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '+- 50000 0 a2'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q2',\n                f: '*/ a3 2 1'\n            },\n            {\n                n: 'maxAdj4',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'a4',\n                f: 'pin a1 adj4 maxAdj4'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dx3',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'ah',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w a4 200000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a4 200000'\n            },\n            {\n                n: 'x8',\n                f: '+- r 0 ah'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x7',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x6',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x5',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'y8',\n                f: '+- b 0 ah'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y7',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'y3',\n                f: '+- vc 0 dx2'\n            },\n            {\n                n: 'y6',\n                f: '+- vc dx2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc 0 dx3'\n            },\n            {\n                n: 'y5',\n                f: '+- vc dx3 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ah',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ah',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ah'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ah'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'ah'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'ah'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ah',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ah',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    rect: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    ribbon: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 16667'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 33333'\n            },\n            {\n                n: 'a2',\n                f: 'pin 25000 adj2 75000'\n            },\n            {\n                n: 'x10',\n                f: '+- r 0 wd8'\n            },\n            {\n                n: 'dx2',\n                f: '*/ w a2 200000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x9',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x3',\n                f: '+- x2 wd32 0'\n            },\n            {\n                n: 'x8',\n                f: '+- x9 0 wd32'\n            },\n            {\n                n: 'x5',\n                f: '+- x2 wd8 0'\n            },\n            {\n                n: 'x6',\n                f: '+- x9 0 wd8'\n            },\n            {\n                n: 'x4',\n                f: '+- x5 0 wd32'\n            },\n            {\n                n: 'x7',\n                f: '+- x6 wd32 0'\n            },\n            {\n                n: 'y1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'y2',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 y2'\n            },\n            {\n                n: 'y3',\n                f: '*/ y4 1 2'\n            },\n            {\n                n: 'hR',\n                f: '*/ h a1 400000'\n            },\n            {\n                n: 'y5',\n                f: '+- b 0 hR'\n            },\n            {\n                n: 'y6',\n                f: '+- y2 0 hR'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    ribbon2: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 16667'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 33333'\n            },\n            {\n                n: 'a2',\n                f: 'pin 25000 adj2 75000'\n            },\n            {\n                n: 'x10',\n                f: '+- r 0 wd8'\n            },\n            {\n                n: 'dx2',\n                f: '*/ w a2 200000'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x9',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x3',\n                f: '+- x2 wd32 0'\n            },\n            {\n                n: 'x8',\n                f: '+- x9 0 wd32'\n            },\n            {\n                n: 'x5',\n                f: '+- x2 wd8 0'\n            },\n            {\n                n: 'x6',\n                f: '+- x9 0 wd8'\n            },\n            {\n                n: 'x4',\n                f: '+- x5 0 wd32'\n            },\n            {\n                n: 'x7',\n                f: '+- x6 wd32 0'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- b 0 dy1'\n            },\n            {\n                n: 'dy2',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 dy2'\n            },\n            {\n                n: 'y4',\n                f: '+- t dy2 0'\n            },\n            {\n                n: 'y3',\n                f: '+/ y4 b 2'\n            },\n            {\n                n: 'hR',\n                f: '*/ h a1 400000'\n            },\n            {\n                n: 'y6',\n                f: '+- b 0 hR'\n            },\n            {\n                n: 'y7',\n                f: '+- y1 0 hR'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd8',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'hR'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: 'cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd32',\n                        hR: 'hR',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y7'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    rightArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- r 0 dx1'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'dx2',\n                f: '*/ y1 dx1 hd2'\n            },\n            {\n                n: 'x2',\n                f: '+- x1 dx2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    rightArrowCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 64977'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 w ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q2',\n                f: '*/ a3 ss w'\n            },\n            {\n                n: 'maxAdj4',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'dy1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'dx3',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 dx3'\n            },\n            {\n                n: 'x2',\n                f: '*/ w a4 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ x2 1 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    rightBrace: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 8333'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 100000'\n            },\n            {\n                n: 'q1',\n                f: '+- 100000 0 a2'\n            },\n            {\n                n: 'q2',\n                f: 'min q1 a2'\n            },\n            {\n                n: 'q3',\n                f: '*/ q2 1 2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ q3 h ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'y3',\n                f: '*/ h a2 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- y3 0 y1'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'dx1',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin y1 2700000'\n            },\n            {\n                n: 'ir',\n                f: '+- l dx1 0'\n            },\n            {\n                n: 'it',\n                f: '+- y1 0 dy1'\n            },\n            {\n                n: 'ib',\n                f: '+- b dy1 y1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: 'cd2',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    rightBracket: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 8333'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'dx1',\n                f: 'cos w 2700000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin y1 2700000'\n            },\n            {\n                n: 'ir',\n                f: '+- l dx1 0'\n            },\n            {\n                n: 'it',\n                f: '+- y1 0 dy1'\n            },\n            {\n                n: 'ib',\n                f: '+- b dy1 y1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'w',\n                        hR: 'y1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    round1Rect: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- r 0 dx1'\n            },\n            {\n                n: 'idx',\n                f: '*/ dx1 29289 100000'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 idx'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'dx1',\n                        hR: 'dx1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    round2DiagRect: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 16667'\n            },\n            {\n                n: 'adj2',\n                f: 'val 0'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'y1',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'a',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 a'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 a'\n            },\n            {\n                n: 'dx1',\n                f: '*/ x1 29289 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ a 29289 100000'\n            },\n            {\n                n: 'd',\n                f: '+- dx1 0 dx2'\n            },\n            {\n                n: 'dx',\n                f: '?: d dx1 dx2'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 dx'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 dx'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'a',\n                        hR: 'a',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'a',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'a',\n                        hR: 'a',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    round2SameRect: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 16667'\n            },\n            {\n                n: 'adj2',\n                f: 'val 0'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'tx1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'tx2',\n                f: '+- r 0 tx1'\n            },\n            {\n                n: 'bx1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'bx2',\n                f: '+- r 0 bx1'\n            },\n            {\n                n: 'by1',\n                f: '+- b 0 bx1'\n            },\n            {\n                n: 'd',\n                f: '+- tx1 0 bx1'\n            },\n            {\n                n: 'tdx',\n                f: '*/ tx1 29289 100000'\n            },\n            {\n                n: 'bdx',\n                f: '*/ bx1 29289 100000'\n            },\n            {\n                n: 'il',\n                f: '?: d tdx bdx'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 bdx'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'tx1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'tx2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'tx1',\n                        hR: 'tx1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'by1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bx1',\n                        hR: 'bx1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'bx1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bx1',\n                        hR: 'bx1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'tx1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'tx1',\n                        hR: 'tx1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    roundRect: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 x1'\n            },\n            {\n                n: 'il',\n                f: '*/ x1 29289 100000'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    rtTriangle: {\n        gdLst: [\n            {\n                n: 'it',\n                f: '*/ h 7 12'\n            },\n            {\n                n: 'ir',\n                f: '*/ w 7 12'\n            },\n            {\n                n: 'ib',\n                f: '*/ h 11 12'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    smileyFace: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 4653'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin -4653 adj 4653'\n            },\n            {\n                n: 'x1',\n                f: '*/ w 4969 21699'\n            },\n            {\n                n: 'x2',\n                f: '*/ w 6215 21600'\n            },\n            {\n                n: 'x3',\n                f: '*/ w 13135 21600'\n            },\n            {\n                n: 'x4',\n                f: '*/ w 16640 21600'\n            },\n            {\n                n: 'y1',\n                f: '*/ h 7570 21600'\n            },\n            {\n                n: 'y3',\n                f: '*/ h 16515 21600'\n            },\n            {\n                n: 'dy2',\n                f: '*/ h a 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- y3 0 dy2'\n            },\n            {\n                n: 'y4',\n                f: '+- y3 dy2 0'\n            },\n            {\n                n: 'dy3',\n                f: '*/ h a 50000'\n            },\n            {\n                n: 'y5',\n                f: '+- y4 dy3 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            },\n            {\n                n: 'wR',\n                f: '*/ w 1125 21600'\n            },\n            {\n                n: 'hR',\n                f: '*/ h 1125 21600'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: '21600000'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'hc',\n                                y: 'y5'\n                            },\n                            {\n                                x: 'x4',\n                                y: 'y2'\n                            }\n                        ]\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    snip1Rect: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- r 0 dx1'\n            },\n            {\n                n: 'it',\n                f: '*/ dx1 1 2'\n            },\n            {\n                n: 'ir',\n                f: '+/ x1 r 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'dx1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    snip2DiagRect: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 0'\n            },\n            {\n                n: 'adj2',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'lx1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'lx2',\n                f: '+- r 0 lx1'\n            },\n            {\n                n: 'ly1',\n                f: '+- b 0 lx1'\n            },\n            {\n                n: 'rx1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'rx2',\n                f: '+- r 0 rx1'\n            },\n            {\n                n: 'ry1',\n                f: '+- b 0 rx1'\n            },\n            {\n                n: 'd',\n                f: '+- lx1 0 rx1'\n            },\n            {\n                n: 'dx',\n                f: '?: d lx1 rx1'\n            },\n            {\n                n: 'il',\n                f: '*/ dx 1 2'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'lx1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'rx2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'rx1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'ly1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'lx2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'rx1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'ry1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'lx1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    snip2SameRect: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 16667'\n            },\n            {\n                n: 'adj2',\n                f: 'val 0'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'tx1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'tx2',\n                f: '+- r 0 tx1'\n            },\n            {\n                n: 'bx1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'bx2',\n                f: '+- r 0 bx1'\n            },\n            {\n                n: 'by1',\n                f: '+- b 0 bx1'\n            },\n            {\n                n: 'd',\n                f: '+- tx1 0 bx1'\n            },\n            {\n                n: 'dx',\n                f: '?: d tx1 bx1'\n            },\n            {\n                n: 'il',\n                f: '*/ dx 1 2'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'it',\n                f: '*/ tx1 1 2'\n            },\n            {\n                n: 'ib',\n                f: '+/ by1 b 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'tx1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'tx2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'tx1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'by1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'bx2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'bx1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'by1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'tx1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    snipRoundRect: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 16667'\n            },\n            {\n                n: 'adj2',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 50000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 50000'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x2',\n                f: '+- r 0 dx2'\n            },\n            {\n                n: 'il',\n                f: '*/ x1 29289 100000'\n            },\n            {\n                n: 'ir',\n                f: '+/ x2 r 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'dx2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'x1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'x1',\n                        hR: 'x1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    squareTabs: {\n        gdLst: [\n            {\n                n: 'md',\n                f: 'mod w h 0'\n            },\n            {\n                n: 'dx',\n                f: '*/ 1 md 20'\n            },\n            {\n                n: 'y1',\n                f: '+- 0 b dx'\n            },\n            {\n                n: 'x1',\n                f: '+- 0 r dx'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dx',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dx',\n                            y: 'dx'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'dx'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dx',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'dx',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'dx'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'dx'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star10: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 42533'\n            },\n            {\n                n: 'hf',\n                f: 'val 105146'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'swd2',\n                f: '*/ wd2 hf 100000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ swd2 95106 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ swd2 58779 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'dy1',\n                f: '*/ hd2 80902 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ hd2 30902 100000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ swd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: '*/ iwd2 80902 100000'\n            },\n            {\n                n: 'sdx2',\n                f: '*/ iwd2 30902 100000'\n            },\n            {\n                n: 'sdy1',\n                f: '*/ ihd2 95106 100000'\n            },\n            {\n                n: 'sdy2',\n                f: '*/ ihd2 58779 100000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 iwd2'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx5',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sx6',\n                f: '+- hc iwd2 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- vc sdy2 0'\n            },\n            {\n                n: 'sy4',\n                f: '+- vc sdy1 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star12: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 37500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos wd2 1800000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin hd2 3600000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x3',\n                f: '*/ w 3 4'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y3',\n                f: '*/ h 3 4'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ wd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: 'cos iwd2 900000'\n            },\n            {\n                n: 'sdx2',\n                f: 'cos iwd2 2700000'\n            },\n            {\n                n: 'sdx3',\n                f: 'cos iwd2 4500000'\n            },\n            {\n                n: 'sdy1',\n                f: 'sin ihd2 4500000'\n            },\n            {\n                n: 'sdy2',\n                f: 'sin ihd2 2700000'\n            },\n            {\n                n: 'sdy3',\n                f: 'sin ihd2 900000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc 0 sdx3'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc sdx3 0'\n            },\n            {\n                n: 'sx5',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx6',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- vc 0 sdy3'\n            },\n            {\n                n: 'sy4',\n                f: '+- vc sdy3 0'\n            },\n            {\n                n: 'sy5',\n                f: '+- vc sdy2 0'\n            },\n            {\n                n: 'sy6',\n                f: '+- vc sdy1 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'hd4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'hd4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'wd4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star16: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 37500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ wd2 92388 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ wd2 70711 100000'\n            },\n            {\n                n: 'dx3',\n                f: '*/ wd2 38268 100000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ hd2 92388 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ hd2 70711 100000'\n            },\n            {\n                n: 'dy3',\n                f: '*/ hd2 38268 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'x5',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x6',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc 0 dy3'\n            },\n            {\n                n: 'y4',\n                f: '+- vc dy3 0'\n            },\n            {\n                n: 'y5',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y6',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ wd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: '*/ iwd2 98079 100000'\n            },\n            {\n                n: 'sdx2',\n                f: '*/ iwd2 83147 100000'\n            },\n            {\n                n: 'sdx3',\n                f: '*/ iwd2 55557 100000'\n            },\n            {\n                n: 'sdx4',\n                f: '*/ iwd2 19509 100000'\n            },\n            {\n                n: 'sdy1',\n                f: '*/ ihd2 98079 100000'\n            },\n            {\n                n: 'sdy2',\n                f: '*/ ihd2 83147 100000'\n            },\n            {\n                n: 'sdy3',\n                f: '*/ ihd2 55557 100000'\n            },\n            {\n                n: 'sdy4',\n                f: '*/ ihd2 19509 100000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc 0 sdx3'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc 0 sdx4'\n            },\n            {\n                n: 'sx5',\n                f: '+- hc sdx4 0'\n            },\n            {\n                n: 'sx6',\n                f: '+- hc sdx3 0'\n            },\n            {\n                n: 'sx7',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx8',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- vc 0 sdy3'\n            },\n            {\n                n: 'sy4',\n                f: '+- vc 0 sdy4'\n            },\n            {\n                n: 'sy5',\n                f: '+- vc sdy4 0'\n            },\n            {\n                n: 'sy6',\n                f: '+- vc sdy3 0'\n            },\n            {\n                n: 'sy7',\n                f: '+- vc sdy2 0'\n            },\n            {\n                n: 'sy8',\n                f: '+- vc sdy1 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos iwd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin ihd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx7',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx8',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx8',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx7',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star24: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 37500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos wd2 900000'\n            },\n            {\n                n: 'dx2',\n                f: 'cos wd2 1800000'\n            },\n            {\n                n: 'dx3',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'dx4',\n                f: 'val wd4'\n            },\n            {\n                n: 'dx5',\n                f: 'cos wd2 4500000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin hd2 4500000'\n            },\n            {\n                n: 'dy2',\n                f: 'sin hd2 3600000'\n            },\n            {\n                n: 'dy3',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'dy4',\n                f: 'val hd4'\n            },\n            {\n                n: 'dy5',\n                f: 'sin hd2 900000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+- hc 0 dx4'\n            },\n            {\n                n: 'x5',\n                f: '+- hc 0 dx5'\n            },\n            {\n                n: 'x6',\n                f: '+- hc dx5 0'\n            },\n            {\n                n: 'x7',\n                f: '+- hc dx4 0'\n            },\n            {\n                n: 'x8',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'x9',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x10',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc 0 dy3'\n            },\n            {\n                n: 'y4',\n                f: '+- vc 0 dy4'\n            },\n            {\n                n: 'y5',\n                f: '+- vc 0 dy5'\n            },\n            {\n                n: 'y6',\n                f: '+- vc dy5 0'\n            },\n            {\n                n: 'y7',\n                f: '+- vc dy4 0'\n            },\n            {\n                n: 'y8',\n                f: '+- vc dy3 0'\n            },\n            {\n                n: 'y9',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y10',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ wd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: '*/ iwd2 99144 100000'\n            },\n            {\n                n: 'sdx2',\n                f: '*/ iwd2 92388 100000'\n            },\n            {\n                n: 'sdx3',\n                f: '*/ iwd2 79335 100000'\n            },\n            {\n                n: 'sdx4',\n                f: '*/ iwd2 60876 100000'\n            },\n            {\n                n: 'sdx5',\n                f: '*/ iwd2 38268 100000'\n            },\n            {\n                n: 'sdx6',\n                f: '*/ iwd2 13053 100000'\n            },\n            {\n                n: 'sdy1',\n                f: '*/ ihd2 99144 100000'\n            },\n            {\n                n: 'sdy2',\n                f: '*/ ihd2 92388 100000'\n            },\n            {\n                n: 'sdy3',\n                f: '*/ ihd2 79335 100000'\n            },\n            {\n                n: 'sdy4',\n                f: '*/ ihd2 60876 100000'\n            },\n            {\n                n: 'sdy5',\n                f: '*/ ihd2 38268 100000'\n            },\n            {\n                n: 'sdy6',\n                f: '*/ ihd2 13053 100000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc 0 sdx3'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc 0 sdx4'\n            },\n            {\n                n: 'sx5',\n                f: '+- hc 0 sdx5'\n            },\n            {\n                n: 'sx6',\n                f: '+- hc 0 sdx6'\n            },\n            {\n                n: 'sx7',\n                f: '+- hc sdx6 0'\n            },\n            {\n                n: 'sx8',\n                f: '+- hc sdx5 0'\n            },\n            {\n                n: 'sx9',\n                f: '+- hc sdx4 0'\n            },\n            {\n                n: 'sx10',\n                f: '+- hc sdx3 0'\n            },\n            {\n                n: 'sx11',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx12',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- vc 0 sdy3'\n            },\n            {\n                n: 'sy4',\n                f: '+- vc 0 sdy4'\n            },\n            {\n                n: 'sy5',\n                f: '+- vc 0 sdy5'\n            },\n            {\n                n: 'sy6',\n                f: '+- vc 0 sdy6'\n            },\n            {\n                n: 'sy7',\n                f: '+- vc sdy6 0'\n            },\n            {\n                n: 'sy8',\n                f: '+- vc sdy5 0'\n            },\n            {\n                n: 'sy9',\n                f: '+- vc sdy4 0'\n            },\n            {\n                n: 'sy10',\n                f: '+- vc sdy3 0'\n            },\n            {\n                n: 'sy11',\n                f: '+- vc sdy2 0'\n            },\n            {\n                n: 'sy12',\n                f: '+- vc sdy1 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos iwd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin ihd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx7',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx8',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx9',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx10',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx11',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx12',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx12',\n                            y: 'sy7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx11',\n                            y: 'sy8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx10',\n                            y: 'sy9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx9',\n                            y: 'sy10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx8',\n                            y: 'sy11'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx7',\n                            y: 'sy12'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy12'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy11'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy7'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star32: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 37500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ wd2 98079 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ wd2 92388 100000'\n            },\n            {\n                n: 'dx3',\n                f: '*/ wd2 83147 100000'\n            },\n            {\n                n: 'dx4',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'dx5',\n                f: '*/ wd2 55557 100000'\n            },\n            {\n                n: 'dx6',\n                f: '*/ wd2 38268 100000'\n            },\n            {\n                n: 'dx7',\n                f: '*/ wd2 19509 100000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ hd2 98079 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ hd2 92388 100000'\n            },\n            {\n                n: 'dy3',\n                f: '*/ hd2 83147 100000'\n            },\n            {\n                n: 'dy4',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'dy5',\n                f: '*/ hd2 55557 100000'\n            },\n            {\n                n: 'dy6',\n                f: '*/ hd2 38268 100000'\n            },\n            {\n                n: 'dy7',\n                f: '*/ hd2 19509 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+- hc 0 dx4'\n            },\n            {\n                n: 'x5',\n                f: '+- hc 0 dx5'\n            },\n            {\n                n: 'x6',\n                f: '+- hc 0 dx6'\n            },\n            {\n                n: 'x7',\n                f: '+- hc 0 dx7'\n            },\n            {\n                n: 'x8',\n                f: '+- hc dx7 0'\n            },\n            {\n                n: 'x9',\n                f: '+- hc dx6 0'\n            },\n            {\n                n: 'x10',\n                f: '+- hc dx5 0'\n            },\n            {\n                n: 'x11',\n                f: '+- hc dx4 0'\n            },\n            {\n                n: 'x12',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'x13',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x14',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc 0 dy3'\n            },\n            {\n                n: 'y4',\n                f: '+- vc 0 dy4'\n            },\n            {\n                n: 'y5',\n                f: '+- vc 0 dy5'\n            },\n            {\n                n: 'y6',\n                f: '+- vc 0 dy6'\n            },\n            {\n                n: 'y7',\n                f: '+- vc 0 dy7'\n            },\n            {\n                n: 'y8',\n                f: '+- vc dy7 0'\n            },\n            {\n                n: 'y9',\n                f: '+- vc dy6 0'\n            },\n            {\n                n: 'y10',\n                f: '+- vc dy5 0'\n            },\n            {\n                n: 'y11',\n                f: '+- vc dy4 0'\n            },\n            {\n                n: 'y12',\n                f: '+- vc dy3 0'\n            },\n            {\n                n: 'y13',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'y14',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ wd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: '*/ iwd2 99518 100000'\n            },\n            {\n                n: 'sdx2',\n                f: '*/ iwd2 95694 100000'\n            },\n            {\n                n: 'sdx3',\n                f: '*/ iwd2 88192 100000'\n            },\n            {\n                n: 'sdx4',\n                f: '*/ iwd2 77301 100000'\n            },\n            {\n                n: 'sdx5',\n                f: '*/ iwd2 63439 100000'\n            },\n            {\n                n: 'sdx6',\n                f: '*/ iwd2 47140 100000'\n            },\n            {\n                n: 'sdx7',\n                f: '*/ iwd2 29028 100000'\n            },\n            {\n                n: 'sdx8',\n                f: '*/ iwd2 9802 100000'\n            },\n            {\n                n: 'sdy1',\n                f: '*/ ihd2 99518 100000'\n            },\n            {\n                n: 'sdy2',\n                f: '*/ ihd2 95694 100000'\n            },\n            {\n                n: 'sdy3',\n                f: '*/ ihd2 88192 100000'\n            },\n            {\n                n: 'sdy4',\n                f: '*/ ihd2 77301 100000'\n            },\n            {\n                n: 'sdy5',\n                f: '*/ ihd2 63439 100000'\n            },\n            {\n                n: 'sdy6',\n                f: '*/ ihd2 47140 100000'\n            },\n            {\n                n: 'sdy7',\n                f: '*/ ihd2 29028 100000'\n            },\n            {\n                n: 'sdy8',\n                f: '*/ ihd2 9802 100000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc 0 sdx3'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc 0 sdx4'\n            },\n            {\n                n: 'sx5',\n                f: '+- hc 0 sdx5'\n            },\n            {\n                n: 'sx6',\n                f: '+- hc 0 sdx6'\n            },\n            {\n                n: 'sx7',\n                f: '+- hc 0 sdx7'\n            },\n            {\n                n: 'sx8',\n                f: '+- hc 0 sdx8'\n            },\n            {\n                n: 'sx9',\n                f: '+- hc sdx8 0'\n            },\n            {\n                n: 'sx10',\n                f: '+- hc sdx7 0'\n            },\n            {\n                n: 'sx11',\n                f: '+- hc sdx6 0'\n            },\n            {\n                n: 'sx12',\n                f: '+- hc sdx5 0'\n            },\n            {\n                n: 'sx13',\n                f: '+- hc sdx4 0'\n            },\n            {\n                n: 'sx14',\n                f: '+- hc sdx3 0'\n            },\n            {\n                n: 'sx15',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx16',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- vc 0 sdy3'\n            },\n            {\n                n: 'sy4',\n                f: '+- vc 0 sdy4'\n            },\n            {\n                n: 'sy5',\n                f: '+- vc 0 sdy5'\n            },\n            {\n                n: 'sy6',\n                f: '+- vc 0 sdy6'\n            },\n            {\n                n: 'sy7',\n                f: '+- vc 0 sdy7'\n            },\n            {\n                n: 'sy8',\n                f: '+- vc 0 sdy8'\n            },\n            {\n                n: 'sy9',\n                f: '+- vc sdy8 0'\n            },\n            {\n                n: 'sy10',\n                f: '+- vc sdy7 0'\n            },\n            {\n                n: 'sy11',\n                f: '+- vc sdy6 0'\n            },\n            {\n                n: 'sy12',\n                f: '+- vc sdy5 0'\n            },\n            {\n                n: 'sy13',\n                f: '+- vc sdy4 0'\n            },\n            {\n                n: 'sy14',\n                f: '+- vc sdy3 0'\n            },\n            {\n                n: 'sy15',\n                f: '+- vc sdy2 0'\n            },\n            {\n                n: 'sy16',\n                f: '+- vc sdy1 0'\n            },\n            {\n                n: 'idx',\n                f: 'cos iwd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin ihd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx7',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx8',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx9',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx10',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx11',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx12',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x11',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx13',\n                            y: 'sy5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x12',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx14',\n                            y: 'sy6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x13',\n                            y: 'y6'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx15',\n                            y: 'sy7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x14',\n                            y: 'y7'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx16',\n                            y: 'sy8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx16',\n                            y: 'sy9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x14',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx15',\n                            y: 'sy10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x13',\n                            y: 'y9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx14',\n                            y: 'sy11'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x12',\n                            y: 'y10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx13',\n                            y: 'sy12'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x11',\n                            y: 'y11'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx12',\n                            y: 'sy13'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y12'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx11',\n                            y: 'sy14'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y13'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx10',\n                            y: 'sy15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y14'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx9',\n                            y: 'sy16'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx8',\n                            y: 'sy16'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y14'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx7',\n                            y: 'sy15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y13'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy14'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y12'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy13'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y11'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy12'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy11'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y9'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y8'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy9'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star4: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ wd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx',\n                f: 'cos iwd2 2700000'\n            },\n            {\n                n: 'sdy',\n                f: 'sin ihd2 2700000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc sdx 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc sdy 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star5: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 19098'\n            },\n            {\n                n: 'hf',\n                f: 'val 105146'\n            },\n            {\n                n: 'vf',\n                f: 'val 110557'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'swd2',\n                f: '*/ wd2 hf 100000'\n            },\n            {\n                n: 'shd2',\n                f: '*/ hd2 vf 100000'\n            },\n            {\n                n: 'svc',\n                f: '*/ vc  vf 100000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos swd2 1080000'\n            },\n            {\n                n: 'dx2',\n                f: 'cos swd2 18360000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin shd2 1080000'\n            },\n            {\n                n: 'dy2',\n                f: 'sin shd2 18360000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- svc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- svc 0 dy2'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ swd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ shd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: 'cos iwd2 20520000'\n            },\n            {\n                n: 'sdx2',\n                f: 'cos iwd2 3240000'\n            },\n            {\n                n: 'sdy1',\n                f: 'sin ihd2 3240000'\n            },\n            {\n                n: 'sdy2',\n                f: 'sin ihd2 20520000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- svc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- svc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- svc ihd2 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- svc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star6: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 28868'\n            },\n            {\n                n: 'hf',\n                f: 'val 115470'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'swd2',\n                f: '*/ wd2 hf 100000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos swd2 1800000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y2',\n                f: '+- vc hd4 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ swd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx2',\n                f: '*/ iwd2 1 2'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 iwd2'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc iwd2 0'\n            },\n            {\n                n: 'sdy1',\n                f: 'sin ihd2 3600000'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc sdy1 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'hd4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'hd4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star7: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 34601'\n            },\n            {\n                n: 'hf',\n                f: 'val 102572'\n            },\n            {\n                n: 'vf',\n                f: 'val 105210'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'swd2',\n                f: '*/ wd2 hf 100000'\n            },\n            {\n                n: 'shd2',\n                f: '*/ hd2 vf 100000'\n            },\n            {\n                n: 'svc',\n                f: '*/ vc  vf 100000'\n            },\n            {\n                n: 'dx1',\n                f: '*/ swd2 97493 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ swd2 78183 100000'\n            },\n            {\n                n: 'dx3',\n                f: '*/ swd2 43388 100000'\n            },\n            {\n                n: 'dy1',\n                f: '*/ shd2 62349 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ shd2 22252 100000'\n            },\n            {\n                n: 'dy3',\n                f: '*/ shd2 90097 100000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc 0 dx3'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx3 0'\n            },\n            {\n                n: 'x5',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x6',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- svc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- svc dy2 0'\n            },\n            {\n                n: 'y3',\n                f: '+- svc dy3 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ swd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ shd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: '*/ iwd2 97493 100000'\n            },\n            {\n                n: 'sdx2',\n                f: '*/ iwd2 78183 100000'\n            },\n            {\n                n: 'sdx3',\n                f: '*/ iwd2 43388 100000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc 0 sdx3'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc sdx3 0'\n            },\n            {\n                n: 'sx5',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx6',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sdy1',\n                f: '*/ ihd2 90097 100000'\n            },\n            {\n                n: 'sdy2',\n                f: '*/ ihd2 22252 100000'\n            },\n            {\n                n: 'sdy3',\n                f: '*/ ihd2 62349 100000'\n            },\n            {\n                n: 'sy1',\n                f: '+- svc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- svc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- svc sdy3 0'\n            },\n            {\n                n: 'sy4',\n                f: '+- svc ihd2 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- svc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx6',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx5',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    star8: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 37500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 50000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'dy1',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'iwd2',\n                f: '*/ wd2 a 50000'\n            },\n            {\n                n: 'ihd2',\n                f: '*/ hd2 a 50000'\n            },\n            {\n                n: 'sdx1',\n                f: '*/ iwd2 92388 100000'\n            },\n            {\n                n: 'sdx2',\n                f: '*/ iwd2 38268 100000'\n            },\n            {\n                n: 'sdy1',\n                f: '*/ ihd2 92388 100000'\n            },\n            {\n                n: 'sdy2',\n                f: '*/ ihd2 38268 100000'\n            },\n            {\n                n: 'sx1',\n                f: '+- hc 0 sdx1'\n            },\n            {\n                n: 'sx2',\n                f: '+- hc 0 sdx2'\n            },\n            {\n                n: 'sx3',\n                f: '+- hc sdx2 0'\n            },\n            {\n                n: 'sx4',\n                f: '+- hc sdx1 0'\n            },\n            {\n                n: 'sy1',\n                f: '+- vc 0 sdy1'\n            },\n            {\n                n: 'sy2',\n                f: '+- vc 0 sdy2'\n            },\n            {\n                n: 'sy3',\n                f: '+- vc sdy2 0'\n            },\n            {\n                n: 'sy4',\n                f: '+- vc sdy1 0'\n            },\n            {\n                n: 'yAdj',\n                f: '+- vc 0 ihd2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx4',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx3',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx2',\n                            y: 'sy4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'sx1',\n                            y: 'sy3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    straightConnector1: {\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    stripedRightArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 84375 w ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'x4',\n                f: '*/ ss 5 32'\n            },\n            {\n                n: 'dx5',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'x5',\n                f: '+- r 0 dx5'\n            },\n            {\n                n: 'dy1',\n                f: '*/ h a1 200000'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'dx6',\n                f: '*/ dy1 dx5 hd2'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 dx6'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ssd32',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ssd32',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ssd16',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ssd8',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ssd8',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ssd16',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x5',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    sun: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 12500 adj 46875'\n            },\n            {\n                n: 'g0',\n                f: '+- 50000 0 a'\n            },\n            {\n                n: 'g1',\n                f: '*/ g0 30274 32768'\n            },\n            {\n                n: 'g2',\n                f: '*/ g0 12540 32768'\n            },\n            {\n                n: 'g3',\n                f: '+- g1 50000 0'\n            },\n            {\n                n: 'g4',\n                f: '+- g2 50000 0'\n            },\n            {\n                n: 'g5',\n                f: '+- 50000 0 g1'\n            },\n            {\n                n: 'g6',\n                f: '+- 50000 0 g2'\n            },\n            {\n                n: 'g7',\n                f: '*/ g0 23170 32768'\n            },\n            {\n                n: 'g8',\n                f: '+- 50000 g7 0'\n            },\n            {\n                n: 'g9',\n                f: '+- 50000 0 g7'\n            },\n            {\n                n: 'g10',\n                f: '*/ g5 3 4'\n            },\n            {\n                n: 'g11',\n                f: '*/ g6 3 4'\n            },\n            {\n                n: 'g12',\n                f: '+- g10 3662 0'\n            },\n            {\n                n: 'g13',\n                f: '+- g11 3662 0'\n            },\n            {\n                n: 'g14',\n                f: '+- g11 12500 0'\n            },\n            {\n                n: 'g15',\n                f: '+- 100000 0 g10'\n            },\n            {\n                n: 'g16',\n                f: '+- 100000 0 g12'\n            },\n            {\n                n: 'g17',\n                f: '+- 100000 0 g13'\n            },\n            {\n                n: 'g18',\n                f: '+- 100000 0 g14'\n            },\n            {\n                n: 'ox1',\n                f: '*/ w 18436 21600'\n            },\n            {\n                n: 'oy1',\n                f: '*/ h 3163 21600'\n            },\n            {\n                n: 'ox2',\n                f: '*/ w 3163 21600'\n            },\n            {\n                n: 'oy2',\n                f: '*/ h 18436 21600'\n            },\n            {\n                n: 'x8',\n                f: '*/ w g8 100000'\n            },\n            {\n                n: 'x9',\n                f: '*/ w g9 100000'\n            },\n            {\n                n: 'x10',\n                f: '*/ w g10 100000'\n            },\n            {\n                n: 'x12',\n                f: '*/ w g12 100000'\n            },\n            {\n                n: 'x13',\n                f: '*/ w g13 100000'\n            },\n            {\n                n: 'x14',\n                f: '*/ w g14 100000'\n            },\n            {\n                n: 'x15',\n                f: '*/ w g15 100000'\n            },\n            {\n                n: 'x16',\n                f: '*/ w g16 100000'\n            },\n            {\n                n: 'x17',\n                f: '*/ w g17 100000'\n            },\n            {\n                n: 'x18',\n                f: '*/ w g18 100000'\n            },\n            {\n                n: 'x19',\n                f: '*/ w a 100000'\n            },\n            {\n                n: 'wR',\n                f: '*/ w g0 100000'\n            },\n            {\n                n: 'hR',\n                f: '*/ h g0 100000'\n            },\n            {\n                n: 'y8',\n                f: '*/ h g8 100000'\n            },\n            {\n                n: 'y9',\n                f: '*/ h g9 100000'\n            },\n            {\n                n: 'y10',\n                f: '*/ h g10 100000'\n            },\n            {\n                n: 'y12',\n                f: '*/ h g12 100000'\n            },\n            {\n                n: 'y13',\n                f: '*/ h g13 100000'\n            },\n            {\n                n: 'y14',\n                f: '*/ h g14 100000'\n            },\n            {\n                n: 'y15',\n                f: '*/ h g15 100000'\n            },\n            {\n                n: 'y16',\n                f: '*/ h g16 100000'\n            },\n            {\n                n: 'y17',\n                f: '*/ h g17 100000'\n            },\n            {\n                n: 'y18',\n                f: '*/ h g18 100000'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'r',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x15',\n                            y: 'y18'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x15',\n                            y: 'y14'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ox1',\n                            y: 'oy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x16',\n                            y: 'y13'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x17',\n                            y: 'y12'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x18',\n                            y: 'y10'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x14',\n                            y: 'y10'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ox2',\n                            y: 'oy1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x13',\n                            y: 'y12'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x12',\n                            y: 'y13'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y14'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y18'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ox2',\n                            y: 'oy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x12',\n                            y: 'y17'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x13',\n                            y: 'y16'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x14',\n                            y: 'y15'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x18',\n                            y: 'y15'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ox1',\n                            y: 'oy2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x17',\n                            y: 'y16'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x16',\n                            y: 'y17'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x19',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wR',\n                        hR: 'hR',\n                        stAng: 'cd2',\n                        swAng: '21600000'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    swooshArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 1 adj1 75000'\n            },\n            {\n                n: 'maxAdj2',\n                f: '*/ 70000 w ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'ad1',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'ad2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'xB',\n                f: '+- r 0 ad2'\n            },\n            {\n                n: 'yB',\n                f: '+- t ssd8 0'\n            },\n            {\n                n: 'alfa',\n                f: '*/ cd4 1 14'\n            },\n            {\n                n: 'dx0',\n                f: 'tan ssd8 alfa'\n            },\n            {\n                n: 'xC',\n                f: '+- xB 0 dx0'\n            },\n            {\n                n: 'dx1',\n                f: 'tan ad1 alfa'\n            },\n            {\n                n: 'yF',\n                f: '+- yB ad1 0'\n            },\n            {\n                n: 'xF',\n                f: '+- xB dx1 0'\n            },\n            {\n                n: 'xE',\n                f: '+- xF dx0 0'\n            },\n            {\n                n: 'yE',\n                f: '+- yF ssd8 0'\n            },\n            {\n                n: 'dy2',\n                f: '+- yE 0 t'\n            },\n            {\n                n: 'dy22',\n                f: '*/ dy2 1 2'\n            },\n            {\n                n: 'dy3',\n                f: '*/ h 1 20'\n            },\n            {\n                n: 'yD',\n                f: '+- t dy22 dy3'\n            },\n            {\n                n: 'dy4',\n                f: '*/ hd6 1 1'\n            },\n            {\n                n: 'yP1',\n                f: '+- hd6 dy4 0'\n            },\n            {\n                n: 'xP1',\n                f: 'val wd6'\n            },\n            {\n                n: 'dy5',\n                f: '*/ hd6 1 2'\n            },\n            {\n                n: 'yP2',\n                f: '+- yF dy5 0'\n            },\n            {\n                n: 'xP2',\n                f: 'val wd4'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'xP1',\n                                y: 'yP1'\n                            },\n                            {\n                                x: 'xB',\n                                y: 'yB'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xC',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'yD'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xE',\n                            y: 'yE'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xF',\n                            y: 'yF'\n                        }\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'xP2',\n                                y: 'yP2'\n                            },\n                            {\n                                x: 'l',\n                                y: 'b'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    teardrop: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 100000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 200000'\n            },\n            {\n                n: 'r2',\n                f: 'sqrt 2'\n            },\n            {\n                n: 'tw',\n                f: '*/ wd2 r2 1'\n            },\n            {\n                n: 'th',\n                f: '*/ hd2 r2 1'\n            },\n            {\n                n: 'sw',\n                f: '*/ tw a 100000'\n            },\n            {\n                n: 'sh',\n                f: '*/ th a 100000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos sw 2700000'\n            },\n            {\n                n: 'dy1',\n                f: 'sin sh 2700000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc 0 dy1'\n            },\n            {\n                n: 'x2',\n                f: '+/ hc x1 2'\n            },\n            {\n                n: 'y2',\n                f: '+/ vc y1 2'\n            },\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'vc'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'x2',\n                                y: 't'\n                            },\n                            {\n                                x: 'x1',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'quadBezTo',\n                        pts: [\n                            {\n                                x: 'r',\n                                y: 'y2'\n                            },\n                            {\n                                x: 'r',\n                                y: 'vc'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    trapezoid: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 25000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a',\n                f: 'pin 0 adj maxAdj'\n            },\n            {\n                n: 'x1',\n                f: '*/ ss a 200000'\n            },\n            {\n                n: 'x2',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- r 0 x2'\n            },\n            {\n                n: 'x4',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'il',\n                f: '*/ wd3 a maxAdj'\n            },\n            {\n                n: 'it',\n                f: '*/ hd3 a maxAdj'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    triangle: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 100000'\n            },\n            {\n                n: 'x1',\n                f: '*/ w a 200000'\n            },\n            {\n                n: 'x2',\n                f: '*/ w a 100000'\n            },\n            {\n                n: 'x3',\n                f: '+- x1 wd2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    upArrowCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 64977'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 100000 h ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q2',\n                f: '*/ a3 ss h'\n            },\n            {\n                n: 'maxAdj4',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ h a4 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- b 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+/ y2 b 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    upDownArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'y2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'y3',\n                f: '+- b 0 y2'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w a1 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'dy1',\n                f: '*/ x1 y2 wd2'\n            },\n            {\n                n: 'y1',\n                f: '+- y2 0 dy1'\n            },\n            {\n                n: 'y4',\n                f: '+- y3 dy1 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    upArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 50000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 50000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 100000 h ss'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 100000'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'dy2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'y2',\n                f: '+- t dy2 0'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w a1 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'dy1',\n                f: '*/ x1 dy2 wd2'\n            },\n            {\n                n: 'y1',\n                f: '+- y2  0 dy1'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    upDownArrowCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 48123'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'maxAdj2',\n                f: '*/ 50000 w ss'\n            },\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 maxAdj2'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ 50000 h ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q2',\n                f: '*/ a3 ss hd2'\n            },\n            {\n                n: 'maxAdj4',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'dx1',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'dx2',\n                f: '*/ ss a1 200000'\n            },\n            {\n                n: 'x1',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'x2',\n                f: '+- hc 0 dx2'\n            },\n            {\n                n: 'x3',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'dy2',\n                f: '*/ h a4 200000'\n            },\n            {\n                n: 'y2',\n                f: '+- vc 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- vc dy2 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'hc',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    uturnArrow: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj2',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj3',\n                f: 'val 25000'\n            },\n            {\n                n: 'adj4',\n                f: 'val 43750'\n            },\n            {\n                n: 'adj5',\n                f: 'val 75000'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a2',\n                f: 'pin 0 adj2 25000'\n            },\n            {\n                n: 'maxAdj1',\n                f: '*/ a2 2 1'\n            },\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 maxAdj1'\n            },\n            {\n                n: 'q2',\n                f: '*/ a1 ss h'\n            },\n            {\n                n: 'q3',\n                f: '+- 100000 0 q2'\n            },\n            {\n                n: 'maxAdj3',\n                f: '*/ q3 h ss'\n            },\n            {\n                n: 'a3',\n                f: 'pin 0 adj3 maxAdj3'\n            },\n            {\n                n: 'q1',\n                f: '+- a3 a1 0'\n            },\n            {\n                n: 'minAdj5',\n                f: '*/ q1 ss h'\n            },\n            {\n                n: 'a5',\n                f: 'pin minAdj5 adj5 100000'\n            },\n            {\n                n: 'th',\n                f: '*/ ss a1 100000'\n            },\n            {\n                n: 'aw2',\n                f: '*/ ss a2 100000'\n            },\n            {\n                n: 'th2',\n                f: '*/ th 1 2'\n            },\n            {\n                n: 'dh2',\n                f: '+- aw2 0 th2'\n            },\n            {\n                n: 'y5',\n                f: '*/ h a5 100000'\n            },\n            {\n                n: 'ah',\n                f: '*/ ss a3 100000'\n            },\n            {\n                n: 'y4',\n                f: '+- y5 0 ah'\n            },\n            {\n                n: 'x9',\n                f: '+- r 0 dh2'\n            },\n            {\n                n: 'bw',\n                f: '*/ x9 1 2'\n            },\n            {\n                n: 'bs',\n                f: 'min bw y4'\n            },\n            {\n                n: 'maxAdj4',\n                f: '*/ bs 100000 ss'\n            },\n            {\n                n: 'a4',\n                f: 'pin 0 adj4 maxAdj4'\n            },\n            {\n                n: 'bd',\n                f: '*/ ss a4 100000'\n            },\n            {\n                n: 'bd3',\n                f: '+- bd 0 th'\n            },\n            {\n                n: 'bd2',\n                f: 'max bd3 0'\n            },\n            {\n                n: 'x3',\n                f: '+- th bd2 0'\n            },\n            {\n                n: 'x8',\n                f: '+- r 0 aw2'\n            },\n            {\n                n: 'x6',\n                f: '+- x8 0 aw2'\n            },\n            {\n                n: 'x7',\n                f: '+- x6 dh2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- x9 0 bd'\n            },\n            {\n                n: 'x5',\n                f: '+- x7 0 bd2'\n            },\n            {\n                n: 'cx',\n                f: '+/ th x7 2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'bd'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bd',\n                        hR: 'bd',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bd',\n                        hR: 'bd',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x9',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x8',\n                            y: 'y5'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 'x3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bd2',\n                        hR: 'bd2',\n                        stAng: '0',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'th'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'bd2',\n                        hR: 'bd2',\n                        stAng: '3cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'th',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    verticalScroll: {\n        avLst: [\n            {\n                n: 'adj',\n                f: 'val 12500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a',\n                f: 'pin 0 adj 25000'\n            },\n            {\n                n: 'ch',\n                f: '*/ ss a 100000'\n            },\n            {\n                n: 'ch2',\n                f: '*/ ch 1 2'\n            },\n            {\n                n: 'ch4',\n                f: '*/ ch 1 4'\n            },\n            {\n                n: 'x3',\n                f: '+- ch ch2 0'\n            },\n            {\n                n: 'x4',\n                f: '+- ch ch 0'\n            },\n            {\n                n: 'x6',\n                f: '+- r 0 ch'\n            },\n            {\n                n: 'x7',\n                f: '+- r 0 ch2'\n            },\n            {\n                n: 'x5',\n                f: '+- x6 0 ch2'\n            },\n            {\n                n: 'y3',\n                f: '+- b 0 ch'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 ch2'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: 'cd4',\n                        swAng: '-10800000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: '3cd4'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                fill: 'darkenLess',\n                extrusionOk: false,\n                stroke: false\n            },\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x7',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'close'\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x3',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: 'cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x4',\n                            y: 'ch2'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x6',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x3',\n                            y: 'ch'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'y3'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch4',\n                        hR: 'ch4',\n                        stAng: '3cd4',\n                        swAng: 'cd2'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'ch2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'ch2',\n                        hR: 'ch2',\n                        stAng: 'cd4',\n                        swAng: '-5400000'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'ch',\n                            y: 'y3'\n                        }\n                    }\n                ],\n                fill: 'none',\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    wave: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val 12500'\n            },\n            {\n                n: 'adj2',\n                f: 'val 0'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'a1',\n                f: 'pin 0 adj1 20000'\n            },\n            {\n                n: 'a2',\n                f: 'pin -10000 adj2 10000'\n            },\n            {\n                n: 'y1',\n                f: '*/ h a1 100000'\n            },\n            {\n                n: 'dy2',\n                f: '*/ y1 10 3'\n            },\n            {\n                n: 'y2',\n                f: '+- y1 0 dy2'\n            },\n            {\n                n: 'y3',\n                f: '+- y1 dy2 0'\n            },\n            {\n                n: 'y4',\n                f: '+- b 0 y1'\n            },\n            {\n                n: 'y5',\n                f: '+- y4 0 dy2'\n            },\n            {\n                n: 'y6',\n                f: '+- y4 dy2 0'\n            },\n            {\n                n: 'dx1',\n                f: '*/ w a2 100000'\n            },\n            {\n                n: 'of2',\n                f: '*/ w a2 50000'\n            },\n            {\n                n: 'x1',\n                f: 'abs dx1'\n            },\n            {\n                n: 'dx2',\n                f: '?: of2 0 of2'\n            },\n            {\n                n: 'x2',\n                f: '+- l 0 dx2'\n            },\n            {\n                n: 'dx5',\n                f: '?: of2 of2 0'\n            },\n            {\n                n: 'x5',\n                f: '+- r 0 dx5'\n            },\n            {\n                n: 'dx3',\n                f: '+/ dx2 x5 3'\n            },\n            {\n                n: 'x3',\n                f: '+- x2 dx3 0'\n            },\n            {\n                n: 'x4',\n                f: '+/ x3 x5 2'\n            },\n            {\n                n: 'x6',\n                f: '+- l dx5 0'\n            },\n            {\n                n: 'x10',\n                f: '+- r dx2 0'\n            },\n            {\n                n: 'x7',\n                f: '+- x6 dx3 0'\n            },\n            {\n                n: 'x8',\n                f: '+/ x7 x10 2'\n            },\n            {\n                n: 'x9',\n                f: '+- r 0 x1'\n            },\n            {\n                n: 'xAdj',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'xAdj2',\n                f: '+- hc 0 dx1'\n            },\n            {\n                n: 'il',\n                f: 'max x2 x6'\n            },\n            {\n                n: 'ir',\n                f: 'min x5 x10'\n            },\n            {\n                n: 'it',\n                f: '*/ h a1 50000'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 it'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x3',\n                                y: 'y2'\n                            },\n                            {\n                                x: 'x4',\n                                y: 'y3'\n                            },\n                            {\n                                x: 'x5',\n                                y: 'y1'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x10',\n                            y: 'y4'\n                        }\n                    },\n                    {\n                        type: 'cubicBezTo',\n                        pts: [\n                            {\n                                x: 'x8',\n                                y: 'y6'\n                            },\n                            {\n                                x: 'x7',\n                                y: 'y5'\n                            },\n                            {\n                                x: 'x6',\n                                y: 'y4'\n                            }\n                        ]\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    wedgeEllipseCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val -20833'\n            },\n            {\n                n: 'adj2',\n                f: 'val 62500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'dxPos',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'dyPos',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'xPos',\n                f: '+- hc dxPos 0'\n            },\n            {\n                n: 'yPos',\n                f: '+- vc dyPos 0'\n            },\n            {\n                n: 'sdx',\n                f: '*/ dxPos h 1'\n            },\n            {\n                n: 'sdy',\n                f: '*/ dyPos w 1'\n            },\n            {\n                n: 'pang',\n                f: 'at2 sdx sdy'\n            },\n            {\n                n: 'stAng',\n                f: '+- pang 660000 0'\n            },\n            {\n                n: 'enAng',\n                f: '+- pang 0 660000'\n            },\n            {\n                n: 'dx1',\n                f: 'cos wd2 stAng'\n            },\n            {\n                n: 'dy1',\n                f: 'sin hd2 stAng'\n            },\n            {\n                n: 'x1',\n                f: '+- hc dx1 0'\n            },\n            {\n                n: 'y1',\n                f: '+- vc dy1 0'\n            },\n            {\n                n: 'dx2',\n                f: 'cos wd2 enAng'\n            },\n            {\n                n: 'dy2',\n                f: 'sin hd2 enAng'\n            },\n            {\n                n: 'x2',\n                f: '+- hc dx2 0'\n            },\n            {\n                n: 'y2',\n                f: '+- vc dy2 0'\n            },\n            {\n                n: 'stAng1',\n                f: 'at2 dx1 dy1'\n            },\n            {\n                n: 'enAng1',\n                f: 'at2 dx2 dy2'\n            },\n            {\n                n: 'swAng1',\n                f: '+- enAng1 0 stAng1'\n            },\n            {\n                n: 'swAng2',\n                f: '+- swAng1 21600000 0'\n            },\n            {\n                n: 'swAng',\n                f: '?: swAng1 swAng1 swAng2'\n            },\n            {\n                n: 'idx',\n                f: 'cos wd2 2700000'\n            },\n            {\n                n: 'idy',\n                f: 'sin hd2 2700000'\n            },\n            {\n                n: 'il',\n                f: '+- hc 0 idx'\n            },\n            {\n                n: 'ir',\n                f: '+- hc idx 0'\n            },\n            {\n                n: 'it',\n                f: '+- vc 0 idy'\n            },\n            {\n                n: 'ib',\n                f: '+- vc idy 0'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'xPos',\n                            y: 'yPos'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'wd2',\n                        hR: 'hd2',\n                        stAng: 'stAng1',\n                        swAng: 'swAng'\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    wedgeRectCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val -20833'\n            },\n            {\n                n: 'adj2',\n                f: 'val 62500'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'dxPos',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'dyPos',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'xPos',\n                f: '+- hc dxPos 0'\n            },\n            {\n                n: 'yPos',\n                f: '+- vc dyPos 0'\n            },\n            {\n                n: 'dx',\n                f: '+- xPos 0 hc'\n            },\n            {\n                n: 'dy',\n                f: '+- yPos 0 vc'\n            },\n            {\n                n: 'dq',\n                f: '*/ dxPos h w'\n            },\n            {\n                n: 'ady',\n                f: 'abs dyPos'\n            },\n            {\n                n: 'adq',\n                f: 'abs dq'\n            },\n            {\n                n: 'dz',\n                f: '+- ady 0 adq'\n            },\n            {\n                n: 'xg1',\n                f: '?: dxPos 7 2'\n            },\n            {\n                n: 'xg2',\n                f: '?: dxPos 10 5'\n            },\n            {\n                n: 'x1',\n                f: '*/ w xg1 12'\n            },\n            {\n                n: 'x2',\n                f: '*/ w xg2 12'\n            },\n            {\n                n: 'yg1',\n                f: '?: dyPos 7 2'\n            },\n            {\n                n: 'yg2',\n                f: '?: dyPos 10 5'\n            },\n            {\n                n: 'y1',\n                f: '*/ h yg1 12'\n            },\n            {\n                n: 'y2',\n                f: '*/ h yg2 12'\n            },\n            {\n                n: 't1',\n                f: '?: dxPos l xPos'\n            },\n            {\n                n: 'xl',\n                f: '?: dz l t1'\n            },\n            {\n                n: 't2',\n                f: '?: dyPos x1 xPos'\n            },\n            {\n                n: 'xt',\n                f: '?: dz t2 x1'\n            },\n            {\n                n: 't3',\n                f: '?: dxPos xPos r'\n            },\n            {\n                n: 'xr',\n                f: '?: dz r t3'\n            },\n            {\n                n: 't4',\n                f: '?: dyPos xPos x1'\n            },\n            {\n                n: 'xb',\n                f: '?: dz t4 x1'\n            },\n            {\n                n: 't5',\n                f: '?: dxPos y1 yPos'\n            },\n            {\n                n: 'yl',\n                f: '?: dz y1 t5'\n            },\n            {\n                n: 't6',\n                f: '?: dyPos t yPos'\n            },\n            {\n                n: 'yt',\n                f: '?: dz t6 t'\n            },\n            {\n                n: 't7',\n                f: '?: dxPos yPos y1'\n            },\n            {\n                n: 'yr',\n                f: '?: dz y1 t7'\n            },\n            {\n                n: 't8',\n                f: '?: dyPos yPos b'\n            },\n            {\n                n: 'yb',\n                f: '?: dz t8 b'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xt',\n                            y: 'yt'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xr',\n                            y: 'yr'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xb',\n                            y: 'yb'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xl',\n                            y: 'yl'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    },\n    wedgeRoundRectCallout: {\n        avLst: [\n            {\n                n: 'adj1',\n                f: 'val -20833'\n            },\n            {\n                n: 'adj2',\n                f: 'val 62500'\n            },\n            {\n                n: 'adj3',\n                f: 'val 16667'\n            }\n        ],\n        gdLst: [\n            {\n                n: 'dxPos',\n                f: '*/ w adj1 100000'\n            },\n            {\n                n: 'dyPos',\n                f: '*/ h adj2 100000'\n            },\n            {\n                n: 'xPos',\n                f: '+- hc dxPos 0'\n            },\n            {\n                n: 'yPos',\n                f: '+- vc dyPos 0'\n            },\n            {\n                n: 'dq',\n                f: '*/ dxPos h w'\n            },\n            {\n                n: 'ady',\n                f: 'abs dyPos'\n            },\n            {\n                n: 'adq',\n                f: 'abs dq'\n            },\n            {\n                n: 'dz',\n                f: '+- ady 0 adq'\n            },\n            {\n                n: 'xg1',\n                f: '?: dxPos 7 2'\n            },\n            {\n                n: 'xg2',\n                f: '?: dxPos 10 5'\n            },\n            {\n                n: 'x1',\n                f: '*/ w xg1 12'\n            },\n            {\n                n: 'x2',\n                f: '*/ w xg2 12'\n            },\n            {\n                n: 'yg1',\n                f: '?: dyPos 7 2'\n            },\n            {\n                n: 'yg2',\n                f: '?: dyPos 10 5'\n            },\n            {\n                n: 'y1',\n                f: '*/ h yg1 12'\n            },\n            {\n                n: 'y2',\n                f: '*/ h yg2 12'\n            },\n            {\n                n: 't1',\n                f: '?: dxPos l xPos'\n            },\n            {\n                n: 'xl',\n                f: '?: dz l t1'\n            },\n            {\n                n: 't2',\n                f: '?: dyPos x1 xPos'\n            },\n            {\n                n: 'xt',\n                f: '?: dz t2 x1'\n            },\n            {\n                n: 't3',\n                f: '?: dxPos xPos r'\n            },\n            {\n                n: 'xr',\n                f: '?: dz r t3'\n            },\n            {\n                n: 't4',\n                f: '?: dyPos xPos x1'\n            },\n            {\n                n: 'xb',\n                f: '?: dz t4 x1'\n            },\n            {\n                n: 't5',\n                f: '?: dxPos y1 yPos'\n            },\n            {\n                n: 'yl',\n                f: '?: dz y1 t5'\n            },\n            {\n                n: 't6',\n                f: '?: dyPos t yPos'\n            },\n            {\n                n: 'yt',\n                f: '?: dz t6 t'\n            },\n            {\n                n: 't7',\n                f: '?: dxPos yPos y1'\n            },\n            {\n                n: 'yr',\n                f: '?: dz y1 t7'\n            },\n            {\n                n: 't8',\n                f: '?: dyPos yPos b'\n            },\n            {\n                n: 'yb',\n                f: '?: dz t8 b'\n            },\n            {\n                n: 'u1',\n                f: '*/ ss adj3 100000'\n            },\n            {\n                n: 'u2',\n                f: '+- r 0 u1'\n            },\n            {\n                n: 'v2',\n                f: '+- b 0 u1'\n            },\n            {\n                n: 'il',\n                f: '*/ u1 29289 100000'\n            },\n            {\n                n: 'ir',\n                f: '+- r 0 il'\n            },\n            {\n                n: 'ib',\n                f: '+- b 0 il'\n            }\n        ],\n        pathLst: [\n            {\n                defines: [\n                    {\n                        type: 'moveTo',\n                        pt: {\n                            x: 'l',\n                            y: 'u1'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'u1',\n                        hR: 'u1',\n                        stAng: 'cd2',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xt',\n                            y: 'yt'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'u2',\n                            y: 't'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'u1',\n                        hR: 'u1',\n                        stAng: '3cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xr',\n                            y: 'yr'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'r',\n                            y: 'v2'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'u1',\n                        hR: 'u1',\n                        stAng: '0',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x2',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xb',\n                            y: 'yb'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'x1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'u1',\n                            y: 'b'\n                        }\n                    },\n                    {\n                        type: 'arcTo',\n                        wR: 'u1',\n                        hR: 'u1',\n                        stAng: 'cd4',\n                        swAng: 'cd4'\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y2'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'xl',\n                            y: 'yl'\n                        }\n                    },\n                    {\n                        type: 'lnTo',\n                        pt: {\n                            x: 'l',\n                            y: 'y1'\n                        }\n                    },\n                    {\n                        type: 'close'\n                    }\n                ],\n                extrusionOk: false,\n                stroke: true\n            }\n        ]\n    }\n};\n\nexport { presetShape };\n", "/**\n * 计算公式 20.1.9.11\n */\nvar angleFactor = (1 / 60000 / 180) * Math.PI;\nvar formulas = {\n    '*/': function (x, y, z) {\n        return (x * y) / z;\n    },\n    '+-': function (x, y, z) {\n        return x + y - z;\n    },\n    '+/': function (x, y, z) {\n        return (x + y) / z;\n    },\n    '?:': function (x, y, z) {\n        return x > 0 ? y : z;\n    },\n    'abs': function (x) {\n        return Math.abs(x);\n    },\n    'at2': function (x, y) {\n        // 转回角度，因为后续的计算是基于角度的\n        return (Math.atan2(y, x) * 180 * 60000) / Math.PI;\n    },\n    'cat2': function (x, y, z) {\n        return x * Math.cos(Math.atan2(z, y));\n    },\n    'cos': function (x, y) {\n        return x * Math.cos(y * angleFactor);\n    },\n    'max': function (x, y) {\n        return Math.max(x, y);\n    },\n    'min': function (x, y) {\n        return Math.min(x, y);\n    },\n    'mod': function (x, y, z) {\n        return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));\n    },\n    'pin': function (x, y, z) {\n        return y < x ? x : y > z ? z : y;\n    },\n    'sat2': function (x, y, z) {\n        return x * Math.sin(Math.atan2(z, y));\n    },\n    'sin': function (x, y) {\n        return x * Math.sin(y * angleFactor);\n    },\n    'sqrt': function (x) {\n        return Math.sqrt(x);\n    },\n    'tan': function (x, y) {\n        return x * Math.tan(y * angleFactor);\n    },\n    'val': function (a) {\n        var parse = parseInt(a, 10);\n        if (isNaN(parse)) {\n            return parse;\n        }\n        return parse;\n    }\n};\n/**\n * 执行公式计算并返回结果\n * @param fmla 公式\n * @param vars 变量值\n * @returns\n */\nfunction evalFmla(name, fmla, vars) {\n    var fmlaArr = fmla.split(/[ ]+/);\n    if (fmlaArr.length <= 1) {\n        console.warn('fmla format error', fmla);\n    }\n    var fmlaName = fmlaArr[0];\n    var fmlaArgs = fmlaArr.slice(1);\n    // 这里要求 gd 定义必须顺序，不然就找不到之前的值了\n    var fmlaArgsNum = fmlaArgs.map(function (arg) {\n        if (arg in vars) {\n            return vars[arg];\n        }\n        var parse = parseInt(arg, 10);\n        if (isNaN(parse)) {\n            console.warn('fmla arg error', arg, fmla);\n            return 0;\n        }\n        else {\n            return parse;\n        }\n    });\n    if (fmlaName in formulas) {\n        var val = formulas[fmlaName].apply(null, fmlaArgsNum);\n        if (isNaN(val)) {\n            console.warn('fmla eval error', fmla, name);\n            return 0;\n        }\n        else {\n            vars[name] = val;\n        }\n    }\n    return 0;\n}\n\nexport { evalFmla, formulas };\n", "/**\n * 将 arc 定义转成 SVG PATH 里的 A 命令\n */\nfunction floatEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    var diff = Math.abs(a - b);\n    if (diff < Number.EPSILON) {\n        return true;\n    }\n    return diff <= Number.EPSILON * Math.min(Math.abs(a), Math.abs(b));\n}\n/**\n * 计算角度\n */\nvar radians = function (deg) { return Math.PI * (deg / 60000 / 180); };\n/**\n * 将 arc 转成 A 指令，但目前看来不太正确，比如 curvedRightArrow 的显示就不对\n */\nfunction arcToPathA(wR, hR, stAng, swAng, preX, preY) {\n    var startR = radians(stAng);\n    var swAngR = radians(swAng);\n    var endR = radians(stAng + swAng);\n    if (floatEqual(swAng, 60000 * 360)) {\n        // 如果是圆会变成点，所以减少一下避免这种情况\n        endR = endR - 0.0001;\n    }\n    var end = getEndPoint(wR, hR, startR, endR, 0, preX, preY);\n    // 是否是大弧\n    var largeArcFlag = Math.abs(swAngR) > Math.PI ? 1 : 0;\n    // 是否是顺时针\n    var sweepFlag = swAng > 0 ? 1 : 0;\n    var path = \"A \".concat(wR, \" \").concat(hR, \" 0 \").concat(largeArcFlag, \" \").concat(sweepFlag, \" \").concat(end.x, \",\").concat(end.y);\n    return {\n        path: path,\n        end: end\n    };\n}\n/**\n * 简单实现的矩阵相乘，只支持一种输入\n */\nfunction matrixMul(first, second) {\n    return [\n        first[0][0] * second[0] + first[0][1] * second[1],\n        first[1][0] * second[0] + first[1][1] * second[1]\n    ];\n}\n/**\n * 算出结束点位置，公式来自\n * https://www.cnblogs.com/ryzen/p/15191386.html\n * https://wiki.documentfoundation.org/Development/Improve_handles_of_DrawingML_shapes\n *\n * @param rx 半长轴半径\n * @param ry 半短轴半径\n * @param stAng 起始角度\n * @param swAng 旋转角度\n * @param rotate 旋转\n * @param x 起始点 x 坐标\n * @param y 起始点 y 坐标\n * @returns 结束点位置\n */\nfunction getEndPoint(rx, ry, stAng, swAng, rotate, x, y) {\n    var startR = stAng;\n    var endR = swAng;\n    // 起始节点坐标\n    var matrixX1Y1 = [x, y];\n    var matrix1 = [\n        [Math.cos(rotate), -Math.sin(rotate)],\n        [Math.sin(rotate), Math.cos(rotate)]\n    ];\n    var matrix2 = [rx * Math.cos(startR), ry * Math.sin(startR)];\n    // 公式第二部分\n    var secondPart = matrixMul(matrix1, matrix2);\n    var matrixCxCy = [\n        matrixX1Y1[0] - secondPart[0],\n        matrixX1Y1[1] - secondPart[1]\n    ];\n    var matrix3 = [rx * Math.cos(endR), ry * Math.sin(endR)];\n    var firstPart = matrixMul(matrix1, matrix3);\n    var result = [matrixCxCy[0] + firstPart[0], matrixCxCy[1] + firstPart[1]];\n    return {\n        x: result[0],\n        y: result[1]\n    };\n}\n\nexport { arcToPathA as default };\n", "import { __values } from 'tslib';\nimport arcToPathA from './arcToA.js';\n\nfunction getVal(name, vars, scale) {\n    var result = 0;\n    if (name in vars) {\n        result = vars[name];\n    }\n    else {\n        result = parseInt(name, 10);\n        if (isNaN(result)) {\n            console.warn('var not found', name);\n            return 0;\n        }\n    }\n    if (scale) {\n        return result * scale;\n    }\n    else {\n        return result;\n    }\n}\n/**\n *\n * 转成 svg path 里的定义\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d\n */\nfunction generateDefines(path, vars, prevPoint) {\n    var e_1, _a;\n    var defines = path.defines;\n    var paths = [];\n    var w = path.w;\n    var h = path.h;\n    var wScale = 1;\n    var hScale = 1;\n    if (w) {\n        wScale = vars['w'] / w;\n    }\n    if (h) {\n        hScale = vars['h'] / h;\n    }\n    try {\n        for (var defines_1 = __values(defines), defines_1_1 = defines_1.next(); !defines_1_1.done; defines_1_1 = defines_1.next()) {\n            var def = defines_1_1.value;\n            switch (def.type) {\n                case 'moveTo': {\n                    var pt = def.pt;\n                    var x = getVal(pt.x, vars, wScale);\n                    var y = getVal(pt.y, vars, hScale);\n                    paths.push(\"M \".concat(x, \" \").concat(y));\n                    prevPoint.push({ x: x, y: y });\n                    break;\n                }\n                case 'lnTo': {\n                    var pt = def.pt;\n                    var x = getVal(pt.x, vars, wScale);\n                    var y = getVal(pt.y, vars, hScale);\n                    paths.push(\"L \".concat(x, \" \").concat(y));\n                    prevPoint.push({ x: x, y: y });\n                    break;\n                }\n                case 'arcTo': {\n                    var arc = def;\n                    var wR = getVal(arc.wR, vars, wScale);\n                    var hR = getVal(arc.hR, vars, hScale);\n                    var stAng = getVal(arc.stAng, vars);\n                    var swAng = getVal(arc.swAng, vars);\n                    var prev = {\n                        x: 0,\n                        y: 0\n                    };\n                    if (prevPoint.length > 0) {\n                        prev = prevPoint[prevPoint.length - 1];\n                    }\n                    var aPath = arcToPathA(wR, hR, stAng, swAng, prev.x, prev.y);\n                    paths.push(aPath.path);\n                    prevPoint.push({ x: aPath.end.x, y: aPath.end.y });\n                    break;\n                }\n                case 'quadBezTo': {\n                    var quadBezTo = def;\n                    if (quadBezTo.pts.length >= 2) {\n                        var pt1 = quadBezTo.pts[0];\n                        var pt2 = quadBezTo.pts[1];\n                        var x1 = getVal(pt1.x, vars, wScale);\n                        var y1 = getVal(pt1.y, vars, hScale);\n                        var x2 = getVal(pt2.x, vars, wScale);\n                        var y2 = getVal(pt2.y, vars, hScale);\n                        paths.push(\"Q \".concat(x1, \",\").concat(y1, \" \").concat(x2, \",\").concat(y2));\n                        if (quadBezTo.pts.length > 2) {\n                            var pt3 = quadBezTo.pts[2];\n                            var x3 = getVal(pt3.x, vars, wScale);\n                            var y3 = getVal(pt3.y, vars, hScale);\n                            paths.push(\"T \".concat(x3, \",\").concat(y3));\n                            prevPoint.push({ x: x3, y: y3 });\n                        }\n                        else {\n                            prevPoint.push({ x: x2, y: y2 });\n                        }\n                    }\n                    else {\n                        console.warn('quadBezTo pts length must large than 2', def);\n                    }\n                    break;\n                }\n                case 'cubicBezTo': {\n                    var cubicBezTo = def;\n                    if (cubicBezTo.pts.length === 3) {\n                        var pt1 = cubicBezTo.pts[0];\n                        var pt2 = cubicBezTo.pts[1];\n                        var pt3 = cubicBezTo.pts[2];\n                        var x1 = getVal(pt1.x, vars, wScale);\n                        var y1 = getVal(pt1.y, vars, hScale);\n                        var x2 = getVal(pt2.x, vars, wScale);\n                        var y2 = getVal(pt2.y, vars, hScale);\n                        var x3 = getVal(pt3.x, vars, wScale);\n                        var y3 = getVal(pt3.y, vars, hScale);\n                        paths.push(\"C \".concat(x1, \",\").concat(y1, \" \").concat(x2, \",\").concat(y2, \" \").concat(x3, \",\").concat(y3));\n                        prevPoint.push({ x: x3, y: y3 });\n                    }\n                    else {\n                        console.warn('cubicBezTo pts length must be 3', def);\n                    }\n                    break;\n                }\n                case 'close':\n                    paths.push('Z');\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (defines_1_1 && !defines_1_1.done && (_a = defines_1.return)) _a.call(defines_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return paths.join(' ');\n}\n\nexport { generateDefines };\n", "/**\n * 获取默认 val，20.1.10.56\n *\n * @param width\n * @param height\n */\nfunction presetVal(w, h) {\n    var ss = Math.min(w, h);\n    var ssd2 = ss / 6;\n    var ssd6 = ss / 6;\n    var ssd8 = ss / 8;\n    var ssd32 = ss / 32;\n    var ssd16 = ss / 16;\n    return {\n        't': 0,\n        '3cd4': 16200000,\n        '3cd8': 8100000,\n        '5cd8': 13500000,\n        '7cd8': 18900000,\n        'b': h,\n        'cd2': 10800000,\n        'cd4': 5400000,\n        'cd8': 2700000,\n        h: h,\n        'hd2': h / 2,\n        'hd3': h / 3,\n        'hd4': h / 4,\n        'hd6': h / 6,\n        'hd8': h / 8,\n        'l': 0,\n        'ls': Math.max(w, h),\n        'r': w,\n        ss: ss,\n        ssd2: ssd2,\n        ssd6: ssd6,\n        ssd8: ssd8,\n        ssd16: ssd16,\n        ssd32: ssd32,\n        'hc': w / 2,\n        'vc': h / 2,\n        w: w,\n        'wd2': w / 2,\n        'wd3': w / 3,\n        'wd4': w / 4,\n        'wd6': w / 6,\n        'wd8': w / 8,\n        'wd10': w / 10,\n        'wd16': w / 16,\n        'wd32': w / 32\n    };\n}\n\nexport { presetVal };\n", "import { __values } from 'tslib';\nimport { Color } from '../../../util/color.js';\nimport { createSVGElement } from '../../../util/dom.js';\nimport { evalFmla } from './formulas.js';\nimport { generateDefines } from './generateDefines.js';\nimport { presetVal } from './presetVal.js';\n\n/**\n * 将 shape 转成 svg 格式\n *\n * https://wiki.documentfoundation.org/Development/Improve_handles_of_DrawingML_shapes\n */\nfunction shapeToSVG(shape, avLst, shapePr, width, height, wpsStyle) {\n    var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n    var svg = createSVGElement('svg');\n    svg.style.display = 'block';\n    // 边框有时候会超过\n    // block 是为了避免被 text-align 影响\n    // z-index 是因为后面可能会有文字，避免遮挡\n    svg.setAttribute('style', 'display: block; overflow: visible; position: absolute; z-index: -1');\n    svg.setAttribute('width', width.toString() + 'px');\n    svg.setAttribute('height', height.toString() + 'px');\n    // 变量值\n    var vars = presetVal(width, height);\n    try {\n        // 先执行 avLst 定义初始变量\n        for (var _e = __values(shape.avLst || []), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var gd = _f.value;\n            evalFmla(gd.n, gd.f, vars);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    try {\n        // 自定义 avLst\n        for (var avLst_1 = __values(avLst), avLst_1_1 = avLst_1.next(); !avLst_1_1.done; avLst_1_1 = avLst_1.next()) {\n            var gd = avLst_1_1.value;\n            evalFmla(gd.n, gd.f, vars);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (avLst_1_1 && !avLst_1_1.done && (_b = avLst_1.return)) _b.call(avLst_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    try {\n        // 执行 gdLst\n        for (var _g = __values(shape.gdLst || []), _h = _g.next(); !_h.done; _h = _g.next()) {\n            var gd = _h.value;\n            evalFmla(gd.n, gd.f, vars);\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_h && !_h.done && (_c = _g.return)) _c.call(_g);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    var outline = shapePr.outline;\n    var prevPoint = [];\n    try {\n        for (var _j = __values(shape.pathLst || []), _k = _j.next(); !_k.done; _k = _j.next()) {\n            var path = _k.value;\n            var pathEl = createSVGElement('path');\n            var d = generateDefines(path, vars, prevPoint);\n            pathEl.setAttribute('d', d);\n            if (shapePr.fillColor) {\n                pathEl.setAttribute('fill', shapePr.fillColor);\n            }\n            else if (wpsStyle && wpsStyle.fillColor) {\n                pathEl.setAttribute('fill', wpsStyle.fillColor);\n            }\n            else {\n                pathEl.setAttribute('fill', 'none');\n            }\n            if (outline) {\n                if (outline.color) {\n                    pathEl.setAttribute('stroke', outline.color);\n                }\n                if (outline.width) {\n                    pathEl.setAttribute('stroke-width', outline.width);\n                }\n                if (outline.style === 'none') {\n                    pathEl.setAttribute('stroke', 'none');\n                }\n            }\n            else if (wpsStyle && wpsStyle.lineColor) {\n                pathEl.setAttribute('stroke', wpsStyle.lineColor);\n            }\n            else {\n                pathEl.setAttribute('stroke', 'none');\n            }\n            var fillColor = pathEl.getAttribute('fill');\n            if (fillColor && fillColor !== 'none') {\n                var color = new Color(fillColor);\n                var fillMode = path.fill;\n                var changeColor = '';\n                switch (fillMode) {\n                    // 这些值目前是瞎编的，官方规范里没说\n                    // http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/ST_PathFillMode.html\n                    case 'darken':\n                        changeColor = color.lumOff(-0.5).toHex();\n                        break;\n                    case 'darkenLess':\n                        changeColor = color.lumOff(-0.2).toHex();\n                        break;\n                    case 'lighten':\n                        changeColor = color.lumOff(0.5).toHex();\n                        break;\n                    case 'lightenLess':\n                        changeColor = color.lumOff(0.2).toHex();\n                        break;\n                }\n                if (changeColor) {\n                    pathEl.setAttribute('fill', changeColor);\n                }\n            }\n            if (path.fill === 'none') {\n                pathEl.setAttribute('fill', 'none');\n            }\n            if (path.stroke === false) {\n                pathEl.setAttribute('stroke', 'none');\n                if (!path.fill) {\n                    pathEl.setAttribute('fill', 'none');\n                }\n            }\n            if (shapePr.noFill) {\n                pathEl.setAttribute('fill', 'none');\n            }\n            svg.appendChild(pathEl);\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (_k && !_k.done && (_d = _j.return)) _d.call(_j);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return svg;\n}\n\nexport { shapeToSVG };\n", "import { presetShape } from '../openxml/drawing/presetShape.js';\nimport { shapeToSVG } from '../openxml/drawing/svg/shapeToSVG.js';\n\nfunction renderGeom(geom, shapePr, width, height, wpsStyle) {\n    if (geom.prst) {\n        var shape = presetShape[geom.prst];\n        if (shape) {\n            return shapeToSVG(shape, geom.avLst || [], shapePr, width, height, wpsStyle);\n        }\n    }\n    return null;\n}\n\nexport { renderGeom };\n", "import { shapeToSVG } from '../openxml/drawing/svg/shapeToSVG.js';\n\nfunction renderCustGeom(geom, shapePr, width, height, wpsStyle) {\n    if (geom.shape) {\n        return shapeToSVG(geom.shape, [], shapePr, width, height, wpsStyle);\n    }\n    return null;\n}\n\nexport { renderCustGeom };\n", "import { __values } from 'tslib';\nimport { Paragraph } from '../openxml/word/Paragraph.js';\nimport { appendChild, applyStyle } from '../util/dom.js';\nimport renderParagraph from './renderParagraph.js';\nimport renderTable from './renderTable.js';\nimport { Table } from '../openxml/word/Table.js';\nimport { renderGeom } from './renderGeom.js';\nimport { renderCustGeom } from './renderCustGeom.js';\n\n/**\n * 渲染图片\n */\nfunction renderPic(pic, word, wpg) {\n    var _a, _b, _c;\n    if (wpg === void 0) { wpg = null; }\n    var blip = (_a = pic.blipFill) === null || _a === void 0 ? void 0 : _a.blip;\n    if (blip && blip.src) {\n        var img = document.createElement('img');\n        img.style.position = 'relative';\n        img.alt = pic.alt || '';\n        img.src = blip.src;\n        if (pic.alt && word.renderOptions.enableVar) {\n            if (pic.altVar) {\n                img.src = pic.altVar;\n            }\n            else if (pic.alt.startsWith('{{')) {\n                var src = word.replaceText(pic.alt);\n                if (src) {\n                    img.src = src;\n                }\n            }\n        }\n        var xfrm = (_b = pic.spPr) === null || _b === void 0 ? void 0 : _b.xfrm;\n        if (xfrm) {\n            if (wpg) {\n                var rect = getRectInGroup(xfrm, (_c = wpg.spPr) === null || _c === void 0 ? void 0 : _c.xfrm);\n                if (rect) {\n                    img.style.position = 'absolute';\n                    img.style.left = rect.left + 'px';\n                    img.style.top = rect.top + 'px';\n                    img.style.width = rect.width + 'px';\n                    img.style.height = rect.height + 'px';\n                }\n            }\n            else {\n                var off = xfrm.off;\n                if (off) {\n                    img.style.left = off.x;\n                    img.style.top = off.y;\n                }\n                var ext = xfrm.ext;\n                if (ext) {\n                    img.style.width = ext.cx;\n                    img.style.height = ext.cy;\n                }\n            }\n            if (xfrm.rot) {\n                img.style.transform = \"rotate(\".concat(xfrm.rot, \"deg)\");\n            }\n        }\n        return img;\n    }\n    return null;\n}\n/**\n * 获取在 group 中的位置\n * @param xfrm 元素的位置定义\n *  @param groupXfrm 分组中的位置定义\n */\nfunction getRectInGroup(xfrm, groupXfrm) {\n    var off = xfrm.off;\n    var width = parseFloat(xfrm.ext.cx.replace('px', ''));\n    var height = parseFloat(xfrm.ext.cy.replace('px', ''));\n    if (off && groupXfrm.chOff && groupXfrm.ext && groupXfrm.chExt) {\n        // 先算缩放比\n        var scaleX = parseFloat(groupXfrm.ext.cx.replace('px', '')) /\n            parseFloat(groupXfrm.chExt.cx.replace('px', ''));\n        var scaleY = parseFloat(groupXfrm.ext.cy.replace('px', '')) /\n            parseFloat(groupXfrm.chExt.cy.replace('px', ''));\n        var groupOffX = parseFloat(groupXfrm.chOff.x.replace('px', ''));\n        var groupOffY = parseFloat(groupXfrm.chOff.y.replace('px', ''));\n        var x = parseFloat(off.x.replace('px', ''));\n        var y = parseFloat(off.y.replace('px', ''));\n        return {\n            left: scaleX * (x - groupOffX),\n            top: scaleY * (y - groupOffY),\n            width: scaleX * width,\n            height: scaleY * height\n        };\n    }\n    return null;\n}\n/**\n * 渲染文本框\n */\nfunction renderWps(word, container, wps, wpg) {\n    var e_1, _a;\n    var _b;\n    if (wpg === void 0) { wpg = null; }\n    var wpsStyle = wps.wpsStyle;\n    var spPr = wps.spPr;\n    applyStyle(container, wps.style);\n    if (wpsStyle === null || wpsStyle === void 0 ? void 0 : wpsStyle.fontColor) {\n        container.style.color = wpsStyle.fontColor;\n    }\n    if (spPr === null || spPr === void 0 ? void 0 : spPr.xfrm) {\n        var ext = spPr.xfrm.ext;\n        if (ext) {\n            var width = parseFloat(ext.cx.replace('px', ''));\n            var height = parseFloat(ext.cy.replace('px', ''));\n            // 在分组中的计算方式不一样，另外在分组中还需要绝对定位\n            // 这个计算方法在官方文档里没找到\n            if (wpg) {\n                container.style.position = 'absolute';\n                var rect = getRectInGroup(spPr.xfrm, (_b = wpg.spPr) === null || _b === void 0 ? void 0 : _b.xfrm);\n                if (rect) {\n                    container.style.left = rect.left + 'px';\n                    container.style.top = rect.top + 'px';\n                    width = rect.width;\n                    height = rect.height;\n                }\n            }\n            container.style.width = width + 'px';\n            container.style.height = height + 'px';\n            if (spPr.geom) {\n                appendChild(container, renderGeom(spPr.geom, spPr, width, height, wps.wpsStyle));\n            }\n            if (spPr.custGeom) {\n                appendChild(container, renderCustGeom(spPr.custGeom, spPr, width, height, wps.wpsStyle));\n            }\n        }\n        if (spPr.xfrm.rot) {\n            container.style.transform = \"rotate(\".concat(spPr.xfrm.rot, \"deg)\");\n        }\n    }\n    var txbxContent = wps.txbxContent;\n    if (txbxContent.length) {\n        // 为了实现垂直居中，将父容器改成 table 布局\n        var textContainer = document.createElement('div');\n        textContainer.dataset.name = 'textContainer';\n        container.style.display = 'table';\n        textContainer.style.display = 'table-cell';\n        textContainer.style.verticalAlign = 'middle';\n        if (wps.style && wps.style['vertical-align']) {\n            textContainer.style.verticalAlign = wps.style['vertical-align'];\n            // 容器的 vertical-align 需要去掉，虽然也不影响\n            container.style.verticalAlign = '';\n        }\n        appendChild(container, textContainer);\n        try {\n            for (var txbxContent_1 = __values(txbxContent), txbxContent_1_1 = txbxContent_1.next(); !txbxContent_1_1.done; txbxContent_1_1 = txbxContent_1.next()) {\n                var txbxContentChild = txbxContent_1_1.value;\n                if (txbxContentChild instanceof Paragraph) {\n                    appendChild(textContainer, renderParagraph(word, txbxContentChild));\n                }\n                else if (txbxContentChild instanceof Table) {\n                    appendChild(textContainer, renderTable(word, txbxContentChild));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (txbxContent_1_1 && !txbxContent_1_1.done && (_a = txbxContent_1.return)) _a.call(txbxContent_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n}\nfunction renderWpg(word, wpg) {\n    var e_2, _a, e_3, _b;\n    var _c, _d;\n    var container = document.createElement('div');\n    var wpgContainer = document.createElement('div');\n    var spPr = wpg.spPr;\n    if (spPr === null || spPr === void 0 ? void 0 : spPr.xfrm) {\n        var ext = (_c = spPr === null || spPr === void 0 ? void 0 : spPr.xfrm) === null || _c === void 0 ? void 0 : _c.ext;\n        if (ext) {\n            wpgContainer.style.width = ext.cx;\n            wpgContainer.style.height = ext.cy;\n        }\n        var rot = (_d = spPr === null || spPr === void 0 ? void 0 : spPr.xfrm) === null || _d === void 0 ? void 0 : _d.rot;\n        if (rot) {\n            wpgContainer.style.transform = \"rotate(\".concat(rot, \"deg)\");\n        }\n    }\n    try {\n        for (var _e = __values(wpg.wps), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var wps = _f.value;\n            var wpsContainer = document.createElement('div');\n            renderWps(word, wpsContainer, wps, wpg);\n            appendChild(wpgContainer, wpsContainer);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    try {\n        for (var _g = __values(wpg.wpg), _h = _g.next(); !_h.done; _h = _g.next()) {\n            var childWpg = _h.value;\n            appendChild(container, renderWpg(word, childWpg));\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    if (wpg.pic) {\n        appendChild(wpgContainer, renderPic(wpg.pic, word, wpg));\n    }\n    appendChild(container, wpgContainer);\n    return container;\n}\n/**\n * 渲染图片，目前只支持 picture\n * http://officeopenxml.com/drwOverview.php\n * @param inHeader，如果在 header 中，位置计算要特殊处理\n *\n */\nfunction renderDrawing(word, drawing, inHeader) {\n    var container = document.createElement('div');\n    if (drawing.position === 'inline') {\n        container.style.display = 'inline-block';\n    }\n    else if (drawing.position === 'anchor') ;\n    if (drawing.pic) {\n        appendChild(container, renderPic(drawing.pic, word));\n    }\n    if (drawing.relativeFromV === 'page') {\n        console.warn('暂不支持 drawing.relativeFromV === \"page\"');\n    }\n    applyStyle(container, drawing.containerStyle);\n    container.dataset.id = drawing.id || '';\n    container.dataset.name = drawing.name || '';\n    if (drawing.wps) {\n        renderWps(word, container, drawing.wps);\n    }\n    if (drawing.wpg) {\n        appendChild(container, renderWpg(word, drawing.wpg));\n    }\n    // 如果没内容就不渲染了，避免高度导致撑开父节点\n    if (container.children.length === 0) {\n        return null;\n    }\n    return container;\n}\n\nexport { renderDrawing };\n", "import { createElement } from '../util/dom.js';\n\n/**\n * 渲染 tab\n * 不支持 tabs 里的自定义宽度，因为要算渲染后的宽度，比较麻烦\n * http://officeopenxml.com/WPtab.php\n */\nfunction renderTab(word, tab, renderWidth) {\n    if (renderWidth === void 0) { renderWidth = false; }\n    var tabElement = createElement('span');\n    tabElement.style.display = 'inline-block';\n    tabElement.style.width = '2em';\n    tabElement.innerHTML = '&emsp;';\n    if (tab.leader === 'dot') {\n        tabElement.style.borderBottom = '1pt dotted';\n    }\n    if (renderWidth && tab.pos && (tab.type === 'start' || tab.type == 'left')) {\n        tabElement.style.width = tab.pos;\n    }\n    return tabElement;\n}\n\nexport { renderTab };\n", "/**\n * 老的 vml 格式，目前只支持图片\n */\nfunction renderPict(word, pict) {\n    if (pict.src) {\n        var img = document.createElement('img');\n        img.style.position = 'relative';\n        img.src = pict.src;\n        return img;\n    }\n    return null;\n}\n\nexport { renderPict };\n", "import { __values } from 'tslib';\nimport { createElement } from '../util/dom.js';\nimport renderRun from './renderRun.js';\n\n/**\n * 渲染 ruby 标签\n */\nfunction renderRuby(word, ruby) {\n    var e_1, _a, e_2, _b;\n    var rubyElement = createElement('ruby');\n    if (ruby.rubyBase) {\n        try {\n            for (var _c = __values(ruby.rubyBase.children), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var text = _d.value;\n                rubyElement.appendChild(renderRun(word, text));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (ruby.rt) {\n            // rp 是给不支持 ruby 的浏览器显示的\n            var rpStart = createElement('rp');\n            rpStart.innerText = '(';\n            rubyElement.appendChild(rpStart);\n            var rtElement = createElement('rt');\n            try {\n                for (var _e = __values(ruby.rt.children), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var text = _f.value;\n                    rtElement.appendChild(renderRun(word, text));\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            rubyElement.appendChild(rtElement);\n            var rpEnd = createElement('rp');\n            rpEnd.innerText = ')';\n            rubyElement.appendChild(rpEnd);\n        }\n    }\n    return rubyElement;\n}\n\nexport { renderRuby };\n", "import { __values } from 'tslib';\nimport { createElement, appendChild } from '../util/dom.js';\nimport { Run } from '../openxml/word/Run.js';\nimport renderRun from './renderRun.js';\n\n/**\n * 渲染链接\n */\nfunction renderHyperLink(word, hyperlink, paragraph) {\n    var e_1, _a;\n    var a = createElement('a');\n    if (hyperlink.relation) {\n        var rel = hyperlink.relation;\n        if (rel && rel.targetMode === 'External') {\n            a.href = rel.target;\n            a.target = '_blank';\n        }\n    }\n    if (hyperlink.anchor) {\n        a.href = '#' + hyperlink.anchor;\n    }\n    if (hyperlink.tooltip) {\n        a.title = hyperlink.tooltip;\n    }\n    try {\n        for (var _b = __values(hyperlink.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            if (child instanceof Run) {\n                var span = renderRun(word, child, paragraph);\n                appendChild(a, span);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return a;\n}\n\nexport { renderHyperLink };\n", "import { createElement } from '../util/dom.js';\n\n/**\n * 渲染书签\n */\nfunction renderBookmarkStart(word, bookmarkStart) {\n    var name = bookmarkStart.name;\n    if (name) {\n        var bookmark = createElement('a');\n        bookmark.name = name;\n        bookmark.id = name;\n        return bookmark;\n    }\n    return null;\n}\n\nexport { renderBookmarkStart };\n", "import { __values } from 'tslib';\nimport { appendChild } from '../util/dom.js';\nimport { Run } from '../openxml/word/Run.js';\nimport { BookmarkStart } from '../openxml/word/Bookmark.js';\nimport { Hyperlink } from '../openxml/word/Hyperlink.js';\nimport renderRun from './renderRun.js';\nimport { renderHyperLink } from './renderHyperLink.js';\nimport { renderBookmarkStart } from './renderBookmark.js';\n\n/**\n * 渲染 smart tag\n */\nfunction renderInlineText(word, inlineText, parent) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(inlineText.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            if (child instanceof Run) {\n                appendChild(parent, renderRun(word, child));\n            }\n            else if (child instanceof BookmarkStart) {\n                appendChild(parent, renderBookmarkStart(word, child));\n            }\n            else if (child instanceof Hyperlink) {\n                var hyperlink = renderHyperLink(word, child);\n                appendChild(parent, hyperlink);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n\nexport { renderInlineText as default };\n", "import { __values } from 'tslib';\nimport { createElement } from '../util/dom.js';\nimport renderInlineText from './renderInlineText.js';\n\n/**\n * 渲染字段指令，目前基本都没实现\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/Field%20definitions.html\n * http://officeopenxml.com/WPfieldInstructions.php\n */\nfunction renderInstrText(word, instrText) {\n    var e_1, _a;\n    var _b;\n    var text = instrText.text;\n    var span = createElement('span');\n    var fldSimples = (_b = word.currentParagraph) === null || _b === void 0 ? void 0 : _b.fldSimples;\n    if (fldSimples) {\n        try {\n            // 其实不知道这样做是不是对的\n            // 另外就是这里有很多指令还不支持 http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/FILENAME.html\n            for (var fldSimples_1 = __values(fldSimples), fldSimples_1_1 = fldSimples_1.next(); !fldSimples_1_1.done; fldSimples_1_1 = fldSimples_1.next()) {\n                var fldSimple = fldSimples_1_1.value;\n                if (fldSimple.instr === text.trim() ||\n                    text.startsWith(fldSimple.instr + ' ')) {\n                    renderInlineText(word, fldSimple.inlineText, span);\n                    break;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (fldSimples_1_1 && !fldSimples_1_1.done && (_a = fldSimples_1.return)) _a.call(fldSimples_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    return span;\n}\n\nexport { renderInstrText };\n", "import { createElement } from '../util/dom.js';\n\nfunction renderSym(word, sym) {\n    var span = createElement('span');\n    span.style.fontFamily = sym.font;\n    span.innerHTML = \"&#x\".concat(sym.char, \";\");\n    return span;\n}\n\nexport { renderSym };\n", "/**\n * 中英文间自动加空格，基于下面代码改的，去掉了 lodash 依赖\n * https://gist.github.com/wyl8899/e0f31068681023480e20c34f6b19a275\n */\n/* Partial implementation from https://zhuanlan.zhihu.com/p/33612593 */\n/* 标点 */\nvar punctuationRegex = /\\p{Punctuation}/u;\n/* 空格 */\nvar spaceRegex = /\\p{Separator}/u;\n/* CJK 字符，中日韩 */\nvar cjkRegex = /\\p{Script=Han}|\\p{Script=Katakana}|\\p{Script=Hiragana}|\\p{Script=Hangul}/u;\nvar shouldSpace = function (a, b) {\n    if (cjkRegex.test(a)) {\n        return !(punctuationRegex.test(b) ||\n            spaceRegex.test(b) ||\n            cjkRegex.test(b));\n    }\n    else {\n        return cjkRegex.test(b) && !punctuationRegex.test(a) && !spaceRegex.test(a);\n    }\n};\nvar join = function (parts, sepFunc) {\n    return parts.reduce(function (r, p, i) {\n        var sep = i !== 0 ? sepFunc(p, parts[i - 1]) : '';\n        return r + sep + p;\n    }, '');\n};\nvar cjkspace = function (strings) {\n    var filtered = strings.filter(function (c) { return c !== undefined && c !== ''; });\n    return join(filtered, function (a, b) { return (shouldSpace(a, b) ? ' ' : ''); });\n};\n\nexport { cjkspace };\n", "import { createElement } from '../util/dom.js';\n\nfunction renderSoftHyphen() {\n    var softHyphen = createElement('span');\n    softHyphen.innerHTML = '&shy;';\n    return softHyphen;\n}\n\nexport { renderSoftHyphen };\n", "import { createElement } from '../util/dom.js';\n\nfunction renderNoBreakHyphen() {\n    var softHyphen = createElement('span');\n    softHyphen.innerHTML = '&ndash;';\n    return softHyphen;\n}\n\nexport { renderNoBreakHyphen };\n", "import { createElement } from '../util/dom.js';\n\nfunction renderSeparator() {\n    var sep = createElement('hr');\n    sep.style.borderTop = '1pt solid #bbb';\n    return sep;\n}\n\nexport { renderSeparator };\n", "import { __values } from 'tslib';\nimport { renderBr } from './renderBr.js';\nimport { createElement, applyStyle, appendChild } from '../util/dom.js';\nimport { Text } from '../openxml/word/Run.js';\nimport { Break } from '../openxml/word/Break.js';\nimport { Drawing } from '../openxml/drawing/Drawing.js';\nimport { renderDrawing } from './renderDrawing.js';\nimport { setElementStyle } from './setElementStyle.js';\nimport { Tab } from '../openxml/word/Tab.js';\nimport { renderTab } from './renderTab.js';\nimport { renderPict } from './renderPict.js';\nimport { Pict } from '../openxml/word/Pict.js';\nimport { Ruby } from '../openxml/word/Ruby.js';\nimport { renderRuby } from './renderRuby.js';\nimport { InstrText } from '../openxml/word/InstrText.js';\nimport { renderInstrText } from './renderInstrText.js';\nimport { Sym } from '../openxml/word/Sym.js';\nimport { renderSym } from './renderSym.js';\nimport { cjkspace } from '../util/autoSpace.js';\nimport { renderSoftHyphen } from './renderSoftHyphen.js';\nimport { SoftHyphen } from '../openxml/word/SoftHyphen.js';\nimport { NoBreakHyphen } from '../openxml/word/NoBreakHyphen.js';\nimport { renderNoBreakHyphen } from './renderNoBreakHyphen.js';\nimport { Separator } from '../openxml/word/Separator.js';\nimport { renderSeparator } from './renderSeparator.js';\n\n/**\n * run 相关的 http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/Run_1.html\n */\nvar VARIABLE_CLASS_NAME = 'variable';\n/**\n * 对文本进行替换\n */\nfunction renderText(span, word, text, paragraph) {\n    var _a;\n    // 简单过滤一下提升性能\n    if (text.indexOf('{{') === -1) {\n        var finalText = void 0;\n        if ((_a = paragraph === null || paragraph === void 0 ? void 0 : paragraph.properties) === null || _a === void 0 ? void 0 : _a.autoSpace) {\n            finalText = cjkspace(text.split(''));\n        }\n        else {\n            finalText = text;\n        }\n        span.textContent = finalText;\n    }\n    else {\n        span.dataset.originText = text;\n        // 加个标识，后续可以通过它来查找哪些变量需要替换，这样就不用重新渲染整个文档了\n        span.classList.add(VARIABLE_CLASS_NAME);\n        span.textContent = word.replaceText(text);\n    }\n    // 大于两个空格才转成 nbsp\n    var html = span.innerHTML.split('  ').join('&nbsp;&nbsp;');\n    span.innerHTML = html;\n}\n/**\n * 更新文档里的所有变量\n */\nfunction updateVariableText(word) {\n    var spans = word.rootElement.querySelectorAll(\".\".concat(VARIABLE_CLASS_NAME));\n    for (var i = 0; i < spans.length; i++) {\n        var span = spans[i];\n        var text = span.dataset.originText || '';\n        span.textContent = word.replaceText(text);\n    }\n}\n/**\n * 渲染 run 节点\n *\n * @param inFldChar 是否在 complex field 里，预留功能，目前还不支持\n */\nfunction renderRun(word, run, paragraph, inFldChar, inHeader) {\n    var e_1, _a;\n    var _b, _c;\n    var span = createElement('span');\n    word.addClass(span, 'r');\n    setElementStyle(word, span, run.properties);\n    // run 不好通过 class 来设置 rStyle，所以单独支持一下\n    if ((_b = run.properties) === null || _b === void 0 ? void 0 : _b.rStyle) {\n        var style = word.getStyle(run.properties.rStyle);\n        if ((_c = style === null || style === void 0 ? void 0 : style.rPr) === null || _c === void 0 ? void 0 : _c.cssStyle) {\n            applyStyle(span, style.rPr.cssStyle);\n        }\n    }\n    if (run.children.length === 1 && run.children[0] instanceof Text) {\n        var text = run.children[0];\n        renderText(span, word, text.text, paragraph);\n    }\n    else {\n        try {\n            for (var _d = __values(run.children), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var child = _e.value;\n                if (child instanceof Text) {\n                    var newSpan = createElement('span');\n                    renderText(newSpan, word, child.text, paragraph);\n                    appendChild(span, newSpan);\n                }\n                else if (child instanceof Break) {\n                    var br = renderBr(word, child);\n                    appendChild(span, br);\n                }\n                else if (child instanceof Drawing) {\n                    appendChild(span, renderDrawing(word, child, inHeader));\n                }\n                else if (child instanceof Tab) {\n                    appendChild(span, renderTab(word, child));\n                }\n                else if (child instanceof Pict) {\n                    appendChild(span, renderPict(word, child));\n                }\n                else if (child instanceof Ruby) {\n                    appendChild(span, renderRuby(word, child));\n                }\n                else if (child instanceof InstrText) {\n                    appendChild(span, renderInstrText(word, child));\n                }\n                else if (child instanceof Sym) {\n                    appendChild(span, renderSym(word, child));\n                }\n                else if (child instanceof SoftHyphen) {\n                    appendChild(span, renderSoftHyphen());\n                }\n                else if (child instanceof NoBreakHyphen) {\n                    appendChild(span, renderNoBreakHyphen());\n                }\n                else if (child instanceof Separator) {\n                    appendChild(span, renderSeparator());\n                }\n                else {\n                    console.warn('unknown child', child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    return span;\n}\n\nexport { renderRun as default, updateVariableText };\n", "import { __assign } from 'tslib';\nimport { createElement } from '../util/dom.js';\nimport { setElementStyle } from './setElementStyle.js';\n\n/**\n * 整数转成罗马数字，来自 https://stackoverflow.com/a/32851198\n */\nfunction romanize(num) {\n    var lookup = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    var roman = '';\n    for (var key in lookup) {\n        while (num >= lookup[key]) {\n            roman += key;\n            num -= lookup[key];\n        }\n    }\n    return roman;\n}\n/**\n * 将数字转成列表格式，目前只支持少数几种格式，不支持的都直接返回数字\n */\nfunction convertNumToFormat(numFmt, num) {\n    switch (numFmt) {\n        case 'decimal':\n            return num.toString();\n        case 'lowerLetter':\n            return String.fromCharCode(96 + num);\n        case 'upperLetter':\n            return String.fromCharCode(64 + num);\n        case 'lowerRoman':\n            return romanize(num).toLowerCase();\n        case 'upperRoman':\n            return romanize(num).toUpperCase();\n        case 'bullet':\n            // 原本其实是用\n            return '&bull;';\n        default:\n            return num.toString();\n    }\n}\n/**\n * 渲染列表 http://officeopenxml.com/WPnumbering.php\n * 为了支持复杂场景，这里使用代码来直接生成内容\n */\nfunction renderNumbering(p, word, numPr) {\n    var numbering = word.numbering;\n    var numId = numPr.numId;\n    if (!numId) {\n        console.warn('renderNumbering: numId is empty');\n        return null;\n    }\n    if (!numbering) {\n        console.warn('renderNumbering: numbering is empty');\n        return null;\n    }\n    var num = numbering.nums[numId];\n    if (!num) {\n        console.warn('renderNumbering: num is empty');\n        return null;\n    }\n    var abstractNum = numbering.abstractNums[num.abstractNumId];\n    var lvls = abstractNum.lvls;\n    if (num.lvlOverride) {\n        lvls = __assign(__assign({}, lvls), num.lvlOverride.lvls);\n    }\n    var lvl = lvls[numPr.ilvl];\n    if (!lvl) {\n        console.warn('renderNumbering: lvl is empty');\n        return null;\n    }\n    var ilvl = numPr.ilvl;\n    var ilvlData = numbering.numData[numId];\n    // 还不支持 http://officeopenxml.com/WPnumbering-restart.php\n    if (!ilvlData[ilvl]) {\n        ilvlData[ilvl] = lvl.start;\n    }\n    else {\n        ilvlData[ilvl] += 1;\n        // 加一之后，将比它大的都清空，这样才能每个级别重置\n        for (var ilvIndex in ilvlData) {\n            if (parseInt(ilvIndex) > parseInt(ilvl)) {\n                ilvlData[ilvIndex] = 0;\n            }\n        }\n    }\n    var element = createElement('span');\n    var lvlText = lvl.lvlText;\n    // 格式化内容\n    var level = parseInt(ilvl);\n    // 获取每个层级的值\n    var levelNums = [];\n    for (var i = 0; i <= level; i++) {\n        var listNumber = ilvlData[i];\n        if (listNumber) {\n            var numFmt = lvls[i].numFmt;\n            var numText = convertNumToFormat(numFmt, listNumber);\n            // 强制数字显示 http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/isLgl.html\n            // http://officeopenxml.com/WPnumbering-isLgl.php\n            if (lvl.isLgl) {\n                numText = String(listNumber);\n            }\n            levelNums.push(numText);\n        }\n    }\n    for (var i = 0; i < levelNums.length; i++) {\n        var levelNum = levelNums[i];\n        lvlText = lvlText.replace(\"%\".concat(i + 1), levelNum);\n    }\n    // 这个 pPr 似乎是影响父级的\n    // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/pPr_6.html\n    // This element specifies the paragraph properties which shall be applied as part of a given numbering level within the parent numbering definition.\n    setElementStyle(word, p, lvl.pPr);\n    setElementStyle(word, element, lvl.rPr);\n    // 还不支持 lvlJc\n    // 还不支持 image\n    // http://officeopenxml.com/WPnumbering-imagesAsSymbol.php\n    if (lvl.numFmt !== 'bullet' || word.renderOptions.bulletUseFont) {\n        element.innerText = lvlText;\n    }\n    else {\n        // 如果没有字体只能尽可能模拟了\n        // 参考 https://www.w3schools.com/charsets/ref_utf_geometric.asp\n        var bulletText = '&bull;';\n        var unicodeString = lvlText.charCodeAt(0).toString(16).padStart(4, '0');\n        if (unicodeString === 'f06e') {\n            bulletText = '&#9632;';\n        }\n        else if (unicodeString === 'f075') {\n            bulletText = '&#9670;';\n        }\n        else if (unicodeString === 'f0d8') {\n            bulletText = '&#9658;';\n        }\n        element.innerHTML = bulletText;\n    }\n    if (lvl.suff === 'space') {\n        element.innerHTML += ' ';\n    }\n    else if (lvl.suff === 'tab') {\n        element.innerHTML += '&emsp;';\n    }\n    return element;\n}\n\nexport { renderNumbering };\n", "/**\n * 解析 xml\n */\nfunction parseXML(content) {\n    return new DOMParser().parseFromString(content, 'application/xml');\n}\n/**\n * 构建 xml 文本\n */\nfunction buildXML(doc) {\n    var serializer = new XMLSerializer();\n    return serializer.serializeToString(doc);\n}\n\nexport { buildXML, parseXML };\n", "import { parseXML } from '../../util/xml.js';\n\n/**\n * 手动从 OMML2MML.XSL 里拷贝过来的，避免打包工具依赖\n */\nvar xsl = parseXML(\"\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<xsl:stylesheet version=\\\"1.0\\\" xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\" xmlns:mml=\\\"http://www.w3.org/1998/Math/MathML\\\"\\n\\txmlns:m=\\\"http://schemas.openxmlformats.org/officeDocument/2006/math\\\">\\n  <xsl:output method=\\\"xml\\\" encoding=\\\"UTF-16\\\" />\\n\\n  <!-- %% Global Definitions -->\\n\\n  <!-- Every single unicode character that is recognized by OMML as an operator -->\\n  <xsl:variable name=\\\"sOperators\\\"\\n\\t\\tselect=\\\"concat(\\n          '&#x00A8;&#x0021;&#x0022;&#x0023;&#x0026;&#x0028;&#x0029;&#x002B;&#x002C;&#x002D;&#x002E;&#x002F;&#x003A;',\\n          '&#x003B;&#x003C;&#x003D;&#x003E;&#x003F;&#x0040;&#x005B;&#x005C;&#x005D;&#x005E;&#x005F;&#x0060;&#x007B;',\\n          '&#x007C;&#x007D;&#x007E;&#x00A1;&#x00A6;&#x00AC;&#x00AF;&#x00B0;&#x00B1;&#x00B2;&#x00B3;&#x00B4;&#x00B7;&#x00B9;&#x00BF;',\\n          '&#x00D7;&#x007E;&#x00F7;&#x02C7;&#x02D8;&#x02D9;&#x02DC;&#x02DD;&#x0300;&#x0301;&#x0302;&#x0303;&#x0304;&#x0305;&#x0306;&#x0307;&#x0308;&#x0309;',\\n          '&#x030A;&#x030B;&#x030C;&#x030D;&#x030E;&#x030F;&#x0310;&#x0311;&#x0312;&#x0313;&#x0314;&#x0315;',\\n          '&#x0316;&#x0317;&#x0318;&#x0319;&#x031A;&#x031B;&#x031C;&#x031D;&#x031E;&#x031F;&#x0320;&#x0321;',\\n          '&#x0322;&#x0323;&#x0324;&#x0325;&#x0326;&#x0327;&#x0328;&#x0329;&#x032A;&#x032B;&#x032C;&#x032D;',\\n          '&#x032E;&#x032F;&#x0330;&#x0331;&#x0332;&#x0333;&#x0334;&#x0335;&#x0336;&#x0337;&#x0338;&#x033F;',\\n          '&#x2000;&#x2001;&#x2002;&#x2003;&#x2004;&#x2005;&#x2006;&#x2009;&#x200A;&#x2010;&#x2012;&#x2013;',\\n          '&#x2014;&#x2016;&#x2020;&#x2021;&#x2022;&#x2024;&#x2025;&#x2026;&#x2032;&#x2033;&#x2034;&#x203C;',\\n          '&#x2040;&#x2044;&#x204E;&#x204F;&#x2050;&#x2057;&#x2061;&#x2062;&#x2063;&#x2070;&#x2074;&#x2075;',\\n          '&#x2076;&#x2077;&#x2078;&#x2079;&#x207A;&#x207B;&#x207C;&#x207D;&#x207E;&#x2080;&#x2081;&#x2082;',\\n          '&#x2083;&#x2084;&#x2085;&#x2086;&#x2087;&#x2088;&#x2089;&#x208A;&#x208B;&#x208C;&#x208D;&#x208E;',\\n          '&#x20D0;&#x20D1;&#x20D2;&#x20D3;&#x20D4;&#x20D5;&#x20D6;&#x20D7;&#x20D8;&#x20D9;&#x20DA;&#x20DB;',\\n          '&#x20DC;&#x20DD;&#x20DE;&#x20DF;&#x20E0;&#x20E1;&#x20E4;&#x20E5;&#x20E6;&#x20E7;&#x20E8;&#x20E9;',\\n          '&#x20EA;&#x2140;&#x2146;&#x2190;&#x2191;&#x2192;&#x2193;&#x2194;&#x2195;&#x2196;&#x2197;&#x2198;&#x2199;',\\n          '&#x219A;&#x219B;&#x219C;&#x219D;&#x219E;&#x219F;&#x21A0;&#x21A1;&#x21A2;&#x21A3;&#x21A4;&#x21A5;',\\n          '&#x21A6;&#x21A7;&#x21A8;&#x21A9;&#x21AA;&#x21AB;&#x21AC;&#x21AD;&#x21AE;&#x21AF;&#x21B0;&#x21B1;',\\n          '&#x21B2;&#x21B3;&#x21B6;&#x21B7;&#x21BA;&#x21BB;&#x21BC;&#x21BD;&#x21BE;&#x21BF;&#x21C0;&#x21C1;',\\n          '&#x21C2;&#x21C3;&#x21C4;&#x21C5;&#x21C6;&#x21C7;&#x21C8;&#x21C9;&#x21CA;&#x21CB;&#x21CC;&#x21CD;',\\n          '&#x21CE;&#x21CF;&#x21D0;&#x21D1;&#x21D2;&#x21D3;&#x21D4;&#x21D5;&#x21D6;&#x21D7;&#x21D8;&#x21D9;',\\n          '&#x21DA;&#x21DB;&#x21DC;&#x21DD;&#x21DE;&#x21DF;&#x21E0;&#x21E1;&#x21E2;&#x21E3;&#x21E4;&#x21E5;',\\n          '&#x21E6;&#x21E7;&#x21E8;&#x21E9;&#x21F3;&#x21F4;&#x21F5;&#x21F6;&#x21F7;&#x21F8;&#x21F9;&#x21FA;',\\n          '&#x21FB;&#x21FC;&#x21FD;&#x21FE;&#x21FF;&#x2200;&#x2201;&#x2202;&#x2203;&#x2204;&#x2206;&#x2207;',\\n          '&#x2208;&#x2209;&#x220A;&#x220B;&#x220C;&#x220D;&#x220F;&#x2210;&#x2211;&#x2212;&#x2213;&#x2214;',\\n          '&#x2215;&#x2216;&#x2217;&#x2218;&#x2219;&#x221A;&#x221B;&#x221C;&#x221D;&#x2223;&#x2224;&#x2225;',\\n          '&#x2226;&#x2227;&#x2228;&#x2229;&#x222A;&#x222B;&#x222C;&#x222D;&#x222E;&#x222F;&#x2230;&#x2231;',\\n          '&#x2232;&#x2233;&#x2234;&#x2235;&#x2236;&#x2237;&#x2238;&#x2239;&#x223A;&#x223B;&#x223C;&#x223D;',\\n          '&#x223E;&#x2240;&#x2241;&#x2242;&#x2243;&#x2244;&#x2245;&#x2246;&#x2247;&#x2248;&#x2249;&#x224A;',\\n          '&#x224B;&#x224C;&#x224D;&#x224E;&#x224F;&#x2250;&#x2251;&#x2252;&#x2253;&#x2254;&#x2255;&#x2256;',\\n          '&#x2257;&#x2258;&#x2259;&#x225A;&#x225B;&#x225C;&#x225D;&#x225E;&#x225F;&#x2260;&#x2261;&#x2262;',\\n          '&#x2263;&#x2264;&#x2265;&#x2266;&#x2267;&#x2268;&#x2269;&#x226A;&#x226B;&#x226C;&#x226D;&#x226E;',\\n          '&#x226F;&#x2270;&#x2271;&#x2272;&#x2273;&#x2274;&#x2275;&#x2276;&#x2277;&#x2278;&#x2279;&#x227A;',\\n          '&#x227B;&#x227C;&#x227D;&#x227E;&#x227F;&#x2280;&#x2281;&#x2282;&#x2283;&#x2284;&#x2285;&#x2286;',\\n          '&#x2287;&#x2288;&#x2289;&#x228A;&#x228B;&#x228C;&#x228D;&#x228E;&#x228F;&#x2290;&#x2291;&#x2292;',\\n          '&#x2293;&#x2294;&#x2295;&#x2296;&#x2297;&#x2298;&#x2299;&#x229A;&#x229B;&#x229C;&#x229D;&#x229E;',\\n          '&#x229F;&#x22A0;&#x22A1;&#x22A2;&#x22A3;&#x22A5;&#x22A6;&#x22A7;&#x22A8;&#x22A9;&#x22AA;&#x22AB;',\\n          '&#x22AC;&#x22AD;&#x22AE;&#x22AF;&#x22B0;&#x22B1;&#x22B2;&#x22B3;&#x22B4;&#x22B5;&#x22B6;&#x22B7;',\\n          '&#x22B8;&#x22B9;&#x22BA;&#x22BB;&#x22BC;&#x22BD;&#x22C0;&#x22C1;&#x22C2;&#x22C3;&#x22C4;&#x22C5;',\\n          '&#x22C6;&#x22C7;&#x22C8;&#x22C9;&#x22CA;&#x22CB;&#x22CC;&#x22CD;&#x22CE;&#x22CF;&#x22D0;&#x22D1;',\\n          '&#x22D2;&#x22D3;&#x22D4;&#x22D5;&#x22D6;&#x22D7;&#x22D8;&#x22D9;&#x22DA;&#x22DB;&#x22DC;&#x22DD;',\\n          '&#x22DE;&#x22DF;&#x22E0;&#x22E1;&#x22E2;&#x22E3;&#x22E4;&#x22E5;&#x22E6;&#x22E7;&#x22E8;&#x22E9;',\\n          '&#x22EA;&#x22EB;&#x22EC;&#x22ED;&#x22EE;&#x22EF;&#x22F0;&#x22F1;&#x22F2;&#x22F3;&#x22F4;&#x22F5;',\\n          '&#x22F6;&#x22F7;&#x22F8;&#x22F9;&#x22FA;&#x22FB;&#x22FC;&#x22FD;&#x22FE;&#x22FF;&#x2305;&#x2306;',\\n          '&#x2308;&#x2309;&#x230A;&#x230B;&#x231C;&#x231D;&#x231E;&#x231F;&#x2322;&#x2323;&#x2329;&#x232A;',\\n          '&#x233D;&#x233F;&#x23B0;&#x23B1;&#x23DC;&#x23DD;&#x23DE;&#x23DF;&#x23E0;&#x2502;&#x251C;&#x2524;',\\n          '&#x252C;&#x2534;&#x2581;&#x2588;&#x2592;&#x25A0;&#x25A1;&#x25AD;&#x25B2;&#x25B3;&#x25B4;&#x25B5;',\\n          '&#x25B6;&#x25B7;&#x25B8;&#x25B9;&#x25BC;&#x25BD;&#x25BE;&#x25BF;&#x25C0;&#x25C1;&#x25C2;&#x25C3;',\\n          '&#x25C4;&#x25C5;&#x25CA;&#x25CB;&#x25E6;&#x25EB;&#x25EC;&#x25F8;&#x25F9;&#x25FA;&#x25FB;&#x25FC;',\\n          '&#x25FD;&#x25FE;&#x25FF;&#x2605;&#x2606;&#x2772;&#x2773;&#x27D1;&#x27D2;&#x27D3;&#x27D4;&#x27D5;',\\n          '&#x27D6;&#x27D7;&#x27D8;&#x27D9;&#x27DA;&#x27DB;&#x27DC;&#x27DD;&#x27DE;&#x27DF;&#x27E0;&#x27E1;',\\n          '&#x27E2;&#x27E3;&#x27E4;&#x27E5;&#x27E6;&#x27E7;&#x27E8;&#x27E9;&#x27EA;&#x27EB;&#x27F0;&#x27F1;',\\n          '&#x27F2;&#x27F3;&#x27F4;&#x27F5;&#x27F6;&#x27F7;&#x27F8;&#x27F9;&#x27FA;&#x27FB;&#x27FC;&#x27FD;',\\n          '&#x27FE;&#x27FF;&#x2900;&#x2901;&#x2902;&#x2903;&#x2904;&#x2905;&#x2906;&#x2907;&#x2908;&#x2909;',\\n          '&#x290A;&#x290B;&#x290C;&#x290D;&#x290E;&#x290F;&#x2910;&#x2911;&#x2912;&#x2913;&#x2914;&#x2915;',\\n          '&#x2916;&#x2917;&#x2918;&#x2919;&#x291A;&#x291B;&#x291C;&#x291D;&#x291E;&#x291F;&#x2920;&#x2921;',\\n          '&#x2922;&#x2923;&#x2924;&#x2925;&#x2926;&#x2927;&#x2928;&#x2929;&#x292A;&#x292B;&#x292C;&#x292D;',\\n          '&#x292E;&#x292F;&#x2930;&#x2931;&#x2932;&#x2933;&#x2934;&#x2935;&#x2936;&#x2937;&#x2938;&#x2939;',\\n          '&#x293A;&#x293B;&#x293C;&#x293D;&#x293E;&#x293F;&#x2940;&#x2941;&#x2942;&#x2943;&#x2944;&#x2945;',\\n          '&#x2946;&#x2947;&#x2948;&#x2949;&#x294A;&#x294B;&#x294C;&#x294D;&#x294E;&#x294F;&#x2950;&#x2951;',\\n          '&#x2952;&#x2953;&#x2954;&#x2955;&#x2956;&#x2957;&#x2958;&#x2959;&#x295A;&#x295B;&#x295C;&#x295D;',\\n          '&#x295E;&#x295F;&#x2960;&#x2961;&#x2962;&#x2963;&#x2964;&#x2965;&#x2966;&#x2967;&#x2968;&#x2969;',\\n          '&#x296A;&#x296B;&#x296C;&#x296D;&#x296E;&#x296F;&#x2970;&#x2971;&#x2972;&#x2973;&#x2974;&#x2975;',\\n          '&#x2976;&#x2977;&#x2978;&#x2979;&#x297A;&#x297B;&#x297C;&#x297D;&#x297E;&#x297F;&#x2980;&#x2982;',\\n          '&#x2983;&#x2984;&#x2985;&#x2986;&#x2987;&#x2988;&#x2989;&#x298A;&#x298B;&#x298C;&#x298D;&#x298E;',\\n          '&#x298F;&#x2990;&#x2991;&#x2992;&#x2993;&#x2994;&#x2995;&#x2996;&#x2997;&#x2998;&#x2999;&#x299A;',\\n          '&#x29B6;&#x29B7;&#x29B8;&#x29B9;&#x29C0;&#x29C1;&#x29C4;&#x29C5;&#x29C6;&#x29C7;&#x29C8;&#x29CE;',\\n          '&#x29CF;&#x29D0;&#x29D1;&#x29D2;&#x29D3;&#x29D4;&#x29D5;&#x29D6;&#x29D7;&#x29D8;&#x29D9;&#x29DA;',\\n          '&#x29DB;&#x29DF;&#x29E1;&#x29E2;&#x29E3;&#x29E4;&#x29E5;&#x29E6;&#x29EB;&#x29F4;&#x29F5;&#x29F6;',\\n          '&#x29F7;&#x29F8;&#x29F9;&#x29FA;&#x29FB;&#x29FC;&#x29FD;&#x29FE;&#x29FF;&#x2A00;&#x2A01;&#x2A02;',\\n          '&#x2A03;&#x2A04;&#x2A05;&#x2A06;&#x2A07;&#x2A08;&#x2A09;&#x2A0A;&#x2A0B;&#x2A0C;&#x2A0D;&#x2A0E;',\\n          '&#x2A0F;&#x2A10;&#x2A11;&#x2A12;&#x2A13;&#x2A14;&#x2A15;&#x2A16;&#x2A17;&#x2A18;&#x2A19;&#x2A1A;',\\n          '&#x2A1B;&#x2A1C;&#x2A1D;&#x2A1E;&#x2A1F;&#x2A20;&#x2A21;&#x2A22;&#x2A23;&#x2A24;&#x2A25;&#x2A26;',\\n          '&#x2A27;&#x2A28;&#x2A29;&#x2A2A;&#x2A2B;&#x2A2C;&#x2A2D;&#x2A2E;&#x2A2F;&#x2A30;&#x2A31;&#x2A32;',\\n          '&#x2A33;&#x2A34;&#x2A35;&#x2A36;&#x2A37;&#x2A38;&#x2A39;&#x2A3A;&#x2A3B;&#x2A3C;&#x2A3D;&#x2A3E;',\\n          '&#x2A3F;&#x2A40;&#x2A41;&#x2A42;&#x2A43;&#x2A44;&#x2A45;&#x2A46;&#x2A47;&#x2A48;&#x2A49;&#x2A4A;',\\n          '&#x2A4B;&#x2A4C;&#x2A4D;&#x2A4E;&#x2A4F;&#x2A50;&#x2A51;&#x2A52;&#x2A53;&#x2A54;&#x2A55;&#x2A56;',\\n          '&#x2A57;&#x2A58;&#x2A59;&#x2A5A;&#x2A5B;&#x2A5C;&#x2A5D;&#x2A5E;&#x2A5F;&#x2A60;&#x2A61;&#x2A62;',\\n          '&#x2A63;&#x2A64;&#x2A65;&#x2A66;&#x2A67;&#x2A68;&#x2A69;&#x2A6A;&#x2A6B;&#x2A6C;&#x2A6D;&#x2A6E;',\\n          '&#x2A6F;&#x2A70;&#x2A71;&#x2A72;&#x2A73;&#x2A74;&#x2A75;&#x2A76;&#x2A77;&#x2A78;&#x2A79;&#x2A7A;',\\n          '&#x2A7B;&#x2A7C;&#x2A7D;&#x2A7E;&#x2A7F;&#x2A80;&#x2A81;&#x2A82;&#x2A83;&#x2A84;&#x2A85;&#x2A86;',\\n          '&#x2A87;&#x2A88;&#x2A89;&#x2A8A;&#x2A8B;&#x2A8C;&#x2A8D;&#x2A8E;&#x2A8F;&#x2A90;&#x2A91;&#x2A92;',\\n          '&#x2A93;&#x2A94;&#x2A95;&#x2A96;&#x2A97;&#x2A98;&#x2A99;&#x2A9A;&#x2A9B;&#x2A9C;&#x2A9D;&#x2A9E;',\\n          '&#x2A9F;&#x2AA0;&#x2AA1;&#x2AA2;&#x2AA3;&#x2AA4;&#x2AA5;&#x2AA6;&#x2AA7;&#x2AA8;&#x2AA9;&#x2AAA;',\\n          '&#x2AAB;&#x2AAC;&#x2AAD;&#x2AAE;&#x2AAF;&#x2AB0;&#x2AB1;&#x2AB2;&#x2AB3;&#x2AB4;&#x2AB5;&#x2AB6;',\\n          '&#x2AB7;&#x2AB8;&#x2AB9;&#x2ABA;&#x2ABB;&#x2ABC;&#x2ABD;&#x2ABE;&#x2ABF;&#x2AC0;&#x2AC1;&#x2AC2;',\\n          '&#x2AC3;&#x2AC4;&#x2AC5;&#x2AC6;&#x2AC7;&#x2AC8;&#x2AC9;&#x2ACA;&#x2ACB;&#x2ACC;&#x2ACD;&#x2ACE;',\\n          '&#x2ACF;&#x2AD0;&#x2AD1;&#x2AD2;&#x2AD3;&#x2AD4;&#x2AD5;&#x2AD6;&#x2AD7;&#x2AD8;&#x2AD9;&#x2ADA;',\\n          '&#x2ADB;&#x2ADC;&#x2ADD;&#x2ADE;&#x2ADF;&#x2AE0;&#x2AE2;&#x2AE3;&#x2AE4;&#x2AE5;&#x2AE6;&#x2AE7;',\\n          '&#x2AE8;&#x2AE9;&#x2AEA;&#x2AEB;&#x2AEC;&#x2AED;&#x2AEE;&#x2AEF;&#x2AF0;&#x2AF2;&#x2AF3;&#x2AF4;',\\n          '&#x2AF5;&#x2AF6;&#x2AF7;&#x2AF8;&#x2AF9;&#x2AFA;&#x2AFB;&#x2AFC;&#x2AFD;&#x2AFE;&#x2AFF;&#x2B04;',\\n          '&#x2B06;&#x2B07;&#x2B0C;&#x2B0D;&#x3014;&#x3015;&#x3016;&#x3017;&#x3018;&#x3019;&#xFF01;&#xFF06;',\\n          '&#xFF08;&#xFF09;&#xFF0B;&#xFF0C;&#xFF0D;&#xFF0E;&#xFF0F;&#xFF1A;&#xFF1B;&#xFF1C;&#xFF1D;&#xFF1E;',\\n          '&#xFF1F;&#xFF20;&#xFF3B;&#xFF3C;&#xFF3D;&#xFF3E;&#xFF3F;&#xFF5B;&#xFF5C;&#xFF5D;')\\\" />\\n\\n  <!-- A string of '-'s repeated exactly as many times as the operators above -->\\n  <xsl:variable name=\\\"sMinuses\\\">\\n    <xsl:call-template name=\\\"SRepeatChar\\\">\\n      <xsl:with-param name=\\\"cchRequired\\\" select=\\\"string-length($sOperators)\\\" />\\n      <xsl:with-param name=\\\"ch\\\" select=\\\"'-'\\\" />\\n    </xsl:call-template>\\n  </xsl:variable>\\n\\n  <!-- Every single unicode character that is recognized by OMML as a number -->\\n  <xsl:variable name=\\\"sNumbers\\\" select=\\\"'0123456789'\\\" />\\n\\n  <!-- A string of '0's repeated exactly as many times as the list of numbers above -->\\n  <xsl:variable name=\\\"sZeros\\\">\\n    <xsl:call-template name=\\\"SRepeatChar\\\">\\n      <xsl:with-param name=\\\"cchRequired\\\" select=\\\"string-length($sNumbers)\\\" />\\n      <xsl:with-param name=\\\"ch\\\" select=\\\"'0'\\\" />\\n    </xsl:call-template>\\n  </xsl:variable>\\n\\n  <!-- %%Template: SReplace\\n\\n\\t\\tReplace all occurences of sOrig in sInput with sReplacement\\n\\t\\tand return the resulting string. -->\\n  <xsl:template name=\\\"SReplace\\\">\\n    <xsl:param name=\\\"sInput\\\" />\\n    <xsl:param name=\\\"sOrig\\\" />\\n    <xsl:param name=\\\"sReplacement\\\" />\\n\\n    <xsl:choose>\\n      <xsl:when test=\\\"not(contains($sInput, $sOrig))\\\">\\n        <xsl:value-of select=\\\"$sInput\\\" />\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <xsl:variable name=\\\"sBefore\\\" select=\\\"substring-before($sInput, $sOrig)\\\" />\\n        <xsl:variable name=\\\"sAfter\\\" select=\\\"substring-after($sInput, $sOrig)\\\" />\\n        <xsl:variable name=\\\"sAfterProcessed\\\">\\n          <xsl:call-template name=\\\"SReplace\\\">\\n            <xsl:with-param name=\\\"sInput\\\" select=\\\"$sAfter\\\" />\\n            <xsl:with-param name=\\\"sOrig\\\" select=\\\"$sOrig\\\" />\\n            <xsl:with-param name=\\\"sReplacement\\\" select=\\\"$sReplacement\\\" />\\n          </xsl:call-template>\\n        </xsl:variable>\\n\\n        <xsl:value-of select=\\\"concat($sBefore, concat($sReplacement, $sAfterProcessed))\\\" />\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- Templates -->\\n  <xsl:template match=\\\"/\\\">\\n    <mml:math>\\n      <xsl:apply-templates select=\\\"*\\\" />\\n    </mml:math>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:borderBox\\\">\\n\\n    <!-- Get Lowercase versions of properties -->\\n    <xsl:variable name=\\\"sLowerCaseHideTop\\\" select=\\\"translate(m:borderBoxPr[last()]/m:hideTop[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseHideBot\\\" select=\\\"translate(m:borderBoxPr[last()]/m:hideBot[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseHideLeft\\\" select=\\\"translate(m:borderBoxPr[last()]/m:hideLeft[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseHideRight\\\" select=\\\"translate(m:borderBoxPr[last()]/m:hideRight[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseStrikeH\\\" select=\\\"translate(m:borderBoxPr[last()]/m:strikeH[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseStrikeV\\\" select=\\\"translate(m:borderBoxPr[last()]/m:strikeV[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseStrikeBLTR\\\" select=\\\"translate(m:borderBoxPr[last()]/m:strikeBLTR[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseStrikeTLBR\\\" select=\\\"translate(m:borderBoxPr[last()]/m:strikeTLBR[last()]/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"fHideTop\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseHideTop\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fHideBot\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseHideBot\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fHideLeft\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseHideLeft\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fHideRight\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseHideRight\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fStrikeH\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseStrikeH\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fStrikeV\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseStrikeV\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fStrikeBLTR\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseStrikeBLTR\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fStrikeTLBR\\\">\\n      <xsl:call-template name=\\\"ForceTrueStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseStrikeTLBR\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n\\n    <xsl:choose>\\n      <xsl:when test=\\\"$fHideTop=1\\n                      and $fHideBot=1\\n                      and $fHideLeft=1\\n                      and $fHideRight=1\\n                      and $fStrikeH=0\\n                      and $fStrikeV=0\\n                      and $fStrikeBLTR=0\\n                      and $fStrikeTLBR=0\\\">\\n        <mml:mrow>\\n          <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n        </mml:mrow>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <mml:menclose>\\n          <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n            <xsl:with-param name=\\\"fHideTop\\\" select=\\\"$fHideTop\\\" />\\n            <xsl:with-param name=\\\"fHideBot\\\" select=\\\"$fHideBot\\\" />\\n            <xsl:with-param name=\\\"fHideLeft\\\" select=\\\"$fHideLeft\\\" />\\n            <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n            <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n            <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n            <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n            <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n          </xsl:call-template>\\n          <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n        </mml:menclose>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"*\\\">\\n    <xsl:apply-templates select=\\\"*\\\" />\\n  </xsl:template>\\n\\n  <!--\\n      { Non-combining, Upper-combining, Lower-combining }\\n      {U+02D8, U+0306, U+032E}, // BREVE\\n      {U+00B8, U+0312, U+0327}, // CEDILLA\\n      {U+0060, U+0300, U+0316}, // GRAVE ACCENT\\n      {U+002D, U+0305, U+0332}, // HYPHEN-MINUS/OVERLINE\\n      {U+2212, U+0305, U+0332}, // MINUS SIGN/OVERLINE\\n      {U+002E, U+0305, U+0323}, // FULL STOP/DOT ABOVE\\n      {U+02D9, U+0307, U+0323}, // DOT ABOVE\\n      {U+02DD, U+030B, U+02DD}, // DOUBLE ACUTE ACCENT\\n      {U+00B4, U+0301, U+0317}, // ACUTE ACCENT\\n      {U+007E, U+0303, U+0330}, // TILDE\\n      {U+02DC, U+0303, U+0330}, // SMALL TILDE\\n      {U+00A8, U+0308, U+0324}, // DIAERESIS\\n      {U+02C7, U+030C, U+032C}, // CARON\\n      {U+005E, U+0302, U+032D}, // CIRCUMFLEX ACCENT\\n      {U+00AF, U+0305, ::::::}, // MACRON\\n      {U+005F, ::::::, U+0332}, // LOW LINE\\n      {U+2192, U+20D7, U+20EF}, // RIGHTWARDS ARROW\\n      {U+27F6, U+20D7, U+20EF}, // LONG RIGHTWARDS ARROW\\n      {U+2190, U+20D6, U+20EE}, // LEFT ARROW\\n  -->\\n  <xsl:template name=\\\"ToNonCombining\\\">\\n    <xsl:param name=\\\"ch\\\" />\\n    <xsl:choose>\\n      <!-- BREVE -->\\n      <xsl:when test=\\\"$ch='&#x0306;' or $ch='&#x032e;'\\\">&#x02D8;</xsl:when>\\n      <!-- CEDILLA -->\\n      <xsl:when test=\\\"$ch='&#x0312;' or $ch='&#x0327;'\\\">&#x00B8;</xsl:when>\\n      <!-- GRAVE ACCENT -->\\n      <xsl:when test=\\\"$ch='&#x0300;' or $ch='&#x0316;'\\\">&#x0060;</xsl:when>\\n      <!-- HYPHEN-MINUS/OVERLINE -->\\n      <xsl:when test=\\\"$ch='&#x0305;' or $ch='&#x0332;'\\\">&#x002D;</xsl:when>\\n      <!-- MINUS SIGN/OVERLINE -->\\n      <xsl:when test=\\\"$ch='&#x0305;' or $ch='&#x0332;'\\\">&#x2212;</xsl:when>\\n      <!-- FULL STOP/DOT ABOVE -->\\n      <xsl:when test=\\\"$ch='&#x0305;' or $ch='&#x0323;'\\\">&#x002E;</xsl:when>\\n      <!-- DOT ABOVE -->\\n      <xsl:when test=\\\"$ch='&#x0307;' or $ch='&#x0323;'\\\">&#x02D9;</xsl:when>\\n      <!-- DOUBLE ACUTE ACCENT -->\\n      <xsl:when test=\\\"$ch='&#x030B;' or $ch='&#x02DD;'\\\">&#x02DD;</xsl:when>\\n      <!-- ACUTE ACCENT -->\\n      <xsl:when test=\\\"$ch='&#x0301;' or $ch='&#x0317;'\\\">&#x00B4;</xsl:when>\\n      <!-- TILDE -->\\n      <xsl:when test=\\\"$ch='&#x0303;' or $ch='&#x0330;'\\\">&#x007E;</xsl:when>\\n      <!-- SMALL TILDE -->\\n      <xsl:when test=\\\"$ch='&#x0303;' or $ch='&#x0330;'\\\">&#x02DC;</xsl:when>\\n      <!-- DIAERESIS -->\\n      <xsl:when test=\\\"$ch='&#x0308;' or $ch='&#x0324;'\\\">&#x00A8;</xsl:when>\\n      <!-- CARON -->\\n      <xsl:when test=\\\"$ch='&#x030C;' or $ch='&#x032C;'\\\">&#x02C7;</xsl:when>\\n      <!-- CIRCUMFLEX ACCENT -->\\n      <xsl:when test=\\\"$ch='&#x0302;' or $ch='&#x032D;'\\\">&#x005E;</xsl:when>\\n      <!-- MACRON -->\\n      <xsl:when test=\\\"$ch='&#x0305;'                   \\\">&#x00AF;</xsl:when>\\n      <!-- LOW LINE -->\\n      <xsl:when test=\\\"                   $ch='&#x0332;'\\\">&#x005F;</xsl:when>\\n      <!-- RIGHTWARDS ARROW -->\\n      <xsl:when test=\\\"$ch='&#x20D7;' or $ch='&#x20EF;'\\\">&#x2192;</xsl:when>\\n      <!-- LONG RIGHTWARDS ARROW -->\\n      <xsl:when test=\\\"$ch='&#x20D7;' or $ch='&#x20EF;'\\\">&#x27F6;</xsl:when>\\n      <!-- LEFT ARROW -->\\n      <xsl:when test=\\\"$ch='&#x20D6;' or $ch='&#x20EE;'\\\">&#x2190;</xsl:when>\\n      <xsl:otherwise>\\n        <xsl:value-of select=\\\"$ch\\\"/>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:acc\\\">\\n    <mml:mover>\\n      <xsl:attribute name=\\\"accent\\\">true</xsl:attribute>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n      <xsl:variable name=\\\"chAcc\\\">\\n        <xsl:choose>\\n          <xsl:when test=\\\"not(m:accPr[last()]/m:chr)\\\">\\n            <xsl:value-of select=\\\"'&#x0302;'\\\" />\\n          </xsl:when>\\n          <xsl:otherwise>\\n            <xsl:value-of select=\\\"substring(m:accPr/m:chr/@m:val,1,1)\\\" />\\n          </xsl:otherwise>\\n        </xsl:choose>\\n      </xsl:variable>\\n      <xsl:variable name=\\\"chNonComb\\\">\\n        <xsl:call-template name=\\\"ToNonCombining\\\">\\n          <xsl:with-param name=\\\"ch\\\" select=\\\"$chAcc\\\" />\\n        </xsl:call-template>\\n      </xsl:variable>\\n      <xsl:choose>\\n        <xsl:when test=\\\"string-length($chAcc)=0\\\">\\n          <mml:mo/>\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:call-template name=\\\"ParseMt\\\">\\n            <xsl:with-param name=\\\"sToParse\\\" select=\\\"$chNonComb\\\" />\\n            <xsl:with-param name=\\\"scr\\\" select=\\\"m:e[1]/*/m:rPr[last()]/m:scr/@m:val\\\" />\\n            <xsl:with-param name=\\\"sty\\\" select=\\\"m:e[1]/*/m:rPr[last()]/m:sty/@m:val\\\" />\\n            <xsl:with-param name=\\\"nor\\\">\\n              <xsl:choose>\\n                <xsl:when test=\\\"count(m:e[1]/*/m:rPr[last()]/m:nor) = 0\\\">0</xsl:when>\\n                <xsl:otherwise>\\n                  <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n                    <xsl:with-param name=\\\"str\\\" select=\\\"translate(m:e[1]/*/m:rPr[last()]/m:nor/@m:val,\\n                                                                     'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                                 'abcdefghijklmnopqrstuvwxyz')\\\" />\\n                  </xsl:call-template>\\n                </xsl:otherwise>\\n              </xsl:choose>\\n            </xsl:with-param>\\n          </xsl:call-template>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </mml:mover>\\n  </xsl:template>\\n\\n  <xsl:template name=\\\"OutputScript\\\">\\n    <xsl:param name=\\\"ndCur\\\" select=\\\".\\\" />\\n    <xsl:choose>\\n      <!-- Only output contents of $ndCur if $ndCur exists\\n           and $ndCur has children -->\\n      <xsl:when test=\\\"count($ndCur/*) &gt; 0\\\">\\n        <mml:mrow>\\n          <xsl:apply-templates select=\\\"$ndCur\\\" />\\n        </mml:mrow>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <mml:none />\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:sPre\\\">\\n    <mml:mmultiscripts>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n      <mml:mprescripts />\\n      <xsl:call-template name=\\\"OutputScript\\\">\\n        <xsl:with-param name=\\\"ndCur\\\" select=\\\"m:sub[1]\\\"/>\\n      </xsl:call-template>\\n      <xsl:call-template name=\\\"OutputScript\\\">\\n        <xsl:with-param name=\\\"ndCur\\\" select=\\\"m:sup[1]\\\" />\\n      </xsl:call-template>\\n    </mml:mmultiscripts>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:m\\\">\\n    <mml:mtable>\\n      <xsl:call-template name=\\\"CreateMathMLMatrixAttr\\\">\\n        <xsl:with-param name=\\\"mcJc\\\" select=\\\"m:mPr[last()]/m:mcs/m:mc/m:mcPr[last()]/m:mcJc/@m:val\\\" />\\n      </xsl:call-template>\\n      <xsl:for-each select=\\\"m:mr\\\">\\n        <mml:mtr>\\n          <xsl:for-each select=\\\"m:e\\\">\\n            <mml:mtd>\\n              <xsl:apply-templates select=\\\".\\\" />\\n            </mml:mtd>\\n          </xsl:for-each>\\n        </mml:mtr>\\n      </xsl:for-each>\\n    </mml:mtable>\\n  </xsl:template>\\n\\n  <xsl:template name=\\\"CreateMathMLMatrixAttr\\\">\\n    <xsl:param name=\\\"mcJc\\\" />\\n    <xsl:variable name=\\\"sLowerCaseMcjc\\\" select=\\\"translate($mcJc, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                             'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:choose>\\n      <xsl:when test=\\\"$sLowerCaseMcjc='left'\\\">\\n        <xsl:attribute name=\\\"columnalign\\\">left</xsl:attribute>\\n      </xsl:when>\\n      <xsl:when test=\\\"$sLowerCaseMcjc='right'\\\">\\n        <xsl:attribute name=\\\"columnalign\\\">right</xsl:attribute>\\n      </xsl:when>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:phant\\\">\\n    <xsl:variable name=\\\"sLowerCaseZeroWidVal\\\" select=\\\"translate(m:phantPr[last()]/m:zeroWid[last()]/@m:val,\\n\\t\\t                                                       'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                       'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseZeroAscVal\\\" select=\\\"translate(m:phantPr[last()]/m:zeroAsc[last()]/@m:val,\\n\\t\\t                                                     'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                     'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseZeroDescVal\\\" select=\\\"translate(m:phantPr[last()]/m:zeroDesc[last()]/@m:val,\\n\\t\\t                                                     'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                     'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"sLowerCaseShowVal\\\" select=\\\"translate(m:phantPr[last()]/m:show[last()]/@m:val,\\n\\t\\t                                                     'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                     'abcdefghijklmnopqrstuvwxyz')\\\" />\\n\\n\\n    <!-- The following properties default to 'yes' unless the last value equals 'no' or there isn't any node for\\n         the property -->\\n\\n    <xsl:variable name=\\\"fZeroWid\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:phantPr[last()]/m:zeroWid[last()]) = 0\\\">0</xsl:when>\\n        <xsl:otherwise>\\n          <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n            <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseZeroWidVal\\\" />\\n          </xsl:call-template>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fZeroAsc\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:phantPr[last()]/m:zeroAsc[last()]) = 0\\\">0</xsl:when>\\n        <xsl:otherwise>\\n          <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n            <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseZeroAscVal\\\" />\\n          </xsl:call-template>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n    <xsl:variable name=\\\"fZeroDesc\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:phantPr[last()]/m:zeroDesc[last()]) = 0\\\">0</xsl:when>\\n        <xsl:otherwise>\\n          <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n            <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseZeroDescVal\\\" />\\n          </xsl:call-template>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n\\n    <!-- The show property defaults to 'on' unless there exists a show property and its value is 'off' -->\\n\\n    <xsl:variable name=\\\"fShow\\\">\\n      <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseShowVal\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n\\n    <xsl:choose>\\n      <!-- Show the phantom contents, therefore, just use mpadded. -->\\n      <xsl:when test=\\\"$fShow = 1\\\">\\n        <xsl:element name=\\\"mml:mpadded\\\">\\n          <xsl:call-template name=\\\"CreateMpaddedAttributes\\\">\\n            <xsl:with-param name=\\\"fZeroWid\\\" select=\\\"$fZeroWid\\\" />\\n            <xsl:with-param name=\\\"fZeroAsc\\\" select=\\\"$fZeroAsc\\\" />\\n            <xsl:with-param name=\\\"fZeroDesc\\\" select=\\\"$fZeroDesc\\\" />\\n          </xsl:call-template>\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:e\\\" />\\n          </mml:mrow>\\n        </xsl:element>\\n      </xsl:when>\\n      <!-- Don't show phantom contents, but don't smash anything, therefore, just\\n           use mphantom -->\\n      <xsl:when test=\\\"$fZeroWid=0 and $fZeroAsc=0 and $fZeroDesc=0\\\">\\n        <xsl:element name=\\\"mml:mphantom\\\">\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:e\\\" />\\n          </mml:mrow>\\n        </xsl:element>\\n      </xsl:when>\\n      <!-- Combination -->\\n      <xsl:otherwise>\\n        <xsl:element name=\\\"mml:mphantom\\\">\\n          <xsl:element name=\\\"mml:mpadded\\\">\\n            <xsl:call-template name=\\\"CreateMpaddedAttributes\\\">\\n              <xsl:with-param name=\\\"fZeroWid\\\" select=\\\"$fZeroWid\\\" />\\n              <xsl:with-param name=\\\"fZeroAsc\\\" select=\\\"$fZeroAsc\\\" />\\n              <xsl:with-param name=\\\"fZeroDesc\\\" select=\\\"$fZeroDesc\\\" />\\n            </xsl:call-template>\\n            <mml:mrow>\\n              <xsl:apply-templates select=\\\"m:e\\\" />\\n            </mml:mrow>\\n          </xsl:element>\\n        </xsl:element>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template name=\\\"CreateMpaddedAttributes\\\">\\n    <xsl:param name=\\\"fZeroWid\\\" />\\n    <xsl:param name=\\\"fZeroAsc\\\" />\\n    <xsl:param name=\\\"fZeroDesc\\\" />\\n\\n    <xsl:if test=\\\"$fZeroWid=1\\\">\\n      <xsl:attribute name=\\\"width\\\">0in</xsl:attribute>\\n    </xsl:if>\\n    <xsl:if test=\\\"$fZeroAsc=1\\\">\\n      <xsl:attribute name=\\\"height\\\">0in</xsl:attribute>\\n    </xsl:if>\\n    <xsl:if test=\\\"$fZeroDesc=1\\\">\\n      <xsl:attribute name=\\\"depth\\\">0in</xsl:attribute>\\n    </xsl:if>\\n  </xsl:template>\\n\\n\\n\\n  <xsl:template match=\\\"m:rad\\\">\\n    <xsl:variable name=\\\"fDegHide\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:radPr[last()]/m:degHide)=0\\\">0</xsl:when>\\n        <xsl:otherwise>\\n          <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n            <xsl:with-param name=\\\"str\\\" select=\\\"translate(m:radPr[last()]/m:degHide/@m:val,\\n\\t\\t                                                          'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                          'abcdefghijklmnopqrstuvwxyz')\\\" />\\n          </xsl:call-template>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n    <xsl:choose>\\n      <xsl:when test=\\\"$fDegHide=1\\\">\\n        <mml:msqrt>\\n          <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n        </mml:msqrt>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <mml:mroot>\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n          </mml:mrow>\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:deg[1]\\\" />\\n          </mml:mrow>\\n        </mml:mroot>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template name=\\\"OutputNaryMo\\\">\\n    <xsl:param name=\\\"ndCur\\\" select=\\\".\\\" />\\n    <xsl:param name=\\\"fGrow\\\" select=\\\"0\\\" />\\n    <mml:mo>\\n      <xsl:choose>\\n        <xsl:when test=\\\"$fGrow=1\\\">\\n          <xsl:attribute name=\\\"stretchy\\\">true</xsl:attribute>\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:attribute name=\\\"stretchy\\\">false</xsl:attribute>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n      <xsl:choose>\\n        <xsl:when test=\\\"not($ndCur/m:naryPr[last()]/m:chr/@m:val) or\\n\\t\\t\\t                            $ndCur/m:naryPr[last()]/m:chr/@m:val=''\\\">\\n          <xsl:text>&#x222b;</xsl:text>\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:value-of select=\\\"$ndCur/m:naryPr[last()]/m:chr/@m:val\\\" />\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </mml:mo>\\n  </xsl:template>\\n\\n  <!-- %%Template match m:nary\\n\\t\\tProcess an n-ary.\\n\\n\\t\\tDecides, based on which arguments are supplied, between\\n\\t\\tusing an mo, msup, msub, or msubsup for the n-ary operator\\n\\t-->\\n  <xsl:template match=\\\"m:nary\\\">\\n    <xsl:variable name=\\\"sLowerCaseSubHide\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:naryPr[last()]/m:subHide) = 0\\\">\\n          <xsl:text>off</xsl:text>\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:value-of select=\\\"translate(m:naryPr[last()]/m:subHide/@m:val,\\n\\t                                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t                                  'abcdefghijklmnopqrstuvwxyz')\\\" />\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n\\n    <xsl:variable name=\\\"sLowerCaseSupHide\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:naryPr[last()]/m:supHide) = 0\\\">\\n          <xsl:text>off</xsl:text>\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:value-of select=\\\"translate(m:naryPr[last()]/m:supHide/@m:val,\\n\\t                                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t                                  'abcdefghijklmnopqrstuvwxyz')\\\" />\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n\\n    <xsl:variable name=\\\"sLowerCaseLimLoc\\\">\\n      <xsl:value-of select=\\\"translate(m:naryPr[last()]/m:limLoc/@m:val,\\n\\t                                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t                                  'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    </xsl:variable>\\n\\n    <xsl:variable name=\\\"sLowerGrow\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:naryPr[last()]/m:grow)=0\\\">off</xsl:when>\\n        <xsl:otherwise>\\n          <xsl:value-of select=\\\"translate(m:naryPr[last()]/m:grow/@m:val,\\n\\t                                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t                                  'abcdefghijklmnopqrstuvwxyz')\\\" />\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n\\n    <xsl:variable name=\\\"fLimLocSubSup\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(m:naryPr[last()]/m:limLoc)=0 or $sLowerCaseLimLoc='subsup'\\\">1</xsl:when>\\n        <xsl:otherwise>0</xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n\\n    <xsl:variable name=\\\"fGrow\\\">\\n      <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerGrow\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n\\n    <xsl:variable name=\\\"fSupHide\\\">\\n      <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseSupHide\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n\\n    <xsl:variable name=\\\"fSubHide\\\">\\n      <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$sLowerCaseSubHide\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n\\n    <mml:mrow>\\n      <xsl:choose>\\n        <xsl:when test=\\\"$fSupHide=1 and $fSubHide=1\\\">\\n          <xsl:call-template name=\\\"OutputNaryMo\\\">\\n            <xsl:with-param name=\\\"ndCur\\\" select=\\\".\\\" />\\n            <xsl:with-param name=\\\"fGrow\\\" select=\\\"$fGrow\\\" />\\n          </xsl:call-template>\\n        </xsl:when>\\n        <xsl:when test=\\\"$fSubHide=1\\\">\\n          <xsl:choose>\\n            <xsl:when test=\\\"$fLimLocSubSup=1\\\">\\n              <mml:msup>\\n                <xsl:call-template name=\\\"OutputNaryMo\\\">\\n                  <xsl:with-param name=\\\"ndCur\\\" select=\\\".\\\" />\\n                  <xsl:with-param name=\\\"fGrow\\\" select=\\\"$fGrow\\\" />\\n                </xsl:call-template>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sup[1]\\\" />\\n                </mml:mrow>\\n              </mml:msup>\\n            </xsl:when>\\n            <xsl:otherwise>\\n              <mml:mover>\\n                <xsl:call-template name=\\\"OutputNaryMo\\\">\\n                  <xsl:with-param name=\\\"ndCur\\\" select=\\\".\\\" />\\n                  <xsl:with-param name=\\\"fGrow\\\" select=\\\"$fGrow\\\" />\\n                </xsl:call-template>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sup[1]\\\" />\\n                </mml:mrow>\\n              </mml:mover>\\n            </xsl:otherwise>\\n          </xsl:choose>\\n        </xsl:when>\\n        <xsl:when test=\\\"$fSupHide=1\\\">\\n          <xsl:choose>\\n            <xsl:when test=\\\"$fLimLocSubSup=1\\\">\\n              <mml:msub>\\n                <xsl:call-template name=\\\"OutputNaryMo\\\">\\n                  <xsl:with-param name=\\\"ndCur\\\" select=\\\".\\\" />\\n                  <xsl:with-param name=\\\"fGrow\\\" select=\\\"$fGrow\\\" />\\n                </xsl:call-template>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sub[1]\\\" />\\n                </mml:mrow>\\n              </mml:msub>\\n            </xsl:when>\\n            <xsl:otherwise>\\n              <mml:munder>\\n                <xsl:call-template name=\\\"OutputNaryMo\\\">\\n                  <xsl:with-param name=\\\"ndCur\\\" select=\\\".\\\" />\\n                  <xsl:with-param name=\\\"fGrow\\\" select=\\\"$fGrow\\\" />\\n                </xsl:call-template>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sub[1]\\\" />\\n                </mml:mrow>\\n              </mml:munder>\\n            </xsl:otherwise>\\n          </xsl:choose>\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:choose>\\n            <xsl:when test=\\\"$fLimLocSubSup=1\\\">\\n              <mml:msubsup>\\n                <xsl:call-template name=\\\"OutputNaryMo\\\">\\n                  <xsl:with-param name=\\\"ndCur\\\" select=\\\".\\\" />\\n                  <xsl:with-param name=\\\"fGrow\\\" select=\\\"$fGrow\\\" />\\n                </xsl:call-template>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sub[1]\\\" />\\n                </mml:mrow>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sup[1]\\\" />\\n                </mml:mrow>\\n              </mml:msubsup>\\n            </xsl:when>\\n            <xsl:otherwise>\\n              <mml:munderover>\\n                <xsl:call-template name=\\\"OutputNaryMo\\\">\\n                  <xsl:with-param name=\\\"ndCur\\\" select=\\\".\\\" />\\n                  <xsl:with-param name=\\\"fGrow\\\" select=\\\"$fGrow\\\" />\\n                </xsl:call-template>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sub[1]\\\" />\\n                </mml:mrow>\\n                <mml:mrow>\\n                  <xsl:apply-templates select=\\\"m:sup[1]\\\" />\\n                </mml:mrow>\\n              </mml:munderover>\\n            </xsl:otherwise>\\n          </xsl:choose>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n    </mml:mrow>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:limLow\\\">\\n    <mml:munder>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:lim[1]\\\" />\\n      </mml:mrow>\\n    </mml:munder>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:limUpp\\\">\\n    <mml:mover>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:lim[1]\\\" />\\n      </mml:mrow>\\n    </mml:mover>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:sSub\\\">\\n    <mml:msub>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:sub[1]\\\" />\\n      </mml:mrow>\\n    </mml:msub>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:sSup\\\">\\n    <mml:msup>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:sup[1]\\\" />\\n      </mml:mrow>\\n    </mml:msup>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:sSubSup\\\">\\n    <mml:msubsup>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n      </mml:mrow>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:sub[1]\\\" />\\n      </mml:mrow>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:sup[1]\\\" />\\n      </mml:mrow>\\n    </mml:msubsup>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:groupChr\\\">\\n    <xsl:variable name=\\\"ndLastGroupChrPr\\\" select=\\\"m:groupChrPr[last()]\\\" />\\n    <xsl:variable name=\\\"sLowerCasePos\\\" select=\\\"translate($ndLastGroupChrPr/m:pos/@m:val,\\n\\t\\t                                                     'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                     'abcdefghijklmnopqrstuvwxyz')\\\" />\\n\\n    <xsl:variable name=\\\"sLowerCaseVertJc\\\" select=\\\"translate($ndLastGroupChrPr/m:vertJc/@m:val,\\n\\t\\t                                                     'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                     'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:variable name=\\\"ndLastChr\\\" select=\\\"$ndLastGroupChrPr/m:chr\\\" />\\n\\n    <xsl:variable name=\\\"chr\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"$ndLastChr and (not($ndLastChr/@m:val) or string-length($ndLastChr/@m:val) = 0)\\\"></xsl:when>\\n        <xsl:when test=\\\"string-length($ndLastChr/@m:val) &gt;= 1\\\">\\n          <xsl:value-of select=\\\"substring($ndLastChr/@m:val,1,1)\\\" />\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:text>&#x023DF;</xsl:text>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n    <xsl:choose>\\n      <xsl:when test=\\\"$sLowerCasePos = 'top'\\\">\\n        <xsl:choose>\\n          <xsl:when test=\\\"$sLowerCaseVertJc = 'bot'\\\">\\n            <mml:mover accent=\\\"false\\\">\\n              <mml:mrow>\\n                <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n              </mml:mrow>\\n              <mml:mo>\\n                <xsl:value-of select=\\\"$chr\\\" />\\n              </mml:mo>\\n            </mml:mover>\\n          </xsl:when>\\n          <xsl:otherwise>\\n            <mml:munder accentunder=\\\"false\\\">\\n              <mml:mo>\\n                <xsl:value-of select=\\\"$chr\\\" />\\n              </mml:mo>\\n              <mml:mrow>\\n                <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n              </mml:mrow>\\n            </mml:munder>\\n          </xsl:otherwise>\\n        </xsl:choose>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <xsl:choose>\\n          <xsl:when test=\\\"$sLowerCaseVertJc = 'bot'\\\">\\n            <mml:mover accent=\\\"false\\\">\\n              <mml:mo>\\n                <xsl:value-of select=\\\"$chr\\\" />\\n              </mml:mo>\\n              <mml:mrow>\\n                <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n              </mml:mrow>\\n            </mml:mover>\\n          </xsl:when>\\n          <xsl:otherwise>\\n            <mml:munder accentunder=\\\"false\\\">\\n              <mml:mrow>\\n                <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n              </mml:mrow>\\n              <mml:mo>\\n                <xsl:value-of select=\\\"$chr\\\" />\\n              </mml:mo>\\n            </mml:munder>\\n          </xsl:otherwise>\\n        </xsl:choose>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template name=\\\"fName\\\">\\n    <xsl:for-each select=\\\"m:fName/*\\\">\\n      <xsl:apply-templates select=\\\".\\\" />\\n    </xsl:for-each>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:func\\\">\\n    <mml:mrow>\\n      <mml:mrow>\\n        <xsl:call-template name=\\\"fName\\\" />\\n      </mml:mrow>\\n      <mml:mo>&#x02061;</mml:mo>\\n      <mml:mrow>\\n        <xsl:apply-templates select=\\\"m:e\\\" />\\n      </mml:mrow>\\n    </mml:mrow>\\n  </xsl:template>\\n\\n  <!-- %%Template: match m:f\\n\\n\\t\\tm:f maps directly to mfrac.\\n\\t-->\\n  <xsl:template match=\\\"m:f\\\">\\n    <xsl:variable name=\\\"sLowerCaseType\\\" select=\\\"translate(m:fPr[last()]/m:type/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')\\\" />\\n    <xsl:choose>\\n      <xsl:when test=\\\"$sLowerCaseType='lin'\\\">\\n        <mml:mrow>\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:num[1]\\\" />\\n          </mml:mrow>\\n          <mml:mo>/</mml:mo>\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:den[1]\\\" />\\n          </mml:mrow>\\n        </mml:mrow>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <mml:mfrac>\\n          <xsl:call-template name=\\\"CreateMathMLFracProp\\\">\\n            <xsl:with-param name=\\\"type\\\" select=\\\"$sLowerCaseType\\\" />\\n          </xsl:call-template>\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:num[1]\\\" />\\n          </mml:mrow>\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:den[1]\\\" />\\n          </mml:mrow>\\n        </mml:mfrac>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n\\n  </xsl:template>\\n\\n\\n  <!-- %%Template: CreateMathMLFracProp\\n\\n\\t\\t\\tMake fraction properties based on supplied parameters.\\n\\t\\t\\tOMML differentiates between a linear fraction and a skewed\\n\\t\\t\\tone. For MathML, we write both as bevelled.\\n\\t-->\\n  <xsl:template name=\\\"CreateMathMLFracProp\\\">\\n    <xsl:param name=\\\"type\\\" />\\n    <xsl:variable name=\\\"sLowerCaseType\\\" select=\\\"translate($type, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')\\\" />\\n\\n    <xsl:if test=\\\"$sLowerCaseType='skw' or $sLowerCaseType='lin'\\\">\\n      <xsl:attribute name=\\\"bevelled\\\">true</xsl:attribute>\\n    </xsl:if>\\n    <xsl:if test=\\\"$sLowerCaseType='nobar'\\\">\\n      <xsl:attribute name=\\\"linethickness\\\">0pt</xsl:attribute>\\n    </xsl:if>\\n    <xsl:choose>\\n      <xsl:when test=\\\"sLowerCaseNumJc='right'\\\">\\n        <xsl:attribute name=\\\"numalign\\\">right</xsl:attribute>\\n      </xsl:when>\\n      <xsl:when test=\\\"sLowerCaseNumJc='left'\\\">\\n        <xsl:attribute name=\\\"numalign\\\">left</xsl:attribute>\\n      </xsl:when>\\n    </xsl:choose>\\n    <xsl:choose>\\n      <xsl:when test=\\\"sLowerCaseDenJc='right'\\\">\\n        <xsl:attribute name=\\\"numalign\\\">right</xsl:attribute>\\n      </xsl:when>\\n      <xsl:when test=\\\"sLowerCaseDenJc='left'\\\">\\n        <xsl:attribute name=\\\"numalign\\\">left</xsl:attribute>\\n      </xsl:when>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- %%Template: match m:e | m:den | m:num | m:lim | m:sup | m:sub\\n\\n\\t\\tThese element delinate parts of an expression (like the numerator).  -->\\n  <xsl:template match=\\\"m:e | m:den | m:num | m:lim | m:sup | m:sub\\\">\\n    <xsl:choose>\\n\\n      <!-- If there is no scriptLevel specified, just call through -->\\n      <xsl:when test=\\\"not(m:argPr[last()]/m:scrLvl/@m:val)\\\">\\n        <xsl:apply-templates select=\\\"*\\\" />\\n      </xsl:when>\\n\\n      <!-- Otherwise, create an mstyle and set the script level -->\\n      <xsl:otherwise>\\n        <mml:mstyle>\\n          <xsl:attribute name=\\\"scriptlevel\\\">\\n            <xsl:value-of select=\\\"m:argPr[last()]/m:scrLvl/@m:val\\\" />\\n          </xsl:attribute>\\n          <xsl:apply-templates select=\\\"*\\\" />\\n        </mml:mstyle>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:bar\\\">\\n    <xsl:variable name=\\\"sLowerCasePos\\\" select=\\\"translate(m:barPr/m:pos/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                                       'abcdefghijklmnopqrstuvwxyz')\\\" />\\n\\n    <xsl:variable name=\\\"fTop\\\">\\n\\n      <xsl:choose>\\n        <xsl:when test=\\\"$sLowerCasePos='top'\\\">1</xsl:when>\\n        <xsl:otherwise>0</xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n    <xsl:choose>\\n      <xsl:when test=\\\"$fTop=1\\\">\\n        <mml:mover accent=\\\"false\\\">\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n          </mml:mrow>\\n          <mml:mo>\\n            <xsl:text>&#x00AF;</xsl:text>\\n          </mml:mo>\\n        </mml:mover>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <mml:munder underaccent=\\\"false\\\">\\n          <mml:mrow>\\n            <xsl:apply-templates select=\\\"m:e[1]\\\" />\\n          </mml:mrow>\\n          <mml:mo>\\n            <xsl:text>&#x005F;</xsl:text>\\n          </mml:mo>\\n        </mml:munder>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- %%Template match m:d\\n\\n\\t\\tProcess a delimiter.\\n\\t-->\\n  <xsl:template match=\\\"m:d\\\">\\n    <mml:mfenced>\\n      <!-- open: default is '(' for both OMML and MathML -->\\n      <xsl:if test=\\\"m:dPr[1]/m:begChr/@m:val and not(m:dPr[1]/m:begChr/@m:val ='(')\\\">\\n        <xsl:attribute name=\\\"open\\\">\\n          <xsl:value-of select=\\\"m:dPr[1]/m:begChr/@m:val\\\" />\\n        </xsl:attribute>\\n      </xsl:if>\\n\\n      <!-- close: default is ')' for both OMML and MathML -->\\n      <xsl:if test=\\\"m:dPr[1]/m:endChr/@m:val and not(m:dPr[1]/m:endChr/@m:val =')')\\\">\\n        <xsl:attribute name=\\\"close\\\">\\n          <xsl:value-of select=\\\"m:dPr[1]/m:endChr/@m:val\\\" />\\n        </xsl:attribute>\\n      </xsl:if>\\n\\n      <!-- separator: the default is ',' for MathML, and '|' for OMML -->\\n      <xsl:choose>\\n        <!-- Matches MathML default. Write nothing -->\\n        <xsl:when test=\\\"m:dPr[1]/m:sepChr/@m:val = ','\\\" />\\n\\n        <!-- OMML default: | -->\\n        <xsl:when test=\\\"not(m:dPr[1]/m:sepChr/@m:val)\\\">\\n          <xsl:attribute name=\\\"separators\\\">\\n            <xsl:value-of select=\\\"'|'\\\" />\\n          </xsl:attribute>\\n        </xsl:when>\\n\\n        <xsl:otherwise>\\n          <xsl:attribute name=\\\"separators\\\">\\n            <xsl:value-of select=\\\"m:dPr[1]/m:sepChr/@m:val\\\" />\\n          </xsl:attribute>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n\\n      <!-- now write all the children. Put each one into an mrow\\n\\t\\t\\tjust in case it produces multiple runs, etc -->\\n      <xsl:for-each select=\\\"m:e\\\">\\n        <mml:mrow>\\n          <xsl:apply-templates select=\\\".\\\" />\\n        </mml:mrow>\\n      </xsl:for-each>\\n    </mml:mfenced>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:r\\\">\\n    <xsl:variable name=\\\"fNor\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"count(child::m:rPr[last()]/m:nor) = 0\\\">0</xsl:when>\\n        <xsl:otherwise>\\n          <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n            <xsl:with-param name=\\\"str\\\" select=\\\"translate(child::m:rPr[last()]/m:nor/@m:val, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                                       'abcdefghijklmnopqrstuvwxyz')\\\" />\\n          </xsl:call-template>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:variable>\\n\\n    <xsl:choose>\\n      <xsl:when test=\\\"$fNor=1\\\">\\n        <mml:mtext>\\n          <xsl:variable name=\\\"sOutput\\\" select=\\\"translate(.//m:t, ' ', '&#xa0;')\\\" />\\n          <xsl:value-of select=\\\"$sOutput\\\" />\\n        </mml:mtext>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <xsl:for-each select=\\\".//m:t\\\">\\n          <xsl:call-template name=\\\"ParseMt\\\">\\n            <xsl:with-param name=\\\"sToParse\\\" select=\\\"text()\\\" />\\n            <xsl:with-param name=\\\"scr\\\" select=\\\"../m:rPr[last()]/m:scr/@m:val\\\" />\\n            <xsl:with-param name=\\\"sty\\\" select=\\\"../m:rPr[last()]/m:sty/@m:val\\\" />\\n            <xsl:with-param name=\\\"nor\\\">0</xsl:with-param>\\n          </xsl:call-template>\\n        </xsl:for-each>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n\\n  <xsl:template name=\\\"CreateTokenAttributes\\\">\\n    <xsl:param name=\\\"scr\\\" />\\n    <xsl:param name=\\\"sty\\\" />\\n    <xsl:param name=\\\"nor\\\" />\\n    <xsl:param name=\\\"nCharToPrint\\\" />\\n    <xsl:param name=\\\"sTokenType\\\" />\\n\\n    <xsl:choose>\\n      <xsl:when test=\\\"$nor=1\\\">\\n        <xsl:attribute name=\\\"mathvariant\\\">normal</xsl:attribute>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <xsl:variable name=\\\"mathvariant\\\">\\n          <xsl:choose>\\n            <!-- numbers don't care -->\\n            <xsl:when test=\\\"$sTokenType='mn'\\\" />\\n\\n            <xsl:when test=\\\"$scr='monospace'\\\">monospace</xsl:when>\\n            <xsl:when test=\\\"$scr='sans-serif' and $sty='i'\\\">sans-serif-italic</xsl:when>\\n            <xsl:when test=\\\"$scr='sans-serif' and $sty='b'\\\">bold-sans-serif</xsl:when>\\n            <xsl:when test=\\\"$scr='sans-serif' and $sty='bi'\\\">sans-serif-bold-italic</xsl:when>\\n            <xsl:when test=\\\"$scr='sans-serif'\\\">sans-serif</xsl:when>\\n            <xsl:when test=\\\"$scr='fraktur' and ($sty='b' or $sty='bi')\\\">bold-fraktur</xsl:when>\\n            <xsl:when test=\\\"$scr='fraktur'\\\">fraktur</xsl:when>\\n            <xsl:when test=\\\"$scr='double-struck'\\\">double-struck</xsl:when>\\n            <xsl:when test=\\\"$scr='script' and ($sty='b' or $sty='bi')\\\">bold-script</xsl:when>\\n            <xsl:when test=\\\"$scr='script'\\\">script</xsl:when>\\n            <xsl:when test=\\\"($scr='roman' or not($scr) or $scr='') and $sty='b'\\\">bold</xsl:when>\\n            <xsl:when test=\\\"($scr='roman' or not($scr) or $scr='') and $sty='i'\\\">italic</xsl:when>\\n            <xsl:when test=\\\"($scr='roman' or not($scr) or $scr='') and $sty='p'\\\">normal</xsl:when>\\n            <xsl:when test=\\\"($scr='roman' or not($scr) or $scr='') and $sty='bi'\\\">bold-italic</xsl:when>\\n            <xsl:otherwise />\\n          </xsl:choose>\\n        </xsl:variable>\\n        <xsl:variable name=\\\"fontweight\\\">\\n          <xsl:choose>\\n            <xsl:when test=\\\"$sty='b' or $sty='bi'\\\">bold</xsl:when>\\n            <xsl:otherwise>normal</xsl:otherwise>\\n          </xsl:choose>\\n        </xsl:variable>\\n        <xsl:variable name=\\\"fontstyle\\\">\\n          <xsl:choose>\\n            <xsl:when test=\\\"$sty='p' or $sty='b'\\\">normal</xsl:when>\\n            <xsl:otherwise>italic</xsl:otherwise>\\n          </xsl:choose>\\n        </xsl:variable>\\n\\n        <!-- Writing of attributes begins here -->\\n        <xsl:choose>\\n          <!-- Don't write mathvariant for operators unless they want to be normal -->\\n          <xsl:when test=\\\"$sTokenType='mo' and $mathvariant!='normal'\\\" />\\n\\n          <!-- A single character within an mi is already italics, don't write -->\\n          <xsl:when test=\\\"$sTokenType='mi' and $nCharToPrint=1 and ($mathvariant='' or $mathvariant='italic')\\\" />\\n\\n          <xsl:when test=\\\"$sTokenType='mi' and $nCharToPrint &gt; 1 and ($mathvariant='' or $mathvariant='italic')\\\">\\n            <xsl:attribute name=\\\"mathvariant\\\">\\n              <xsl:value-of select=\\\"'italic'\\\" />\\n            </xsl:attribute>\\n          </xsl:when>\\n          <xsl:when test=\\\"$mathvariant!='italic' and $mathvariant!=''\\\">\\n            <xsl:attribute name=\\\"mathvariant\\\">\\n              <xsl:value-of select=\\\"$mathvariant\\\" />\\n            </xsl:attribute>\\n          </xsl:when>\\n          <xsl:otherwise>\\n            <xsl:if test=\\\"not($sTokenType='mi' and $nCharToPrint=1) and $fontstyle='italic'\\\">\\n              <xsl:attribute name=\\\"fontstyle\\\">italic</xsl:attribute>\\n            </xsl:if>\\n            <xsl:if test=\\\"$fontweight='bold'\\\">\\n              <xsl:attribute name=\\\"fontweight\\\">bold</xsl:attribute>\\n            </xsl:if>\\n          </xsl:otherwise>\\n        </xsl:choose>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <xsl:template match=\\\"m:eqArr\\\">\\n    <mml:mtable>\\n      <xsl:for-each select=\\\"m:e\\\">\\n        <mml:mtr>\\n          <mml:mtd>\\n            <xsl:choose>\\n              <xsl:when test=\\\"m:argPr[last()]/m:scrLvl/@m:val!='0' or\\n\\t\\t\\t\\t\\t            not(m:argPr[last()]/m:scrLvl/@m:val)  or\\n\\t\\t\\t\\t\\t            m:argPr[last()]/m:scrLvl/@m:val=''\\\">\\n                <mml:mrow>\\n                  <mml:maligngroup />\\n                  <xsl:call-template name=\\\"CreateEqArrRow\\\">\\n                    <xsl:with-param name=\\\"align\\\" select=\\\"1\\\" />\\n                    <xsl:with-param name=\\\"ndCur\\\" select=\\\"*[1]\\\" />\\n                  </xsl:call-template>\\n                </mml:mrow>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <mml:mstyle>\\n                  <xsl:attribute name=\\\"scriptlevel\\\">\\n                    <xsl:value-of select=\\\"m:argPr[last()]/m:scrLvl/@m:val\\\" />\\n                  </xsl:attribute>\\n                  <mml:maligngroup />\\n                  <xsl:call-template name=\\\"CreateEqArrRow\\\">\\n                    <xsl:with-param name=\\\"align\\\" select=\\\"1\\\" />\\n                    <xsl:with-param name=\\\"ndCur\\\" select=\\\"*[1]\\\" />\\n                  </xsl:call-template>\\n                </mml:mstyle>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </mml:mtd>\\n        </mml:mtr>\\n      </xsl:for-each>\\n    </mml:mtable>\\n  </xsl:template>\\n\\n  <xsl:template name=\\\"CreateEqArrRow\\\">\\n    <xsl:param name=\\\"align\\\" />\\n    <xsl:param name=\\\"ndCur\\\" />\\n    <xsl:variable name=\\\"sAllMt\\\">\\n      <xsl:for-each select=\\\"$ndCur/m:t\\\">\\n        <xsl:value-of select=\\\".\\\" />\\n      </xsl:for-each>\\n    </xsl:variable>\\n    <xsl:choose>\\n      <xsl:when test=\\\"$ndCur/self::m:r\\\">\\n        <xsl:call-template name=\\\"ParseEqArrMr\\\">\\n          <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sAllMt\\\" />\\n          <xsl:with-param name=\\\"scr\\\" select=\\\"../m:rPr[last()]/m:scr/@m:val\\\" />\\n          <xsl:with-param name=\\\"sty\\\" select=\\\"../m:rPr[last()]/m:sty/@m:val\\\" />\\n          <xsl:with-param name=\\\"nor\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"count($ndCur/m:rPr[last()]/m:nor) = 0\\\">0</xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"ForceFalseStrVal\\\">\\n                  <xsl:with-param name=\\\"str\\\" select=\\\"translate($ndCur/m:rPr[last()]/m:nor/@m:val,\\n                                                                     'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\\n\\t\\t                                                                 'abcdefghijklmnopqrstuvwxyz')\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:with-param>\\n          <xsl:with-param name=\\\"align\\\" select=\\\"$align\\\" />\\n        </xsl:call-template>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <xsl:apply-templates select=\\\"$ndCur\\\" />\\n      </xsl:otherwise>\\n    </xsl:choose>\\n    <xsl:if test=\\\"count($ndCur/following-sibling::*) &gt; 0\\\">\\n      <xsl:variable name=\\\"cAmp\\\">\\n        <xsl:call-template name=\\\"CountAmp\\\">\\n          <xsl:with-param name=\\\"sAllMt\\\" select=\\\"$sAllMt\\\" />\\n          <xsl:with-param name=\\\"cAmp\\\" select=\\\"0\\\" />\\n        </xsl:call-template>\\n      </xsl:variable>\\n      <xsl:call-template name=\\\"CreateEqArrRow\\\">\\n        <xsl:with-param name=\\\"align\\\" select=\\\"($align+($cAmp mod 2)) mod 2\\\" />\\n        <xsl:with-param name=\\\"ndCur\\\" select=\\\"$ndCur/following-sibling::*[1]\\\" />\\n      </xsl:call-template>\\n    </xsl:if>\\n  </xsl:template>\\n\\n  <xsl:template name=\\\"CountAmp\\\">\\n    <xsl:param name=\\\"sAllMt\\\" />\\n    <xsl:param name=\\\"cAmp\\\" />\\n    <xsl:choose>\\n      <xsl:when test=\\\"string-length(substring-after($sAllMt, '&amp;')) &gt; 0 or\\n\\t\\t\\t                substring($sAllMt, string-length($sAllMt))='&#x0026;'\\\">\\n        <xsl:call-template name=\\\"CountAmp\\\">\\n          <xsl:with-param name=\\\"sAllMt\\\" select=\\\"substring-after($sAllMt, '&#x0026;')\\\" />\\n          <xsl:with-param name=\\\"cAmp\\\" select=\\\"$cAmp+1\\\" />\\n        </xsl:call-template>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <xsl:value-of select=\\\"$cAmp\\\" />\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- %%Template: ParseEqArrMr\\n\\n\\t\\t\\tSimilar to ParseMt, but this one has to do more for an equation array.\\n      In equation arrays &amp; is a special character which denotes alignment.\\n\\n      The &amp; in an equation works by alternating between meaning insert alignment spacing\\n      and insert alignment mark.  For each equation in the equation array\\n      there is an implied align space at the beginning of the equation.  Within each equation,\\n      the first &amp; means alignmark, the second, align space, the third, alignmark, etc.\\n\\n      For this reason when parsing m:r's in equation arrays it is important to keep track of what\\n      the next ampersand will mean.\\n\\n      $align=0 => Omml's align space, which is similar to MathML's maligngroup.\\n      $align=1 => Omml's alignment mark, which is similar to MathML's malignmark.\\n\\t-->\\n  <xsl:template name=\\\"ParseEqArrMr\\\">\\n    <xsl:param name=\\\"sToParse\\\" />\\n    <xsl:param name=\\\"sty\\\" />\\n    <xsl:param name=\\\"scr\\\" />\\n    <xsl:param name=\\\"nor\\\" />\\n    <xsl:param name=\\\"align\\\" />\\n\\n    <xsl:if test=\\\"string-length($sToParse) &gt; 0\\\">\\n      <xsl:choose>\\n        <xsl:when test=\\\"substring($sToParse,1,1) = '&amp;'\\\">\\n          <xsl:choose>\\n            <xsl:when test=\\\"$align='0'\\\">\\n              <mml:maligngroup />\\n            </xsl:when>\\n            <xsl:when test=\\\"$align='1'\\\">\\n              <mml:malignmark />\\n            </xsl:when>\\n          </xsl:choose>\\n          <xsl:call-template name=\\\"ParseEqArrMr\\\">\\n            <xsl:with-param name=\\\"sToParse\\\" select=\\\"substring($sToParse,2)\\\" />\\n            <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n            <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n            <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n            <xsl:with-param name=\\\"align\\\">\\n              <xsl:choose>\\n                <xsl:when test=\\\"$align='1'\\\">0</xsl:when>\\n                <xsl:otherwise>1</xsl:otherwise>\\n              </xsl:choose>\\n            </xsl:with-param>\\n          </xsl:call-template>\\n        </xsl:when>\\n        <xsl:otherwise>\\n          <xsl:variable name=\\\"sRepNumWith0\\\">\\n            <xsl:call-template name=\\\"SReplaceNumWithZero\\\">\\n              <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sToParse\\\" />\\n            </xsl:call-template>\\n          </xsl:variable>\\n          <xsl:variable name=\\\"sRepOperWith-\\\">\\n            <xsl:call-template name=\\\"SReplaceOperWithMinus\\\">\\n              <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sRepNumWith0\\\" />\\n            </xsl:call-template>\\n          </xsl:variable>\\n\\n          <xsl:variable name=\\\"iFirstOper\\\" select=\\\"string-length($sRepOperWith-) - string-length(substring-after($sRepOperWith-, '-'))\\\" />\\n          <xsl:variable name=\\\"iFirstNum\\\" select=\\\"string-length($sRepOperWith-) - string-length(substring-after($sRepOperWith-, '0'))\\\" />\\n          <xsl:variable name=\\\"iFirstAmp\\\" select=\\\"string-length($sRepOperWith-) - string-length(substring-after($sRepOperWith-, '&#x0026;'))\\\" />\\n          <xsl:variable name=\\\"fNumAtPos1\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"substring($sRepOperWith-,1,1)='0'\\\">1</xsl:when>\\n              <xsl:otherwise>0</xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:variable>\\n          <xsl:variable name=\\\"fOperAtPos1\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"substring($sRepOperWith-,1,1)='-'\\\">1</xsl:when>\\n              <xsl:otherwise>0</xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:variable>\\n          <xsl:choose>\\n\\n            <!-- Case I: The string begins with neither a number, nor an operator -->\\n            <xsl:when test=\\\"$fNumAtPos1='0' and $fOperAtPos1='0'\\\">\\n              <xsl:choose>\\n                <xsl:when test=\\\"$nor = 0\\\">\\n                  <mml:mi>\\n                    <xsl:call-template name=\\\"CreateTokenAttributes\\\">\\n                      <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n                      <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n                      <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n                      <xsl:with-param name=\\\"nCharToPrint\\\" select=\\\"1\\\" />\\n                      <xsl:with-param name=\\\"sTokenType\\\" select=\\\"'mi'\\\" />\\n                    </xsl:call-template>\\n                    <xsl:variable name=\\\"sOutput\\\" select=\\\"translate(substring($sToParse, 1, 1), ' ', '&#xa0;')\\\" />\\n                    <xsl:value-of select=\\\"$sOutput\\\" />\\n                  </mml:mi>\\n                </xsl:when>\\n                <xsl:otherwise>\\n                  <mml:mtext>\\n                    <xsl:variable name=\\\"sOutput\\\" select=\\\"translate(substring($sToParse, 1, 1), ' ', '&#xa0;')\\\" />\\n                    <xsl:value-of select=\\\"$sOutput\\\" />\\n                  </mml:mtext>\\n                </xsl:otherwise>\\n              </xsl:choose>\\n              <xsl:call-template name=\\\"ParseEqArrMr\\\">\\n                <xsl:with-param name=\\\"sToParse\\\" select=\\\"substring($sToParse, 2)\\\" />\\n                <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n                <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n                <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n                <xsl:with-param name=\\\"align\\\" select=\\\"$align\\\" />\\n              </xsl:call-template>\\n            </xsl:when>\\n\\n            <!-- Case II: There is an operator at position 1 -->\\n            <xsl:when test=\\\"$fOperAtPos1='1'\\\">\\n              <xsl:choose>\\n                <xsl:when test=\\\"$nor = 0\\\">\\n                  <mml:mo>\\n                    <xsl:call-template name=\\\"CreateTokenAttributes\\\">\\n                      <xsl:with-param name=\\\"scr\\\" />\\n                      <xsl:with-param name=\\\"sty\\\" />\\n                      <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n                      <xsl:with-param name=\\\"sTokenType\\\" select=\\\"'mo'\\\" />\\n                    </xsl:call-template>\\n                    <xsl:value-of select=\\\"substring($sToParse,1,1)\\\" />\\n                  </mml:mo>\\n                </xsl:when>\\n                <xsl:otherwise>\\n                  <mml:mtext>\\n                    <xsl:value-of select=\\\"substring($sToParse,1,1)\\\" />\\n                  </mml:mtext>\\n                </xsl:otherwise>\\n              </xsl:choose>\\n              <xsl:call-template name=\\\"ParseEqArrMr\\\">\\n                <xsl:with-param name=\\\"sToParse\\\" select=\\\"substring($sToParse, 2)\\\" />\\n                <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n                <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n                <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n                <xsl:with-param name=\\\"align\\\" select=\\\"$align\\\" />\\n              </xsl:call-template>\\n            </xsl:when>\\n\\n            <!-- Case III: There is a number at position 1 -->\\n            <xsl:otherwise>\\n              <xsl:variable name=\\\"sConsecNum\\\">\\n                <xsl:call-template name=\\\"SNumStart\\\">\\n                  <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sToParse\\\" />\\n                  <xsl:with-param name=\\\"sPattern\\\" select=\\\"$sRepNumWith0\\\" />\\n                </xsl:call-template>\\n              </xsl:variable>\\n              <xsl:choose>\\n                <xsl:when test=\\\"$nor = 0\\\">\\n                  <mml:mn>\\n                    <xsl:call-template name=\\\"CreateTokenAttributes\\\">\\n                      <xsl:with-param name=\\\"scr\\\" />\\n                      <xsl:with-param name=\\\"sty\\\" select=\\\"'p'\\\"/>\\n                      <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n                      <xsl:with-param name=\\\"sTokenType\\\" select=\\\"'mn'\\\" />\\n                    </xsl:call-template>\\n                    <xsl:value-of select=\\\"$sConsecNum\\\" />\\n                  </mml:mn>\\n                </xsl:when>\\n                <xsl:otherwise>\\n                  <mml:mtext>\\n                    <xsl:value-of select=\\\"$sConsecNum\\\" />\\n                  </mml:mtext>\\n                </xsl:otherwise>\\n              </xsl:choose>\\n              <xsl:call-template name=\\\"ParseEqArrMr\\\">\\n                <xsl:with-param name=\\\"sToParse\\\" select=\\\"substring-after($sToParse, $sConsecNum)\\\" />\\n                <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n                <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n                <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n                <xsl:with-param name=\\\"align\\\" select=\\\"$align\\\" />\\n              </xsl:call-template>\\n            </xsl:otherwise>\\n          </xsl:choose>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:if>\\n  </xsl:template>\\n\\n  <!-- %%Template: ParseMt\\n\\n\\t\\t\\tProduce a run of text. Technically, OMML makes no distinction\\n\\t\\t\\tbetween numbers, operators, and other characters in a run. For\\n\\t\\t\\tMathML we need to break these into mi, mn, or mo elements.\\n\\n\\t\\t\\tSee also ParseEqArrMr\\n\\t-->\\n  <xsl:template name=\\\"ParseMt\\\">\\n    <xsl:param name=\\\"sToParse\\\" />\\n    <xsl:param name=\\\"sty\\\" />\\n    <xsl:param name=\\\"scr\\\" />\\n    <xsl:param name=\\\"nor\\\" />\\n    <xsl:if test=\\\"string-length($sToParse) &gt; 0\\\">\\n      <xsl:variable name=\\\"sRepNumWith0\\\">\\n        <xsl:call-template name=\\\"SReplaceNumWithZero\\\">\\n          <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sToParse\\\" />\\n        </xsl:call-template>\\n      </xsl:variable>\\n      <xsl:variable name=\\\"sRepOperWith-\\\">\\n        <xsl:call-template name=\\\"SReplaceOperWithMinus\\\">\\n          <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sRepNumWith0\\\" />\\n        </xsl:call-template>\\n      </xsl:variable>\\n\\n      <xsl:variable name=\\\"iFirstOper\\\" select=\\\"string-length($sRepOperWith-) - string-length(substring-after($sRepOperWith-, '-'))\\\" />\\n      <xsl:variable name=\\\"iFirstNum\\\" select=\\\"string-length($sRepOperWith-) - string-length(substring-after($sRepOperWith-, '0'))\\\" />\\n      <xsl:variable name=\\\"fNumAtPos1\\\">\\n        <xsl:choose>\\n          <xsl:when test=\\\"substring($sRepOperWith-,1,1)='0'\\\">1</xsl:when>\\n          <xsl:otherwise>0</xsl:otherwise>\\n        </xsl:choose>\\n      </xsl:variable>\\n      <xsl:variable name=\\\"fOperAtPos1\\\">\\n        <xsl:choose>\\n          <xsl:when test=\\\"substring($sRepOperWith-,1,1)='-'\\\">1</xsl:when>\\n          <xsl:otherwise>0</xsl:otherwise>\\n        </xsl:choose>\\n      </xsl:variable>\\n\\n      <xsl:choose>\\n\\n        <!-- Case I: The string begins with neither a number, nor an operator -->\\n        <xsl:when test=\\\"$fOperAtPos1='0' and $fNumAtPos1='0'\\\">\\n          <xsl:variable name=\\\"nCharToPrint\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"ancestor::m:fName\\\">\\n                <xsl:choose>\\n                  <xsl:when test=\\\"($iFirstOper=$iFirstNum) and\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t($iFirstOper=string-length($sToParse)) and\\n\\t\\t\\t\\t\\t\\t\\t                (substring($sRepOperWith-, string-length($sRepOperWith-))!='0') and\\n\\t\\t\\t\\t\\t\\t\\t                (substring($sRepOperWith-, string-length($sRepOperWith-))!='-')\\\">\\n                    <xsl:value-of select=\\\"string-length($sToParse)\\\" />\\n                  </xsl:when>\\n                  <xsl:when test=\\\"$iFirstOper &lt; $iFirstNum\\\">\\n                    <xsl:value-of select=\\\"$iFirstOper - 1\\\" />\\n                  </xsl:when>\\n                  <xsl:otherwise>\\n                    <xsl:value-of select=\\\"$iFirstNum - 1\\\" />\\n                  </xsl:otherwise>\\n                </xsl:choose>\\n              </xsl:when>\\n              <xsl:otherwise>1</xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:variable>\\n\\n          <mml:mi>\\n            <xsl:call-template name=\\\"CreateTokenAttributes\\\">\\n              <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n              <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n              <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n              <xsl:with-param name=\\\"nCharToPrint\\\" select=\\\"$nCharToPrint\\\" />\\n              <xsl:with-param name=\\\"sTokenType\\\" select=\\\"'mi'\\\" />\\n            </xsl:call-template>\\n            <xsl:variable name=\\\"sWrite\\\" select=\\\"translate(substring($sToParse, 1, $nCharToPrint), ' ', '&#xa0;')\\\" />\\n            <xsl:value-of select=\\\"$sWrite\\\" />\\n          </mml:mi>\\n          <xsl:call-template name=\\\"ParseMt\\\">\\n            <xsl:with-param name=\\\"sToParse\\\" select=\\\"substring($sToParse, $nCharToPrint+1)\\\" />\\n            <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n            <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n            <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n          </xsl:call-template>\\n        </xsl:when>\\n\\n        <!-- Case II: There is an operator at position 1 -->\\n        <xsl:when test=\\\"$fOperAtPos1='1'\\\">\\n          <mml:mo>\\n            <xsl:call-template name=\\\"CreateTokenAttributes\\\">\\n              <xsl:with-param name=\\\"scr\\\" />\\n              <xsl:with-param name=\\\"sty\\\" />\\n              <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n              <xsl:with-param name=\\\"sTokenType\\\" select=\\\"'mo'\\\" />\\n            </xsl:call-template>\\n            <xsl:value-of select=\\\"substring($sToParse,1,1)\\\" />\\n          </mml:mo>\\n          <xsl:call-template name=\\\"ParseMt\\\">\\n            <xsl:with-param name=\\\"sToParse\\\" select=\\\"substring($sToParse, 2)\\\" />\\n            <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n            <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n            <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n          </xsl:call-template>\\n        </xsl:when>\\n\\n        <!-- Case III: There is a number at position 1 -->\\n        <xsl:otherwise>\\n          <xsl:variable name=\\\"sConsecNum\\\">\\n            <xsl:call-template name=\\\"SNumStart\\\">\\n              <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sToParse\\\" />\\n              <xsl:with-param name=\\\"sPattern\\\" select=\\\"$sRepNumWith0\\\" />\\n            </xsl:call-template>\\n          </xsl:variable>\\n          <mml:mn>\\n            <xsl:call-template name=\\\"CreateTokenAttributes\\\">\\n              <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n              <xsl:with-param name=\\\"sty\\\" select=\\\"'p'\\\" />\\n              <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n              <xsl:with-param name=\\\"sTokenType\\\" select=\\\"'mn'\\\" />\\n            </xsl:call-template>\\n            <xsl:value-of select=\\\"$sConsecNum\\\" />\\n          </mml:mn>\\n          <xsl:call-template name=\\\"ParseMt\\\">\\n            <xsl:with-param name=\\\"sToParse\\\" select=\\\"substring-after($sToParse, $sConsecNum)\\\" />\\n            <xsl:with-param name=\\\"scr\\\" select=\\\"$scr\\\" />\\n            <xsl:with-param name=\\\"sty\\\" select=\\\"$sty\\\" />\\n            <xsl:with-param name=\\\"nor\\\" select=\\\"$nor\\\" />\\n          </xsl:call-template>\\n        </xsl:otherwise>\\n      </xsl:choose>\\n    </xsl:if>\\n  </xsl:template>\\n\\n  <!-- %%Template: SNumStart\\n\\n\\t\\tReturn the longest substring of sToParse starting from the\\n\\t\\tstart of sToParse that is a number. In addition, it takes the\\n\\t\\tpattern string, which is sToParse with all of its numbers\\n\\t\\treplaced with a 0. sPattern should be the same length\\n\\t\\tas sToParse\\n\\t-->\\n  <xsl:template name=\\\"SNumStart\\\">\\n    <xsl:param name=\\\"sToParse\\\" select=\\\"''\\\" />\\n    <!-- if we don't get anything, take the string itself -->\\n    <xsl:param name=\\\"sPattern\\\" select=\\\"'$sToParse'\\\" />\\n\\n\\n    <xsl:choose>\\n      <!-- the pattern says this is a number, recurse with the rest -->\\n      <xsl:when test=\\\"substring($sPattern, 1, 1) = '0'\\\">\\n        <xsl:call-template name=\\\"SNumStart\\\">\\n          <xsl:with-param name=\\\"sToParse\\\" select=\\\"$sToParse\\\" />\\n          <xsl:with-param name=\\\"sPattern\\\" select=\\\"substring($sPattern, 2)\\\" />\\n        </xsl:call-template>\\n      </xsl:when>\\n\\n      <!-- the pattern says we've run out of numbers. Take as many\\n\\t\\t\\t\\tcharacters from sToParse as we shaved off sPattern -->\\n      <xsl:otherwise>\\n        <xsl:value-of select=\\\"substring($sToParse, 1, string-length($sToParse) - string-length($sPattern))\\\" />\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- %%Template SRepeatCharAcc\\n\\n\\t\\t\\tThe core of SRepeatChar with an accumulator. The current\\n\\t\\t\\tstring is in param $acc, and we will double and recurse,\\n\\t\\t\\tif we're less than half of the required length or else just\\n\\t\\t\\tadd the right amount of characters to the accumulator and\\n\\t\\t\\treturn\\n\\t-->\\n  <xsl:template name=\\\"SRepeatCharAcc\\\">\\n    <xsl:param name=\\\"cchRequired\\\" select=\\\"1\\\" />\\n    <xsl:param name=\\\"ch\\\" select=\\\"'-'\\\" />\\n    <xsl:param name=\\\"acc\\\" select=\\\"$ch\\\" />\\n\\n    <xsl:variable name=\\\"cchAcc\\\" select=\\\"string-length($acc)\\\" />\\n    <xsl:choose>\\n      <xsl:when test=\\\"(2 * $cchAcc) &lt; $cchRequired\\\">\\n        <xsl:call-template name=\\\"SRepeatCharAcc\\\">\\n          <xsl:with-param name=\\\"cchRequired\\\" select=\\\"$cchRequired\\\" />\\n          <xsl:with-param name=\\\"ch\\\" select=\\\"$ch\\\" />\\n          <xsl:with-param name=\\\"acc\\\" select=\\\"concat($acc, $acc)\\\" />\\n        </xsl:call-template>\\n      </xsl:when>\\n\\n      <xsl:otherwise>\\n        <xsl:value-of select=\\\"concat($acc, substring($acc, 1, $cchRequired - $cchAcc))\\\" />\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n\\n  <!-- %%Template SRepeatChar\\n\\n\\t\\t\\tGenerates a string nchRequired long by repeating the given character ch\\n\\t-->\\n  <xsl:template name=\\\"SRepeatChar\\\">\\n    <xsl:param name=\\\"cchRequired\\\" select=\\\"1\\\" />\\n    <xsl:param name=\\\"ch\\\" select=\\\"'-'\\\" />\\n\\n    <xsl:call-template name=\\\"SRepeatCharAcc\\\">\\n      <xsl:with-param name=\\\"cchRequired\\\" select=\\\"$cchRequired\\\" />\\n      <xsl:with-param name=\\\"ch\\\" select=\\\"$ch\\\" />\\n      <xsl:with-param name=\\\"acc\\\" select=\\\"$ch\\\" />\\n    </xsl:call-template>\\n  </xsl:template>\\n\\n  <!-- %%Template SReplaceOperWithMinus\\n\\n\\t\\tGo through the given string and replace every instance\\n\\t\\tof an operator with a minus '-'. This helps quickly identify\\n\\t\\tthe first instance of an operator.\\n\\t-->\\n  <xsl:template name=\\\"SReplaceOperWithMinus\\\">\\n    <xsl:param name=\\\"sToParse\\\" select=\\\"''\\\" />\\n\\n    <xsl:value-of select=\\\"translate($sToParse, $sOperators, $sMinuses)\\\" />\\n  </xsl:template>\\n\\n  <!-- %%Template SReplaceNumWithZero\\n\\n\\t\\tGo through the given string and replace every instance\\n\\t\\tof an number with a zero '0'. This helps quickly identify\\n\\t\\tthe first occurence of a number.\\n\\n\\t\\tConsiders the '.' and ',' part of a number iff they are sandwiched\\n\\t\\tbetween two other numbers. 0.3 will be recognized as a number,\\n\\t\\tx.3 will not be. Since these characters can also be an operator, this\\n\\t\\tshould be called before SReplaceOperWithMinus.\\n\\t-->\\n  <xsl:template name=\\\"SReplaceNumWithZero\\\">\\n    <xsl:param name=\\\"sToParse\\\" select=\\\"''\\\" />\\n\\n    <!-- First do a simple replace. Numbers will all be come 0's.\\n\\t\\t\\tAfter this point, the pattern involving the . or , that\\n\\t\\t\\twe are looking for will become 0.0 or 0,0 -->\\n    <xsl:variable name=\\\"sSimpleReplace\\\" select=\\\"translate($sToParse, $sNumbers, $sZeros)\\\" />\\n\\n    <!-- And then, replace 0.0 with just 000. This means that the . will\\n\\t\\t\\tbecome part of the number -->\\n    <xsl:variable name=\\\"sReplacePeriod\\\">\\n      <xsl:call-template name=\\\"SReplace\\\">\\n        <xsl:with-param name=\\\"sInput\\\" select=\\\"$sSimpleReplace\\\" />\\n        <xsl:with-param name=\\\"sOrig\\\" select=\\\"'0.0'\\\" />\\n        <xsl:with-param name=\\\"sReplacement\\\" select=\\\"'000'\\\" />\\n      </xsl:call-template>\\n    </xsl:variable>\\n\\n    <!-- And then, replace 0,0 with just 000. This means that the , will\\n\\t\\t\\tbecome part of the number -->\\n    <xsl:call-template name=\\\"SReplace\\\">\\n      <xsl:with-param name=\\\"sInput\\\" select=\\\"$sReplacePeriod\\\" />\\n      <xsl:with-param name=\\\"sOrig\\\" select=\\\"'0,0'\\\" />\\n      <xsl:with-param name=\\\"sReplacement\\\" select=\\\"'000'\\\" />\\n    </xsl:call-template>\\n  </xsl:template>\\n\\n  <!-- Template to translate Word's borderBox properties into the menclose notation attribute\\n       The initial call to this SHOULD NOT pass an sAttribute.  Subsequent calls to\\n       CreateMencloseNotationAttrFromBorderBoxAttr by CreateMencloseNotationAttrFromBorderBoxAttr will\\n       update the sAttribute as appropriate.\\n\\n       CreateMencloseNotationAttrFromBorderBoxAttr looks at each attribute (fHideTop, fHideBot, etc.) one at a time\\n       in the order they are listed and passes a modified sAttribute to CreateMencloseNotationAttrFromBorderBoxAttr.\\n       Each successive call to CreateMencloseNotationAttrFromBorderBoxAttr knows which attribute to look at because\\n       the previous call should have omitted passing the attribute it just analyzed.  This is why as you read lower\\n       and lower in the template that each call to CreateMencloseNotationAttrFromBorderBoxAttr has fewer and fewer attributes.\\n       -->\\n  <xsl:template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n    <xsl:param name=\\\"fHideTop\\\" />\\n    <xsl:param name=\\\"fHideBot\\\" />\\n    <xsl:param name=\\\"fHideLeft\\\" />\\n    <xsl:param name=\\\"fHideRight\\\" />\\n    <xsl:param name=\\\"fStrikeH\\\" />\\n    <xsl:param name=\\\"fStrikeV\\\" />\\n    <xsl:param name=\\\"fStrikeBLTR\\\" />\\n    <xsl:param name=\\\"fStrikeTLBR\\\" />\\n    <xsl:param name=\\\"sAttribute\\\" />\\n\\n    <xsl:choose>\\n      <xsl:when test=\\\"string-length($sAttribute) = 0\\\">\\n        <xsl:choose>\\n          <xsl:when test=\\\"string-length($fHideTop) &gt; 0\\n                      and string-length($fHideBot) &gt; 0\\n                      and string-length($fHideLeft) &gt; 0\\n                      and string-length($fHideRight) &gt; 0\\\">\\n\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fHideTop = 0\\n                              and $fHideBot = 0\\n                              and $fHideLeft = 0\\n                              and $fHideRight = 0\\\">\\n                <!-- We can use 'box' instead of top, bot, left, and right.  Therefore,\\n                  replace sAttribute with 'box' and begin analyzing params fStrikeH\\n                  and below. -->\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\">\\n                    <xsl:text>box</xsl:text>\\n                  </xsl:with-param>\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <!-- Can't use 'box', theremore, must analyze all attributes -->\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fHideTop\\\" select=\\\"$fHideTop\\\" />\\n                  <xsl:with-param name=\\\"fHideBot\\\" select=\\\"$fHideBot\\\" />\\n                  <xsl:with-param name=\\\"fHideLeft\\\" select=\\\"$fHideLeft\\\" />\\n                  <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\">\\n                    <!-- Assume using all four (left right top bottom).  Subsequent calls\\n                         will remove the sides which aren't to be includes. -->\\n                    <xsl:text>left right top bottom</xsl:text>\\n                  </xsl:with-param>\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n        </xsl:choose>\\n      </xsl:when>\\n      <xsl:otherwise>\\n        <xsl:choose>\\n          <xsl:when test=\\\"string-length($fHideTop) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fHideTop=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fHideBot\\\" select=\\\"$fHideBot\\\" />\\n                  <xsl:with-param name=\\\"fHideLeft\\\" select=\\\"$fHideLeft\\\" />\\n                  <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\">\\n                    <xsl:call-template name=\\\"SReplace\\\">\\n                      <xsl:with-param name=\\\"sInput\\\" select=\\\"$sAttribute\\\" />\\n                      <xsl:with-param name=\\\"sOrig\\\" select=\\\"'top'\\\" />\\n                      <xsl:with-param name=\\\"sReplacement\\\" select=\\\"''\\\" />\\n                    </xsl:call-template>\\n                  </xsl:with-param>\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fHideBot\\\" select=\\\"$fHideBot\\\" />\\n                  <xsl:with-param name=\\\"fHideLeft\\\" select=\\\"$fHideLeft\\\" />\\n                  <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:when test=\\\"string-length($fHideBot) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fHideBot=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fHideLeft\\\" select=\\\"$fHideLeft\\\" />\\n                  <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\">\\n                    <xsl:call-template name=\\\"SReplace\\\">\\n                      <xsl:with-param name=\\\"sInput\\\" select=\\\"$sAttribute\\\" />\\n                      <xsl:with-param name=\\\"sOrig\\\" select=\\\"'bottom'\\\" />\\n                      <xsl:with-param name=\\\"sReplacement\\\" select=\\\"''\\\" />\\n                    </xsl:call-template>\\n                  </xsl:with-param>\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fHideLeft\\\" select=\\\"$fHideLeft\\\" />\\n                  <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:when test=\\\"string-length($fHideLeft) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fHideLeft=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\">\\n                    <xsl:call-template name=\\\"SReplace\\\">\\n                      <xsl:with-param name=\\\"sInput\\\" select=\\\"$sAttribute\\\" />\\n                      <xsl:with-param name=\\\"sOrig\\\" select=\\\"'left'\\\" />\\n                      <xsl:with-param name=\\\"sReplacement\\\" select=\\\"''\\\" />\\n                    </xsl:call-template>\\n                  </xsl:with-param>\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fHideRight\\\" select=\\\"$fHideRight\\\" />\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:when test=\\\"string-length($fHideRight) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fHideRight=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\">\\n                    <xsl:call-template name=\\\"SReplace\\\">\\n                      <xsl:with-param name=\\\"sInput\\\" select=\\\"$sAttribute\\\" />\\n                      <xsl:with-param name=\\\"sOrig\\\" select=\\\"'right'\\\" />\\n                      <xsl:with-param name=\\\"sReplacement\\\" select=\\\"''\\\" />\\n                    </xsl:call-template>\\n                  </xsl:with-param>\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeH\\\" select=\\\"$fStrikeH\\\" />\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:when test=\\\"string-length($fStrikeH) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fStrikeH=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"concat($sAttribute, ' horizontalstrike')\\\" />\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeV\\\" select=\\\"$fStrikeV\\\" />\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:when test=\\\"string-length($fStrikeV) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fStrikeV=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"concat($sAttribute, ' verticalstrike')\\\" />\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeBLTR\\\" select=\\\"$fStrikeBLTR\\\" />\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:when test=\\\"string-length($fStrikeBLTR) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fStrikeBLTR=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"concat($sAttribute, ' updiagonalstrike')\\\" />\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"fStrikeTLBR\\\" select=\\\"$fStrikeTLBR\\\" />\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:when test=\\\"string-length($fStrikeTLBR) &gt; 0\\\">\\n            <xsl:choose>\\n              <xsl:when test=\\\"$fStrikeTLBR=1\\\">\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"concat($sAttribute, ' downdiagonalstrike')\\\" />\\n                </xsl:call-template>\\n              </xsl:when>\\n              <xsl:otherwise>\\n                <xsl:call-template name=\\\"CreateMencloseNotationAttrFromBorderBoxAttr\\\">\\n                  <xsl:with-param name=\\\"sAttribute\\\" select=\\\"$sAttribute\\\" />\\n                </xsl:call-template>\\n              </xsl:otherwise>\\n            </xsl:choose>\\n          </xsl:when>\\n          <xsl:otherwise>\\n            <xsl:attribute name=\\\"notation\\\">\\n              <xsl:value-of select=\\\"normalize-space($sAttribute)\\\" />\\n            </xsl:attribute>\\n          </xsl:otherwise>\\n        </xsl:choose>\\n      </xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- Tristate (true, false, neither) from string value -->\\n  <xsl:template name=\\\"TFromStrVal\\\">\\n    <xsl:param name=\\\"str\\\" />\\n    <xsl:choose>\\n      <xsl:when test=\\\"$str = 'on' or $str = '1' or $str = 'true'\\\">1</xsl:when>\\n      <xsl:when test=\\\"$str = 'off' or $str = '0' or $str = 'false'\\\">0</xsl:when>\\n      <xsl:otherwise>-1</xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- Return 0 iff $str is explicitly set to a false value.\\n       Return true otherwise -->\\n  <xsl:template name=\\\"ForceFalseStrVal\\\">\\n    <xsl:param name=\\\"str\\\" />\\n    <xsl:variable name=\\\"tValue\\\">\\n      <xsl:call-template name=\\\"TFromStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$str\\\"/>\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:choose>\\n      <xsl:when test=\\\"$tValue = '0'\\\">0</xsl:when>\\n      <xsl:otherwise>1</xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n\\n  <!-- Return 1 iff $str is explicitly set to a true value.\\n       Return false otherwise -->\\n  <xsl:template name=\\\"ForceTrueStrVal\\\">\\n    <xsl:param name=\\\"str\\\" />\\n    <xsl:variable name=\\\"tValue\\\">\\n      <xsl:call-template name=\\\"TFromStrVal\\\">\\n        <xsl:with-param name=\\\"str\\\" select=\\\"$str\\\"/>\\n      </xsl:call-template>\\n    </xsl:variable>\\n    <xsl:choose>\\n      <xsl:when test=\\\"$tValue = '1'\\\">1</xsl:when>\\n      <xsl:otherwise>0</xsl:otherwise>\\n    </xsl:choose>\\n  </xsl:template>\\n</xsl:stylesheet>\\n\".trim());\n\nexport { xsl };\n", "import { xsl } from './xsl.js';\n\n/**\n * 将 officel 的公式 xml 转成 mathml\n */\nfunction convertOOXML(element) {\n    var xsltProcessor = new XSLTProcessor();\n    xsltProcessor.importStylesheet(xsl);\n    var fragment = xsltProcessor.transformToFragment(element, document);\n    return fragment;\n}\n\nexport { convertOOXML };\n", "import { convertOOXML } from '../openxml/math/convertOOML.js';\n\nfunction renderOMath(word, math) {\n    return convertOOXML(math.element);\n}\n\nexport { renderOMath };\n", "import { __values } from 'tslib';\nimport { createElement, appendChild } from '../util/dom.js';\nimport { Run } from '../openxml/word/Run.js';\nimport { BookmarkStart } from '../openxml/word/Bookmark.js';\nimport { Hyperlink } from '../openxml/word/Hyperlink.js';\nimport renderRun from './renderRun.js';\nimport { renderHyperLink } from './renderHyperLink.js';\nimport { renderBookmarkStart } from './renderBookmark.js';\nimport { renderNumbering } from './renderNumbering.js';\nimport { setElementStyle } from './setElementStyle.js';\nimport { renderTab } from './renderTab.js';\nimport { OMath } from '../openxml/math/OMath.js';\nimport { renderOMath } from './renderMath.js';\n\n/**\n * 渲染段落\n * @param renderEmptySpace 如果是 true 的话，当内容为空时会自动加上 &nbsp;\n */\nfunction renderParagraph(word, paragraph, renderEmptySpace, inHeader) {\n    var e_1, _a;\n    if (renderEmptySpace === void 0) { renderEmptySpace = true; }\n    if (inHeader === void 0) { inHeader = false; }\n    word.currentParagraph = paragraph;\n    var p = createElement('p');\n    word.addClass(p, 'p');\n    var properties = paragraph.properties;\n    setElementStyle(word, p, properties);\n    // 默认情况下 drawing 是相对段落的\n    p.style.position = 'relative';\n    // 渲染列表前缀\n    if (properties.numPr) {\n        appendChild(p, renderNumbering(p, word, properties.numPr));\n    }\n    var inFldChar = false;\n    if (properties.tabs && properties.tabs.length) {\n        // 目前只支持渲染第一个，因为第二个位置取决于前面内容位置，挺麻烦\n        // 虽然目前这个实现很 hack，但可以支持常见情况\n        appendChild(p, renderTab(word, properties.tabs[0], true));\n        // 同时删掉第一个 run 中的 tab\n        // let done = false;\n        // for (const child of paragraph.children) {\n        //   if (done) {\n        //     break;\n        //   }\n        //   if (child instanceof Run) {\n        //     for (const runChild of child.children) {\n        //       if (runChild instanceof Tab) {\n        //         child.children.splice(child.children.indexOf(runChild), 1);\n        //         done = true;\n        //         break;\n        //       }\n        //     }\n        //   }\n        // }\n    }\n    try {\n        for (var _b = __values(paragraph.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            if (child instanceof Run) {\n                if (child.fldChar === 'begin') {\n                    inFldChar = true;\n                }\n                else if (child) {\n                    inFldChar = false;\n                }\n                appendChild(p, renderRun(word, child, paragraph, inFldChar, inHeader));\n            }\n            else if (child instanceof BookmarkStart) {\n                appendChild(p, renderBookmarkStart(word, child));\n            }\n            else if (child instanceof Hyperlink) {\n                var hyperlink = renderHyperLink(word, child, paragraph);\n                appendChild(p, hyperlink);\n            }\n            else if (child instanceof OMath) {\n                appendChild(p, renderOMath(word, child));\n            }\n            else {\n                console.warn('unknow pargraph type', child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    // 空行自动加个空格，不然会没高度\n    if (p.innerHTML === '' && renderEmptySpace) {\n        p.innerHTML = '&nbsp;';\n    }\n    return p;\n}\n\nexport { renderParagraph as default };\n", "import { __values } from 'tslib';\nimport { Paragraph } from '../openxml/word/Paragraph.js';\nimport renderParagraph from './renderParagraph.js';\nimport { createElement, appendChild } from '../util/dom.js';\nimport renderTable from './renderTable.js';\nimport { Table } from '../openxml/word/Table.js';\n\n/**\n * 渲染 header 内容\n */\nfunction renderHeader(word, header) {\n    var e_1, _a;\n    var headerEl = createElement('div');\n    try {\n        for (var _b = __values(header.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            if (child instanceof Paragraph) {\n                var p = renderParagraph(word, child, true, true);\n                appendChild(headerEl, p);\n            }\n            else if (child instanceof Table) {\n                var table = renderTable(word, child);\n                appendChild(headerEl, table);\n            }\n            else {\n                console.warn('unknown child', child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return headerEl;\n}\n\nexport { renderHeader };\n", "import { createElement } from '../util/dom.js';\nimport { renderHeader } from './renderHeader.js';\n\n/**\n * 渲染「节」，在 word 中每个节都可以有自己的页边距和页面大小设置，但目前其实并没有实现分页展现，等后续再考虑\n */\nfunction renderSection(word, wDocument, section, renderOptions) {\n    var sectionEl = createElement('section');\n    // 用于后续绝对定位\n    sectionEl.style.position = 'relative';\n    if (wDocument.backgroundColor) {\n        sectionEl.style.background = wDocument.backgroundColor;\n    }\n    if (renderOptions.page) {\n        if (renderOptions.pageMarginBottom) {\n            sectionEl.style.marginBottom = renderOptions.pageMarginBottom + 'px';\n        }\n        if (renderOptions.pageShadow) {\n            sectionEl.style.boxShadow = '0 0 8px rgba(0, 0, 0, 0.5)';\n        }\n        if (renderOptions.pageBackground) {\n            sectionEl.style.background = renderOptions.pageBackground;\n        }\n    }\n    var props = section.properties;\n    var pageSize = props.pageSize;\n    if (pageSize) {\n        if (!renderOptions.ignoreWidth) {\n            sectionEl.style.width = pageSize.width;\n        }\n        if (!renderOptions.ignoreHeight) {\n            sectionEl.style.height = pageSize.height;\n        }\n    }\n    // 强制控制 padding\n    if (renderOptions.padding) {\n        sectionEl.style.padding = renderOptions.padding;\n    }\n    else {\n        var pageMargin = props.pageMargin;\n        if (pageMargin) {\n            sectionEl.style.paddingLeft = pageMargin.left || '0';\n            sectionEl.style.paddingRight = pageMargin.right || '0';\n            sectionEl.style.paddingTop = pageMargin.top || '0';\n            sectionEl.style.paddingBottom = pageMargin.bottom || '0';\n        }\n    }\n    if (props.cols) {\n        if (props.cols.num && props.cols.num > 1) {\n            sectionEl.style.columnCount = '' + props.cols.num;\n            if (props.cols.space) {\n                sectionEl.style.columnGap = props.cols.space;\n            }\n        }\n    }\n    word.currentPage++;\n    var width = 'auto';\n    if (props.pageSize && props.pageSize.width) {\n        width = props.pageSize.width;\n    }\n    // 只有在分页模式下才渲染页眉\n    if (props.headers && renderOptions.page && renderOptions.renderHeader) {\n        var headers = props.headers;\n        var headerEl = null;\n        if (headers.even && word.currentPage % 2 === 0) {\n            headerEl = renderHeader(word, headers.even);\n        }\n        else if (headers.default) {\n            headerEl = renderHeader(word, headers.default);\n        }\n        else {\n            console.warn('can not find header', word.currentPage, props.headers);\n        }\n        if (headerEl) {\n            headerEl.style.position = 'absolute';\n            var pageMargin = props.pageMargin;\n            // todo: 在 word 里如果 header 内容较多会将内容区也撑开，但目前实现不了\n            if (pageMargin && pageMargin.header) {\n                headerEl.style.top = pageMargin.header;\n                headerEl.style.width = width;\n            }\n            sectionEl.appendChild(headerEl);\n        }\n    }\n    if (props.footers && renderOptions.page && renderOptions.renderFooter) {\n        var footers = props.footers;\n        var footerEl = null;\n        if (footers.even && word.currentPage % 2 === 0) {\n            footerEl = renderHeader(word, footers.even);\n        }\n        else if (footers.default) {\n            footerEl = renderHeader(word, footers.default);\n        }\n        else {\n            console.warn('can not find footer', word.currentPage, props.footers);\n        }\n        if (footerEl) {\n            footerEl.style.position = 'absolute';\n            var pageMargin = props.pageMargin;\n            if (pageMargin && pageMargin.footer) {\n                footerEl.style.bottom = pageMargin.footer;\n                footerEl.style.width = width;\n            }\n            sectionEl.appendChild(footerEl);\n        }\n    }\n    return sectionEl;\n}\n\nexport { renderSection };\n", "import { __values, __spreadArray, __read } from 'tslib';\nimport { appendChild, removeChild } from '../util/dom.js';\nimport { Paragraph } from '../openxml/word/Paragraph.js';\nimport { Table } from '../openxml/word/Table.js';\nimport renderParagraph from './renderParagraph.js';\nimport { renderSection } from './renderSection.js';\nimport renderTable from './renderTable.js';\n\n/**\n * 渲染 body 节点\n */\n/**\n * 判断是否需要创建一个新 section，包括强制分页和超出了 section 的高宽或宽度\n */\nfunction createNewSection(word, sectionEnd, child) {\n    // 支持插入分页符\n    if (word.breakPage) {\n        word.breakPage = false;\n        return true;\n    }\n    var childBound = child.getBoundingClientRect();\n    return (childBound.top + childBound.height > sectionEnd.bottom ||\n        // 注意这里没有 + childBound.width，因为 width 一般都是 100% 导致容易超出\n        childBound.left > sectionEnd.right);\n}\n/**\n * 添加到 section 里，如果超出了就创建一个新的 section\n */\nfunction appendToSection(word, wDocument, renderOptions, bodyEl, sectionEl, sectionEnd, section, child) {\n    // 如果是第一个节点，即便超长也得写入，不然就会出现一个空 section\n    var isFirst = sectionEl.children.length === 0;\n    // 首先尝试写入\n    appendChild(sectionEl, child);\n    // 如果超出了就新建一个 section\n    if (!isFirst && createNewSection(word, sectionEnd, child)) {\n        var newChild = child.cloneNode(true);\n        removeChild(sectionEl, child);\n        var newSectionEl = renderSection(word, wDocument, section, renderOptions);\n        appendChild(bodyEl, newSectionEl);\n        appendChild(newSectionEl, newChild);\n        sectionEnd = getSectionEnd(section, newSectionEl);\n        return { sectionEl: newSectionEl, sectionEnd: sectionEnd };\n    }\n    return { sectionEl: sectionEl, sectionEnd: sectionEnd };\n}\n/**\n * 获取 section 结束的位置，也就是最后能放下子元素的位置\n */\nfunction getSectionEnd(section, sectionEl) {\n    var sectionBound = sectionEl.getBoundingClientRect();\n    var pageMargin = section.properties.pageMargin;\n    var bottom = sectionBound.top + sectionBound.height;\n    if (pageMargin === null || pageMargin === void 0 ? void 0 : pageMargin.bottom) {\n        bottom = bottom - parseInt(pageMargin.bottom.replace('px', ''), 10);\n    }\n    var right = sectionBound.left + sectionBound.width;\n    if (pageMargin === null || pageMargin === void 0 ? void 0 : pageMargin.right) {\n        right = right - parseInt(pageMargin.right.replace('px', ''), 10);\n    }\n    return { bottom: bottom, right: right };\n}\n/**\n * 获取缩放比例\n */\nfunction getTransform(rootWidth, section, renderOptions) {\n    var props = section.properties;\n    var pageSize = props.pageSize;\n    if (renderOptions.zoomFitWidth && !renderOptions.ignoreWidth) {\n        var pageWidth = pageSize === null || pageSize === void 0 ? void 0 : pageSize.width;\n        if (rootWidth && pageWidth) {\n            var pageWidthNum = parseInt(pageWidth.replace('px', ''), 10);\n            if (props.pageMargin) {\n                var pageMargin = props.pageMargin;\n                pageWidthNum += pageMargin.left\n                    ? parseInt(pageMargin.left.replace('px', ''), 10)\n                    : 0;\n                pageWidthNum += pageMargin.right\n                    ? parseInt(pageMargin.right.replace('px', ''), 10)\n                    : 0;\n            }\n            var zoomWidth = rootWidth / pageWidthNum;\n            return zoomWidth;\n        }\n    }\n    return 1;\n}\n/**\n * 分页渲染\n * @param isLastSection 是否是最后一节\n */\nfunction renderSectionInPage(word, wDocument, bodyEl, renderOptions, sectionEl, section, isLastSection) {\n    // 如果不 setTimeout 取到的位置信息不对\n    setTimeout(function () {\n        var e_1, _a;\n        var sectionEnd = getSectionEnd(section, sectionEl);\n        try {\n            for (var _b = __values(section.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof Paragraph) {\n                    var p = renderParagraph(word, child);\n                    var appendResult = appendToSection(word, wDocument, renderOptions, bodyEl, sectionEl, sectionEnd, section, p);\n                    sectionEl = appendResult.sectionEl;\n                    sectionEnd = appendResult.sectionEnd;\n                }\n                else if (child instanceof Table) {\n                    var table = renderTable(word, child);\n                    var appendResult = appendToSection(word, wDocument, renderOptions, bodyEl, sectionEl, sectionEnd, section, table);\n                    sectionEl = appendResult.sectionEl;\n                    sectionEnd = appendResult.sectionEnd;\n                }\n                else {\n                    console.warn('unknown child', child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isLastSection) {\n            sectionEl.style.marginBottom = '0';\n        }\n    }, 0);\n}\n/**\n * 渲染文档主体\n */\nfunction renderBody(root, word, bodyEl, wDocument, body, renderOptions) {\n    var e_2, _a, e_3, _b;\n    var page = renderOptions.page || false;\n    var rootWidth = root.getBoundingClientRect().width -\n        (renderOptions.pageWrapPadding || 0) * 2;\n    var zooms = [];\n    var index = 0;\n    var sections = body.sections;\n    var sectionLength = sections.length;\n    // 用于最后一个 section 不加 margin-bottom\n    var isLastSection = false;\n    try {\n        for (var sections_1 = __values(sections), sections_1_1 = sections_1.next(); !sections_1_1.done; sections_1_1 = sections_1.next()) {\n            var section = sections_1_1.value;\n            zooms.push(getTransform(rootWidth, section, renderOptions));\n            word.currentSection = section;\n            var sectionEl = renderSection(word, wDocument, section, renderOptions);\n            appendChild(bodyEl, sectionEl);\n            index = index + 1;\n            if (index === sectionLength) {\n                isLastSection = true;\n            }\n            if (page) {\n                renderSectionInPage(word, wDocument, bodyEl, renderOptions, sectionEl, section, isLastSection);\n            }\n            else {\n                try {\n                    for (var _c = (e_3 = void 0, __values(section.children)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var child = _d.value;\n                        if (child instanceof Paragraph) {\n                            var p = renderParagraph(word, child);\n                            appendChild(sectionEl, p);\n                        }\n                        else if (child instanceof Table) {\n                            var table = renderTable(word, child);\n                            appendChild(sectionEl, table);\n                        }\n                        else {\n                            console.warn('unknown child', child);\n                        }\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sections_1_1 && !sections_1_1.done && (_a = sections_1.return)) _a.call(sections_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    setTimeout(function () {\n        if (renderOptions.zoom) {\n            // 固定缩放\n            bodyEl.style.transformOrigin = '0 0';\n            bodyEl.style.transform = \"scale(\".concat(renderOptions.zoom, \")\");\n        }\n        else if (renderOptions.page &&\n            renderOptions.zoomFitWidth &&\n            !renderOptions.ignoreWidth) {\n            // 自适应宽度的缩放\n            var minZoom = Math.min.apply(Math, __spreadArray([], __read(zooms), false));\n            bodyEl.style.transformOrigin = '0 0';\n            bodyEl.style.transform = \"scale(\".concat(minZoom, \")\");\n        }\n    }, 0);\n}\n\nexport { renderBody as default };\n", "import { createElement } from '../util/dom.js';\nimport renderBody from './renderBody.js';\n\n/**\n * 渲染 document 主要入口\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/document.html\n */\nfunction renderDocument(root, word, wDocument, renderOptions) {\n    var doc = createElement('article');\n    renderBody(root, word, doc, wDocument, wDocument.body, renderOptions);\n    return doc;\n}\n\nexport { renderDocument as default };\n", "/**\n * 将 blob 转成 data url\n */\n/**\n * 下载 blob\n * https://dev.to/nombrekeff/download-file-from-blob-21ho\n */\nfunction downloadBlob(blob, name) {\n    if (name === void 0) { name = 'file.txt'; }\n    // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n    var blobUrl = URL.createObjectURL(blob);\n    // Create a link element\n    var link = document.createElement('a');\n    // Set link's href to point to the Blob URL\n    link.href = blobUrl;\n    link.download = name;\n    // Append link to the body\n    document.body.appendChild(link);\n    // Dispatch click event on the link\n    // This is necessary as link.click() does not work on the latest firefox\n    link.dispatchEvent(new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        view: window\n    }));\n    // Remove link from body\n    document.body.removeChild(link);\n}\n\nexport { downloadBlob };\n", "import { __values } from 'tslib';\nimport { Run } from '../Run.js';\nimport { getValBoolean, getVal, getValNumber } from '../../../OpenXML.js';\nimport { Paragraph } from '../Paragraph.js';\n\nvar Lvl = /** @class */ (function () {\n    function Lvl() {\n        this.start = 1;\n        this.lvlText = '%1.';\n        this.isLgl = false;\n        this.lvlJc = 'start';\n        this.suff = 'space';\n    }\n    Lvl.fromXML = function (word, element) {\n        var e_1, _a;\n        var lvl = new Lvl();\n        lvl.ilvl = element.getAttribute('w:ilvl');\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:start':\n                        lvl.start = getValNumber(child);\n                        break;\n                    case 'w:numFmt':\n                        lvl.numFmt = getVal(child);\n                        break;\n                    case 'w:lvlText':\n                        lvl.lvlText = getVal(child);\n                        break;\n                    case 'w:lvlJc':\n                        lvl.lvlJc = getVal(child);\n                        break;\n                    case 'w:legacy':\n                        // 老的属性应该不需要支持了\n                        // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/legacy.html\n                        break;\n                    case 'w:pPr':\n                        lvl.pPr = Paragraph.parseParagraphPr(word, child);\n                        break;\n                    case 'w:rPr':\n                        lvl.rPr = Run.parseRunPr(word, child);\n                        break;\n                    case 'w:isLgl':\n                        lvl.isLgl = getValBoolean(child);\n                        break;\n                    case 'w:pStyle':\n                        // 这个在 paragraph 里处理了\n                        break;\n                    default:\n                        console.warn(\"Lvl: Unknown tag \", tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return lvl;\n    };\n    return Lvl;\n}());\n\nexport { Lvl };\n", "import { __values } from 'tslib';\nimport { Lvl } from './Lvl.js';\nimport { getVal } from '../../../OpenXML.js';\n\n/**\n * lvl 的解析，只支持部分\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/abstractNum.html\n */\nvar AbstractNum = /** @class */ (function () {\n    function AbstractNum() {\n        this.lvls = {};\n    }\n    AbstractNum.fromXML = function (word, element) {\n        var e_1, _a;\n        var abstractNum = new AbstractNum();\n        abstractNum.abstractNumId = element.getAttribute('w:abstractNumId') || '';\n        abstractNum.multiLevelType = element.getAttribute('w:multiLevelType');\n        var lvls = element.getElementsByTagName('w:lvl');\n        try {\n            for (var lvls_1 = __values(lvls), lvls_1_1 = lvls_1.next(); !lvls_1_1.done; lvls_1_1 = lvls_1.next()) {\n                var child = lvls_1_1.value;\n                var lvlId = child.getAttribute('w:ilvl') || '';\n                abstractNum.lvls[lvlId] = Lvl.fromXML(word, child);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (lvls_1_1 && !lvls_1_1.done && (_a = lvls_1.return)) _a.call(lvls_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var multiLevelType = element\n            .getElementsByTagName('w:multiLevelType')\n            .item(0);\n        if (multiLevelType) {\n            abstractNum.multiLevelType = getVal(multiLevelType);\n        }\n        return abstractNum;\n    };\n    return AbstractNum;\n}());\n\nexport { AbstractNum };\n", "import { __values } from 'tslib';\nimport { getVal, getValNumber } from '../../../OpenXML.js';\nimport { Lvl } from './Lvl.js';\n\nvar Num = /** @class */ (function () {\n    function Num() {\n        this.lvlOverride = { lvls: {} };\n    }\n    Num.fromXML = function (word, element) {\n        var e_1, _a;\n        var num = new Num();\n        num.numId = element.getAttribute('w:numId') || '';\n        var abstractNumId = element\n            .getElementsByTagName('w:abstractNumId')\n            .item(0);\n        if (abstractNumId) {\n            num.abstractNumId = getVal(abstractNumId);\n        }\n        var lvlOverride = element.getElementsByTagName('w:lvlOverride').item(0);\n        if (lvlOverride) {\n            try {\n                for (var _b = __values(lvlOverride.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var child = _c.value;\n                    var tagName = child.tagName;\n                    switch (tagName) {\n                        case 'w:lvl':\n                            var lvlId = child.getAttribute('w:lvlId') || '';\n                            num.lvlOverride.lvls[lvlId] = Lvl.fromXML(word, child);\n                            break;\n                        case 'w:startOverride':\n                            var id = child.getAttribute('w:lvlId') || '';\n                            if (num.lvlOverride.lvls[id]) {\n                                num.lvlOverride.lvls[id].start = getValNumber(child);\n                            }\n                            break;\n                        default:\n                            console.warn(\"Num: Unknown tag \", tagName, child);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        return num;\n    };\n    return Num;\n}());\n\nexport { Num };\n", "import { __values } from 'tslib';\nimport { AbstractNum } from './AbstractNum.js';\nimport { Num } from './Num.js';\n\nvar Numbering = /** @class */ (function () {\n    function Numbering() {\n        this.abstractNums = {};\n        this.nums = {};\n        // 某个 numId 当前值，如果要重新渲染文档，需要将这个置空，\n        // 第一个 key 是 numId，第二个 key 是 ilvl，第一个 key 会自动初始化\n        this.numData = {};\n    }\n    Numbering.fromXML = function (word, element) {\n        var e_1, _a, e_2, _b;\n        var numbering = new Numbering();\n        try {\n            for (var _c = __values(element.getElementsByTagName('w:abstractNum')), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var abstractNumElement = _d.value;\n                var abstractNum = AbstractNum.fromXML(word, abstractNumElement);\n                numbering.abstractNums[abstractNum.abstractNumId] = abstractNum;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var _e = __values(element.getElementsByTagName('w:num')), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var numElement = _f.value;\n                var num = Num.fromXML(word, numElement);\n                numbering.nums[num.numId] = num;\n                numbering.numData[num.numId] = {};\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return numbering;\n    };\n    return Numbering;\n}());\n\nexport { Numbering };\n", "import { __values } from 'tslib';\nimport { parsePr } from '../parse/parsePr.js';\n\n/**\n * 合并 p 下相同的文本，主要是为了方便替换变量\n */\n/**\n *  是否具有相同样式\n */\nfunction hasSomeStyle(word, first, second) {\n    var firstStyle = first ? parsePr(word, first) : {};\n    var secondStyle = second ? parsePr(word, second) : {};\n    return JSON.stringify(firstStyle) === JSON.stringify(secondStyle);\n}\nfunction mergeText(first, second) {\n    var firstT = first.getElementsByTagName('w:t')[0];\n    var secondT = second.getElementsByTagName('w:t')[0];\n    if (firstT && secondT) {\n        var secondText = secondT.textContent || '';\n        firstT.textContent += secondText || '';\n    }\n}\n/**\n * 只支持处理 w:r 下有 w:t 的情况\n */\nfunction canMerge(element) {\n    var e_1, _a;\n    var tagName = element.tagName;\n    var childChildren = element.children;\n    var hasText = false;\n    var textHasSpace = false;\n    try {\n        for (var childChildren_1 = __values(childChildren), childChildren_1_1 = childChildren_1.next(); !childChildren_1_1.done; childChildren_1_1 = childChildren_1.next()) {\n            var childChild = childChildren_1_1.value;\n            if (childChild.tagName === 'w:t') {\n                hasText = true;\n                textHasSpace = childChild.getAttribute('xml:space') === 'preserve';\n                if (textHasSpace) {\n                    break;\n                }\n            }\n            // 有 tab 的情况下不能合并\n            if (childChild.tagName === 'w:tab') {\n                return false;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (childChildren_1_1 && !childChildren_1_1.done && (_a = childChildren_1.return)) _a.call(childChildren_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return tagName === 'w:r' && hasText && !textHasSpace;\n}\n/**\n * 合并 p 下相同的文本\n */\nfunction mergeRunInP(word, p) {\n    var e_2, _a, e_3, _b;\n    var newElements = [];\n    var lastRun = null;\n    try {\n        for (var _c = __values(p.children), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var child = _d.value;\n            var tagName = child.tagName;\n            // 避免图片和空格被合并了\n            if (canMerge(child)) {\n                if (lastRun) {\n                    var lastRunProps = lastRun.getElementsByTagName('w:rPr')[0];\n                    var thisProps = child.getElementsByTagName('w:rPr')[0];\n                    if (hasSomeStyle(word, lastRunProps, thisProps)) {\n                        mergeText(lastRun, child);\n                    }\n                    else {\n                        lastRun = child;\n                        newElements.push(child);\n                    }\n                }\n                else {\n                    // 说明是第一次运行\n                    lastRun = child;\n                    newElements.push(child);\n                }\n            }\n            else {\n                // 忽略这个标签\n                if (tagName !== 'w:proofErr') {\n                    lastRun = null;\n                    newElements.push(child);\n                }\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    p.innerHTML = '';\n    try {\n        for (var newElements_1 = __values(newElements), newElements_1_1 = newElements_1.next(); !newElements_1_1.done; newElements_1_1 = newElements_1.next()) {\n            var newElement = newElements_1_1.value;\n            p.appendChild(newElement);\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (newElements_1_1 && !newElements_1_1.done && (_b = newElements_1.return)) _b.call(newElements_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n}\n/**\n * 合并\n * @param document\n */\nfunction mergeRun(word, doc) {\n    var e_4, _a;\n    var ps = doc.getElementsByTagName('w:p');\n    try {\n        for (var ps_1 = __values(ps), ps_1_1 = ps_1.next(); !ps_1_1.done; ps_1_1 = ps_1.next()) {\n            var p = ps_1_1.value;\n            mergeRunInP(word, p);\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (ps_1_1 && !ps_1_1.done && (_a = ps_1.return)) _a.call(ps_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n}\n\nexport { canMerge, mergeRun, mergeRunInP };\n", "import { __values } from 'tslib';\nimport { mergeSdt } from '../../parse/mergeSdt.js';\nimport { parseTable } from '../../parse/parseTable.js';\nimport { Paragraph } from './Paragraph.js';\n\n/**\n * header 的定义，footer 也是用这个，因为结构是一样的\n */\nvar Header = /** @class */ (function () {\n    function Header() {\n        this.children = [];\n    }\n    Header.fromXML = function (word, doc) {\n        var e_1, _a;\n        var footer = new Header();\n        var children = [];\n        footer.children = children;\n        var elm = doc;\n        var firstChild = doc.firstElementChild;\n        if (firstChild &&\n            (firstChild.tagName === 'w:hdr' || firstChild.tagName === 'w:ftr')) {\n            elm = firstChild;\n        }\n        try {\n            for (var _b = __values(mergeSdt(elm)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:p':\n                        var paragraph = Paragraph.fromXML(word, child);\n                        children.push(paragraph);\n                        break;\n                    case 'w:tbl':\n                        var table = parseTable(word, child);\n                        children.push(table);\n                        break;\n                    default:\n                        console.warn('Header.fromXML Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return footer;\n    };\n    return Header;\n}());\n\nexport { Header };\n", "import { __values } from 'tslib';\nimport { parseSize } from '../../parse/parseSize.js';\nimport { getAttrNumber } from '../../OpenXML.js';\nimport { Header } from './Header.js';\n\n/**\n * section 属性\n * word 文档是按 section 组织的\n * 参考了 docx 里的类型定义\n */\nfunction parseHeader(word, element, type) {\n    var headerType = element.getAttribute('w:type');\n    var headerId = element.getAttribute('r:id');\n    if (headerType && headerId) {\n        var headerRel = word.getDocumentRels(headerId);\n        if (headerRel) {\n            var headerDoc = word.getXML('/word/' + headerRel.target);\n            if (headerDoc) {\n                var header = Header.fromXML(word, headerDoc);\n                return {\n                    headerType: headerType,\n                    header: header\n                };\n            }\n        }\n    }\n    return null;\n}\nvar Section = /** @class */ (function () {\n    function Section() {\n        this.properties = {};\n        this.children = [];\n    }\n    Section.prototype.addChild = function (child) {\n        this.children.push(child);\n    };\n    Section.parsePr = function (word, element, body) {\n        var e_1, _a;\n        var properties = {};\n        properties.headers = {};\n        properties.footers = {};\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:pgSz':\n                        properties.pageSize = {\n                            width: parseSize(child, 'w:w'),\n                            height: parseSize(child, 'w:h')\n                        };\n                        break;\n                    case 'w:pgMar':\n                        properties.pageMargin = {\n                            left: parseSize(child, 'w:left'),\n                            right: parseSize(child, 'w:right'),\n                            top: parseSize(child, 'w:top'),\n                            bottom: parseSize(child, 'w:bottom'),\n                            header: parseSize(child, 'w:header'),\n                            footer: parseSize(child, 'w:footer'),\n                            gutter: parseSize(child, 'w:gutter')\n                        };\n                        break;\n                    case 'w:headerReference':\n                        var header = parseHeader(word, child, 'header');\n                        if (header) {\n                            properties.headers[header.headerType] = header.header;\n                        }\n                        break;\n                    case 'w:footerReference':\n                        var footer = parseHeader(word, child, 'footer');\n                        if (footer) {\n                            properties.footers[footer.headerType] = footer.header;\n                        }\n                        break;\n                    case 'w:cols':\n                        var cols = {};\n                        var num = getAttrNumber(child, 'w:num', 1);\n                        cols.num = num;\n                        var space = parseSize(child, 'w:space');\n                        if (space) {\n                            cols.space = space;\n                        }\n                        properties.cols = cols;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return properties;\n    };\n    return Section;\n}());\n\nexport { Section };\n", "import { __values } from 'tslib';\nimport { mergeSdt } from '../../parse/mergeSdt.js';\nimport { parseTable } from '../../parse/parseTable.js';\nimport { Paragraph } from './Paragraph.js';\nimport { Section } from './Section.js';\n\n/**\n * body 类型定义\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/body.html\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n        this.sections = [];\n        // 默认构建第一个 section\n        this.currentSection = new Section();\n        this.sections.push(this.currentSection);\n    }\n    Body.prototype.addChild = function (child) {\n        this.currentSection.addChild(child);\n    };\n    /**\n     * 添加 secetion\n     * @param properties 前一个 section 的属性\n     */\n    Body.prototype.addSection = function (properties) {\n        this.currentSection.properties = properties;\n        this.currentSection = new Section();\n        this.sections.push(this.currentSection);\n    };\n    Body.fromXML = function (word, element) {\n        var e_1, _a;\n        var body = new Body();\n        try {\n            for (var _b = __values(mergeSdt(element)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:p':\n                        var paragraph = Paragraph.fromXML(word, child);\n                        body.addChild(paragraph);\n                        break;\n                    case 'w:tbl':\n                        var table = parseTable(word, child);\n                        body.addChild(table);\n                        break;\n                    case 'w:bookmarkStart':\n                    case 'w:bookmarkEnd':\n                        break;\n                    case 'w:sectPr':\n                        body.addSection(Section.parsePr(word, child, body));\n                        break;\n                    default:\n                        console.warn('Body.fromXML Unknown key', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        // 过滤掉没内容的 section，一般是最后一个\n        body.sections = body.sections.filter(function (section) { return section.children.length > 0; });\n        return body;\n    };\n    return Body;\n}());\n\nexport { Body };\n", "import { __values } from 'tslib';\nimport { Color } from '../../util/color.js';\nimport { parseColorAttr } from '../../parse/parseColor.js';\nimport { Body } from './Body.js';\n\n/**\n * Document 解析及类型定义\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/document.html\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/Main%20Document%20Story.html\n */\n/**\n * 计算出最终实际背景色\n */\nfunction getBackgroundColor(documentBackground) {\n    if (documentBackground.color) {\n        return documentBackground.color;\n    }\n    if (documentBackground.themeColor) {\n        var themeColor = documentBackground.themeColor;\n        if (documentBackground.themeTint) {\n            var color = new Color(themeColor);\n            var themeShade = parseInt(documentBackground.themeTint, 16);\n            color.tint(themeShade / 256);\n        }\n        else if (documentBackground.themeShade) {\n            var color = new Color(themeColor);\n            var themeShade = parseInt(documentBackground.themeShade, 16);\n            color.lumMod(themeShade / 256);\n        }\n    }\n    return '#FFFFF';\n}\nvar WDocument = /** @class */ (function () {\n    function WDocument() {\n    }\n    WDocument.fromXML = function (word, element) {\n        var e_1, _a, e_2, _b;\n        var doc = new WDocument();\n        var body = element.getElementsByTagName('w:body').item(0);\n        if (body) {\n            doc.body = Body.fromXML(word, body);\n        }\n        var background = element.getElementsByTagName('w:background').item(0);\n        if (background) {\n            var documentBackground = {};\n            try {\n                for (var _c = __values(background.attributes), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var attr = _d.value;\n                    var name_1 = attr.name;\n                    switch (name_1) {\n                        case 'w:color':\n                            documentBackground.color = parseColorAttr(word, background, 'w:color');\n                            break;\n                        case 'w:themeColor':\n                            documentBackground.themeColor = parseColorAttr(word, background, 'w:themeColor');\n                            break;\n                        case 'w:themeShade':\n                            documentBackground.themeShade = parseColorAttr(word, background, 'w:themeShade');\n                            break;\n                        case 'w:themeTint':\n                            documentBackground.themeTint = parseColorAttr(word, background, 'w:themeTint');\n                            break;\n                        default:\n                            console.log('unknown background', background);\n                            break;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            try {\n                for (var _e = __values(background.children), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var child = _f.value;\n                    var name_2 = child.tagName;\n                    switch (name_2) {\n                        case 'v:background':\n                            // vml 的背景色，不支持\n                            break;\n                        default:\n                            console.log('unknown background', background);\n                            break;\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            doc.backgroundColor = getBackgroundColor(documentBackground);\n        }\n        return doc;\n    };\n    return WDocument;\n}());\n\nexport { WDocument };\n", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "import { unzipSync, strFromU8, strToU8, zipSync } from 'fflate';\n\n/**\n * zip 文件解析\n */\nvar ZipPackageParser = /** @class */ (function () {\n    function ZipPackageParser() {\n    }\n    /**\n     * 加载 zip 文件\n     */\n    ZipPackageParser.prototype.load = function (docxFile) {\n        this.zip = unzipSync(new Uint8Array(docxFile));\n    };\n    /**\n     * 读取 xml 文件，转成 json 对象\n     * @param filePath 文件路径\n     * @returns 转成 json 的结果\n     */\n    ZipPackageParser.prototype.getXML = function (filePath) {\n        var fileContent = this.getFileByType(filePath, 'string');\n        var doc = new DOMParser().parseFromString(fileContent, 'application/xml');\n        var errorNode = doc.getElementsByTagName('parsererror').item(0);\n        if (errorNode) {\n            throw new Error(errorNode.textContent || \"can't parse xml\");\n        }\n        else {\n            return doc;\n        }\n    };\n    /**\n     * 根据类型读取文件\n     */\n    ZipPackageParser.prototype.getFileByType = function (filePath, type) {\n        filePath = filePath.startsWith('/') ? filePath.slice(1) : filePath;\n        var file = this.zip[filePath];\n        if (file) {\n            if (type === 'string') {\n                return strFromU8(file);\n            }\n            else if (type === 'blob') {\n                return new Blob([file]);\n            }\n            else if (type === 'uint8array') {\n                return file;\n            }\n        }\n        console.warn('getFileByType', filePath, 'not found');\n        return null;\n    };\n    /**\n     * xml 下没这功能\n     */\n    ZipPackageParser.prototype.saveFile = function (filePath, content) {\n        if (typeof content === 'string') {\n            content = strToU8(content);\n        }\n        this.zip[filePath] = content;\n    };\n    /**\n     * 判断文件是否存在\n     */\n    ZipPackageParser.prototype.fileExists = function (filePath) {\n        filePath = filePath.startsWith('/') ? filePath.slice(1) : filePath;\n        return filePath in this.zip;\n    };\n    /**\n     * 生成新的 zip 文件\n     */\n    ZipPackageParser.prototype.generateZip = function (docContent) {\n        // 其实最好是生成个新的，后续再优化\n        this.zip['word/document.xml'] = strToU8(docContent);\n        return new Blob([zipSync(this.zip)]);\n    };\n    return ZipPackageParser;\n}());\n\nexport { ZipPackageParser as default };\n", "import { __values } from 'tslib';\nimport { createElement } from '../util/dom.js';\n\n/**\n * 渲染自定义字体样式\n */\nfunction renderFont(fontTable) {\n    var e_1, _a;\n    if (!fontTable) {\n        return null;\n    }\n    var fonts = fontTable.fonts;\n    if (!fonts || !fonts.length) {\n        return null;\n    }\n    var style = createElement('style');\n    var fontContent = '/** embedded fonts **/';\n    try {\n        for (var _b = __values(fontTable.fonts), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var font = _c.value;\n            var fontName = font.name.replace(/['\\\\]/g, ''); // 简单防止 xss\n            var fontPath = font.url;\n            if (fontName && fontPath) {\n                fontContent += \"\\n      @font-face {\\n        font-family: '\".concat(fontName, \"';\\n        src: url('\").concat(fontPath, \"');\\n      }\\n      \");\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    style.innerHTML = fontContent;\n    return style;\n}\n\nexport { renderFont };\n", "import { __assign } from 'tslib';\n\n/**\n * 拷贝自 amis 里的方法，避免依赖\n */\nfunction createObject(superProps, props, properties) {\n    if (superProps && Object.isFrozen(superProps)) {\n        superProps = cloneObject(superProps);\n    }\n    var obj = superProps\n        ? Object.create(superProps, __assign(__assign({}, properties), { __super: {\n                value: superProps,\n                writable: false,\n                enumerable: false\n            } }))\n        : Object.create(Object.prototype, properties);\n    props &&\n        isObject(props) &&\n        Object.keys(props).forEach(function (key) { return (obj[key] = props[key]); });\n    return obj;\n}\nfunction cloneObject(target, persistOwnProps) {\n    if (persistOwnProps === void 0) { persistOwnProps = true; }\n    var obj = target && target.__super\n        ? Object.create(target.__super, {\n            __super: {\n                value: target.__super,\n                writable: false,\n                enumerable: false\n            }\n        })\n        : Object.create(Object.prototype);\n    persistOwnProps &&\n        target &&\n        Object.keys(target).forEach(function (key) { return (obj[key] = target[key]); });\n    return obj;\n}\nfunction isObject(obj) {\n    var typename = typeof obj;\n    return (obj &&\n        typename !== 'string' &&\n        typename !== 'number' &&\n        typename !== 'boolean' &&\n        typename !== 'function' &&\n        !Array.isArray(obj));\n}\n\nexport { cloneObject, createObject, isObject };\n", "import { __awaiter, __generator, __values } from 'tslib';\nimport { Pic } from '../openxml/drawing/Pic.js';\nimport { createObject } from './createObject.js';\n\n/**\n * 执行变量替换，和普通变量不同，这个支持数组，但因为是提前执行好的，没法再动态生效了\n * 为了避免 word 里不必要的标签要先执行 mergeRun\n */\n/**\n * 替换单个文本变量\n */\nfunction replaceT(word, t, data) {\n    var text = t.textContent || '';\n    t.textContent = replaceText(word, text, data);\n}\n/**\n * 替换变量文本\n */\nfunction replaceText(word, text, data) {\n    var evalVar = word.renderOptions.evalVar;\n    if (text.startsWith('{{')) {\n        text = text.replace(/^{{/g, '').replace(/}}$/g, '');\n        var result = evalVar(text, data);\n        if (result !== undefined && result !== null) {\n            return String(result);\n        }\n        else {\n            console.warn('var error: [', text, '] not found in data');\n            return '';\n        }\n    }\n    return text;\n}\n// 生成的新 id\nvar newRelId = 1;\n/**\n * 替换图片里的变量\n * @param replaceImage 如果为 true，则会实际替换掉 zip 里的图片，但可能影响性能所以默认不开启，只有下载的时候才开启\n */\nfunction replaceAlt(word, cNvPr, data, replaceImage) {\n    if (replaceImage === void 0) { replaceImage = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        var alt, imageURL, parentElement, blip, newId, imageResponse, imageData, pic, blip_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (cNvPr.getAttribute('downloaded')) {\n                        // 已经替换过了\n                        return [2 /*return*/];\n                    }\n                    alt = cNvPr.getAttribute('descr') || '';\n                    imageURL = replaceText(word, alt, data);\n                    cNvPr.setAttribute('descrVar', imageURL);\n                    if (!(replaceImage && imageURL)) return [3 /*break*/, 4];\n                    parentElement = cNvPr.parentElement.parentElement;\n                    blip = parentElement.getElementsByTagName('a:blip').item(0);\n                    if (!blip) return [3 /*break*/, 3];\n                    newId = \"rIdn\".concat(newRelId);\n                    blip.setAttribute('r:embed', newId);\n                    return [4 /*yield*/, fetch(imageURL)];\n                case 1:\n                    imageResponse = _a.sent();\n                    return [4 /*yield*/, imageResponse.arrayBuffer()];\n                case 2:\n                    imageData = _a.sent();\n                    word.saveNewImage(newId, new Uint8Array(imageData));\n                    cNvPr.setAttribute('downloaded', 'true');\n                    newRelId++;\n                    _a.label = 3;\n                case 3:\n                    pic = Pic.fromXML(word, parentElement);\n                    if (pic && pic.blipFill && pic.blipFill.blip) {\n                        blip_1 = pic.blipFill.blip;\n                        if (blip_1.embled) ;\n                    }\n                    _a.label = 4;\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * 替换表格行\n */\nfunction replaceTableRow(word, tr, replaceImage) {\n    if (replaceImage === void 0) { replaceImage = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        var evalVar, data, table, tcs, hasLoop, loopArray, tcs_1, tcs_1_1, tc, ts, ts_1, ts_1_1, t, text, arrayNameMatch, arrayMatchResult, arrayName, array, loopArray_1, loopArray_1_1, item, newTr, ts, rowData, ts_2, ts_2_1, t, _a, _b, cNvPr, e_1_1, e_2_1;\n        var e_3, _c, e_4, _d, e_2, _e, e_5, _f, e_1, _g;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    evalVar = word.renderOptions.evalVar;\n                    data = word.renderOptions.data;\n                    table = tr.parentNode;\n                    tcs = tr.getElementsByTagName('w:tc');\n                    hasLoop = false;\n                    loopArray = [];\n                    try {\n                        // 查找对应的循环\n                        for (tcs_1 = __values(tcs), tcs_1_1 = tcs_1.next(); !tcs_1_1.done; tcs_1_1 = tcs_1.next()) {\n                            tc = tcs_1_1.value;\n                            ts = tc.getElementsByTagName('w:t');\n                            try {\n                                for (ts_1 = (e_4 = void 0, __values(ts)), ts_1_1 = ts_1.next(); !ts_1_1.done; ts_1_1 = ts_1.next()) {\n                                    t = ts_1_1.value;\n                                    text = t.textContent || '';\n                                    if (text.startsWith('{{#')) {\n                                        arrayNameMatch = /{{#([^\\}]+)}}/;\n                                        arrayMatchResult = arrayNameMatch.exec(text);\n                                        if (arrayMatchResult && arrayMatchResult.length > 0) {\n                                            hasLoop = true;\n                                            arrayName = arrayMatchResult[1];\n                                            array = evalVar(arrayName, data);\n                                            if (Array.isArray(array)) {\n                                                loopArray = array;\n                                            }\n                                            // 去掉这个循环变量\n                                            t.textContent = t.textContent.replace(\"{{#\".concat(arrayName, \"}}\"), '');\n                                        }\n                                    }\n                                    if (text.indexOf('{{/}}') !== -1) {\n                                        // 去掉结束变量\n                                        t.textContent = t.textContent.replace('{{/}}', '');\n                                    }\n                                }\n                            }\n                            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                            finally {\n                                try {\n                                    if (ts_1_1 && !ts_1_1.done && (_d = ts_1.return)) _d.call(ts_1);\n                                }\n                                finally { if (e_4) throw e_4.error; }\n                            }\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (tcs_1_1 && !tcs_1_1.done && (_c = tcs_1.return)) _c.call(tcs_1);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                    if (!hasLoop) return [3 /*break*/, 16];\n                    _h.label = 1;\n                case 1:\n                    _h.trys.push([1, 13, 14, 15]);\n                    loopArray_1 = __values(loopArray), loopArray_1_1 = loopArray_1.next();\n                    _h.label = 2;\n                case 2:\n                    if (!!loopArray_1_1.done) return [3 /*break*/, 12];\n                    item = loopArray_1_1.value;\n                    newTr = cloneTr(tr);\n                    ts = newTr.getElementsByTagName('w:t');\n                    rowData = createObject(data, item);\n                    try {\n                        for (ts_2 = (e_5 = void 0, __values(ts)), ts_2_1 = ts_2.next(); !ts_2_1.done; ts_2_1 = ts_2.next()) {\n                            t = ts_2_1.value;\n                            replaceT(word, t, rowData);\n                        }\n                    }\n                    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                    finally {\n                        try {\n                            if (ts_2_1 && !ts_2_1.done && (_f = ts_2.return)) _f.call(ts_2);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                    }\n                    _h.label = 3;\n                case 3:\n                    _h.trys.push([3, 8, 9, 10]);\n                    _a = (e_1 = void 0, __values(newTr.getElementsByTagName('pic:cNvPr'))), _b = _a.next();\n                    _h.label = 4;\n                case 4:\n                    if (!!_b.done) return [3 /*break*/, 7];\n                    cNvPr = _b.value;\n                    return [4 /*yield*/, replaceAlt(word, cNvPr, rowData, replaceImage)];\n                case 5:\n                    _h.sent();\n                    _h.label = 6;\n                case 6:\n                    _b = _a.next();\n                    return [3 /*break*/, 4];\n                case 7: return [3 /*break*/, 10];\n                case 8:\n                    e_1_1 = _h.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 10];\n                case 9:\n                    try {\n                        if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7 /*endfinally*/];\n                case 10:\n                    table.insertBefore(newTr, tr);\n                    _h.label = 11;\n                case 11:\n                    loopArray_1_1 = loopArray_1.next();\n                    return [3 /*break*/, 2];\n                case 12: return [3 /*break*/, 15];\n                case 13:\n                    e_2_1 = _h.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3 /*break*/, 15];\n                case 14:\n                    try {\n                        if (loopArray_1_1 && !loopArray_1_1.done && (_e = loopArray_1.return)) _e.call(loopArray_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                    return [7 /*endfinally*/];\n                case 15:\n                    // 删除原来的行\n                    table.removeChild(tr);\n                    _h.label = 16;\n                case 16: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * 克隆行，并进行一些清理\n */\nfunction cloneTr(tr) {\n    var e_6, _a, e_7, _b;\n    var _c;\n    var newTr = tr.cloneNode(true);\n    // 去掉 tr 里的属性，感觉可能会有问题\n    removeAllAttr(newTr);\n    var ps = [].slice.call(newTr.getElementsByTagName('w:p'));\n    try {\n        for (var ps_1 = __values(ps), ps_1_1 = ps_1.next(); !ps_1_1.done; ps_1_1 = ps_1.next()) {\n            var p = ps_1_1.value;\n            removeAllAttr(p);\n        }\n    }\n    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n    finally {\n        try {\n            if (ps_1_1 && !ps_1_1.done && (_a = ps_1.return)) _a.call(ps_1);\n        }\n        finally { if (e_6) throw e_6.error; }\n    }\n    // cnfStyles 基本上都是错的所以删了\n    var cnfStyles = [].slice.call(newTr.getElementsByTagName('w:cnfStyle'));\n    try {\n        for (var cnfStyles_1 = __values(cnfStyles), cnfStyles_1_1 = cnfStyles_1.next(); !cnfStyles_1_1.done; cnfStyles_1_1 = cnfStyles_1.next()) {\n            var cnfStyle = cnfStyles_1_1.value;\n            (_c = cnfStyle.parentElement) === null || _c === void 0 ? void 0 : _c.removeChild(cnfStyle);\n        }\n    }\n    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n    finally {\n        try {\n            if (cnfStyles_1_1 && !cnfStyles_1_1.done && (_b = cnfStyles_1.return)) _b.call(cnfStyles_1);\n        }\n        finally { if (e_7) throw e_7.error; }\n    }\n    return newTr;\n}\n/**\n * 删掉所有属性，虽然不知道为啥有些不生效\n */\nfunction removeAllAttr(node) {\n    while (node.attributes.length > 0) {\n        node.removeAttributeNode(node.attributes[0]);\n    }\n}\n/**\n * 替换表格，目前只支持行\n */\nfunction replaceTable(word, documentData, replaceImage) {\n    if (replaceImage === void 0) { replaceImage = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        var trs, trs_1, trs_1_1, tr, e_8_1;\n        var e_8, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    trs = [].slice.call(documentData.getElementsByTagName('w:tr'));\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 6, 7, 8]);\n                    trs_1 = __values(trs), trs_1_1 = trs_1.next();\n                    _b.label = 2;\n                case 2:\n                    if (!!trs_1_1.done) return [3 /*break*/, 5];\n                    tr = trs_1_1.value;\n                    return [4 /*yield*/, replaceTableRow(word, tr, replaceImage)];\n                case 3:\n                    _b.sent();\n                    _b.label = 4;\n                case 4:\n                    trs_1_1 = trs_1.next();\n                    return [3 /*break*/, 2];\n                case 5: return [3 /*break*/, 8];\n                case 6:\n                    e_8_1 = _b.sent();\n                    e_8 = { error: e_8_1 };\n                    return [3 /*break*/, 8];\n                case 7:\n                    try {\n                        if (trs_1_1 && !trs_1_1.done && (_a = trs_1.return)) _a.call(trs_1);\n                    }\n                    finally { if (e_8) throw e_8.error; }\n                    return [7 /*endfinally*/];\n                case 8: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * 替换单个图片，必须是不在表格里的\n * @param word\n * @param documentData\n */\nfunction replaceSingleImage(word, documentData) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, _b, cNvPr, e_9_1;\n        var e_9, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _d.trys.push([0, 5, 6, 7]);\n                    _a = __values(documentData.getElementsByTagName('pic:cNvPr')), _b = _a.next();\n                    _d.label = 1;\n                case 1:\n                    if (!!_b.done) return [3 /*break*/, 4];\n                    cNvPr = _b.value;\n                    return [4 /*yield*/, replaceAlt(word, cNvPr, word.renderOptions.data, true)];\n                case 2:\n                    _d.sent();\n                    _d.label = 3;\n                case 3:\n                    _b = _a.next();\n                    return [3 /*break*/, 1];\n                case 4: return [3 /*break*/, 7];\n                case 5:\n                    e_9_1 = _d.sent();\n                    e_9 = { error: e_9_1 };\n                    return [3 /*break*/, 7];\n                case 6:\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_9) throw e_9.error; }\n                    return [7 /*endfinally*/];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * 变量替换主入口\n * @param word\n * @param documentData\n * @param replaceImage 是否替换掉图片，只有下载时才替换，避免性能问题\n */\nfunction replaceVar(word, documentData, replaceImage) {\n    if (replaceImage === void 0) { replaceImage = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, replaceTable(word, documentData, replaceImage)];\n                case 1:\n                    _a.sent();\n                    if (!replaceImage) return [3 /*break*/, 3];\n                    return [4 /*yield*/, replaceSingleImage(word, documentData)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n\nexport { replaceT, replaceVar };\n", "import { __values } from 'tslib';\nimport { parseTable } from '../../parse/parseTable.js';\nimport { Paragraph } from './Paragraph.js';\n\n/**\n * footnote 和 endnote 的结构几乎是一样的，所以统一叫 Note 了\n */\nvar Note = /** @class */ (function () {\n    function Note() {\n        this.children = [];\n    }\n    Note.prototype.addChild = function (child) {\n        this.children.push(child);\n    };\n    Note.fromXML = function (word, element) {\n        var e_1, _a;\n        var note = new Note();\n        try {\n            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tagName = child.tagName;\n                switch (tagName) {\n                    case 'w:p':\n                        var paragraph = Paragraph.fromXML(word, child);\n                        note.addChild(paragraph);\n                        break;\n                    case 'w:tbl':\n                        var table = parseTable(word, child);\n                        note.addChild(table);\n                        break;\n                    default:\n                        console.warn('Note.fromXML unknown tag', tagName, child);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return note;\n    };\n    return Note;\n}());\n\nexport { Note };\n", "import { __values } from 'tslib';\nimport { Note } from '../openxml/word/Note.js';\n\nfunction parseFootnotes(word, doc) {\n    var e_1, _a;\n    var footnotes = {};\n    var footnotesElement = [].slice.call(doc.getElementsByTagName('w:footnote'));\n    try {\n        for (var footnotesElement_1 = __values(footnotesElement), footnotesElement_1_1 = footnotesElement_1.next(); !footnotesElement_1_1.done; footnotesElement_1_1 = footnotesElement_1.next()) {\n            var footnoteElement = footnotesElement_1_1.value;\n            var footnote = Note.fromXML(word, footnoteElement);\n            footnotes[footnoteElement.getAttribute('w:id')] = footnote;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (footnotesElement_1_1 && !footnotesElement_1_1.done && (_a = footnotesElement_1.return)) _a.call(footnotesElement_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return footnotes;\n}\n\nexport { parseFootnotes };\n", "import { __values } from 'tslib';\nimport { Note } from '../openxml/word/Note.js';\n\nfunction parseEndnotes(word, doc) {\n    var e_1, _a;\n    var endnotes = {};\n    var endnotesElement = [].slice.call(doc.getElementsByTagName('w:endnote'));\n    try {\n        for (var endnotesElement_1 = __values(endnotesElement), endnotesElement_1_1 = endnotesElement_1.next(); !endnotesElement_1_1.done; endnotesElement_1_1 = endnotesElement_1.next()) {\n            var endnoteElement = endnotesElement_1_1.value;\n            var endnote = Note.fromXML(word, endnoteElement);\n            endnotes[endnoteElement.getAttribute('w:id')] = endnote;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (endnotesElement_1_1 && !endnotesElement_1_1.done && (_a = endnotesElement_1.return)) _a.call(endnotesElement_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return endnotes;\n}\n\nexport { parseEndnotes };\n", "import { __values } from 'tslib';\nimport { Paragraph } from '../openxml/word/Paragraph.js';\nimport { Table } from '../openxml/word/Table.js';\nimport { createElement, appendChild } from '../util/dom.js';\nimport renderParagraph from './renderParagraph.js';\nimport renderTable from './renderTable.js';\n\n/**\n * 渲染 footnotes 和 endnotes，这个需要最后执行\n */\nfunction renderNote(word, noteRoot, type, id, note) {\n    var e_1, _a;\n    var noteChild = note.children;\n    var noteElement = createElement('div');\n    var mark = createElement('a');\n    var fName = type + '-' + id;\n    mark.name = fName;\n    mark.id = fName;\n    noteRoot.appendChild(noteElement);\n    try {\n        for (var noteChild_1 = __values(noteChild), noteChild_1_1 = noteChild_1.next(); !noteChild_1_1.done; noteChild_1_1 = noteChild_1.next()) {\n            var child = noteChild_1_1.value;\n            if (child instanceof Paragraph) {\n                var p = renderParagraph(word, child);\n                appendChild(noteElement, p);\n            }\n            else if (child instanceof Table) {\n                appendChild(noteElement, renderTable(word, child));\n            }\n            else {\n                console.warn('unknown child', child);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (noteChild_1_1 && !noteChild_1_1.done && (_a = noteChild_1.return)) _a.call(noteChild_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/*\n * 过滤掉 0 和 -1 后是否还有其他的值，没有的话就不需要渲染\n */\nfunction hasNote(notes) {\n    if (!notes) {\n        return false;\n    }\n    for (var id in notes) {\n        if (id !== '0' && id !== '-1') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction renderNotes(word) {\n    var noteRoot = createElement('div');\n    if (hasNote(word.footNotes)) {\n        for (var fId in word.footNotes) {\n            renderNote(word, noteRoot, 'footnote', fId, word.footNotes[fId]);\n        }\n    }\n    if (hasNote(word.endNotes)) {\n        for (var fId in word.endNotes || {}) {\n            renderNote(word, noteRoot, 'endnote', fId, word.endNotes[fId]);\n        }\n    }\n    if (noteRoot.children.length) {\n        return noteRoot;\n    }\n    else {\n        return null;\n    }\n}\n\nexport { renderNotes };\n", "import { __awaiter, __generator } from 'tslib';\n\nfunction loadIframeImages(images) {\n    var _this = this;\n    var promises = images.map(function (image) { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(image.src && image.src !== window.location.href)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, loadIframeImage(image)];\n                case 1:\n                    _a.sent();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n    return Promise.all(promises);\n}\nfunction loadIframeImage(image) {\n    return new Promise(function (resolve) {\n        var pollImage = function () {\n            !image ||\n                typeof image.naturalWidth === 'undefined' ||\n                image.naturalWidth === 0 ||\n                !image.complete\n                ? setTimeout(pollImage, 500)\n                : resolve();\n        };\n        pollImage();\n    });\n}\nfunction performPrint(iframe) {\n    var _a, _b;\n    (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.print();\n    (_b = iframe.parentNode) === null || _b === void 0 ? void 0 : _b.removeChild(iframe);\n}\n/**\n * 打印 iframe，参考了 print.js 里的部分实现\n * @param iframe\n */\nfunction printIframe(iframe) {\n    var printDocument = iframe.contentDocument;\n    // If printing images, wait for them to load inside the iframe\n    var images = printDocument.getElementsByTagName('img');\n    if (images.length > 0) {\n        loadIframeImages(Array.from(images)).then(function () { return performPrint(iframe); });\n    }\n    else {\n        performPrint(iframe);\n    }\n}\n\nexport { printIframe };\n", "import { __values } from 'tslib';\nimport { getValBoolean } from '../OpenXML.js';\n\n/**\n * 解析 settings.xml，只支持一小部分\n *\n */\n/**\n * 解析颜色映射\n * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/clrSchemeMapping.html\n */\nfunction parseClrSchemeMapping(element) {\n    var e_1, _a;\n    var clrSchemeMapping = {};\n    try {\n        for (var _b = __values(element.attributes), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var attribute = _c.value;\n            var name_1 = attribute.name.replace('w:', '');\n            var value = attribute.value;\n            // 文档里也说了这个等于 lt1\n            if (value === 'light1') {\n                value = 'lt1';\n            }\n            else if (value === 'light2') {\n                value = 'lt2';\n            }\n            else if (value === 'dark1') {\n                value = 'dk1';\n            }\n            else if (value === 'dark2') {\n                value = 'dk2';\n            }\n            clrSchemeMapping[name_1] = value;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    if (!clrSchemeMapping.bg1) {\n        clrSchemeMapping.bg1 = 'lt1';\n    }\n    if (!clrSchemeMapping.bg2) {\n        clrSchemeMapping.bg2 = 'lt2';\n    }\n    if (!clrSchemeMapping.tx1) {\n        clrSchemeMapping.tx1 = 'dk1';\n    }\n    return clrSchemeMapping;\n}\nvar Settings = /** @class */ (function () {\n    function Settings() {\n        this.clrSchemeMapping = {};\n        this.autoHyphenation = false;\n    }\n    Settings.parse = function (word, doc) {\n        var e_2, _a;\n        var settings = new Settings();\n        var rootElement = doc;\n        if (doc.firstElementChild &&\n            doc.firstElementChild.tagName === 'w:settings') {\n            rootElement = doc.getElementsByTagName('w:settings').item(0);\n        }\n        try {\n            for (var _b = __values(Array.from(rootElement.children)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var tag = child.tagName;\n                switch (tag) {\n                    case 'w:clrSchemeMapping':\n                        settings.clrSchemeMapping = parseClrSchemeMapping(child);\n                        break;\n                    case 'w:autoHyphenation':\n                        settings.autoHyphenation = getValBoolean(child, false);\n                        break;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return settings;\n    };\n    return Settings;\n}());\n\nexport { Settings };\n", "/**\n * https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_get\n */\nvar get = function (obj, path, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = undefined; }\n    var travel = function (regexp) {\n        return String.prototype.split\n            .call(path, regexp)\n            .filter(Boolean)\n            .reduce(function (res, key) {\n            return res !== null && res !== undefined ? res[key] : res;\n        }, obj);\n    };\n    var result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/);\n    return result === undefined || result === obj ? defaultValue : result;\n};\n\nexport { get };\n", "import { __values, __read, __spreadArray } from 'tslib';\n\n/**\n * 自动识别文件类型，只支持少数几种，参考了 file-type 项目里的实现\n */\nfunction check(buffer, headers, options) {\n    var e_1, _a;\n    if (options === void 0) { options = {}; }\n    var offset = options.offset || 0;\n    try {\n        for (var _b = __values(headers.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), index = _d[0], header = _d[1];\n            // If a bitmask is set\n            if (options.mask) {\n                // If header doesn't equal `buf` with bits masked off\n                if (header !== (options.mask[index] & buffer[index + offset])) {\n                    return false;\n                }\n            }\n            else if (header !== buffer[index + offset]) {\n                return false;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return true;\n}\nfunction stringToBytes(string) {\n    return __spreadArray([], __read(string), false).map(function (character) { return character.charCodeAt(0); });\n}\nfunction checkString(buffer, string, options) {\n    if (options === void 0) { options = {}; }\n    return check(buffer, stringToBytes(string), options);\n}\nfunction fileTypeFromBuffer(buffer) {\n    if (check(buffer, [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a])) {\n        return { ext: 'png', mime: 'image/png' };\n    }\n    if (check(buffer, [0xff, 0xd8, 0xff])) {\n        return { ext: 'jpg', mime: 'image/jpeg' };\n    }\n    if (check(buffer, [0x47, 0x49, 0x46])) {\n        return { ext: 'gif', mime: 'image/gif' };\n    }\n    if (check(buffer, [0x42, 0x4d])) {\n        return { ext: 'bmp', mime: 'image/bmp' };\n    }\n    if (check(buffer, [0xc5, 0xd0, 0xd3, 0xc6])) {\n        return { ext: 'eps', mime: 'application/eps' };\n    }\n    if (checkString(buffer, '8BPS')) {\n        return { ext: 'psd', mime: 'image/vnd.adobe.photoshop' };\n    }\n    if (checkString(buffer, '%PDF')) {\n        return { ext: 'pdf', mime: 'application/pdf' };\n    }\n    return null;\n}\n\nexport { fileTypeFromBuffer };\n", "import { __values, __awaiter, __generator, __assign } from 'tslib';\nimport { FontTable } from './openxml/word/FontTable.js';\nimport { parseRelationships } from './parse/parseRelationship.js';\nimport { parseContentType } from './openxml/ContentType.js';\nimport { parseStyles } from './openxml/Style.js';\nimport { parseTheme } from './openxml/Theme.js';\nimport renderDocument from './render/renderDocument.js';\nimport { downloadBlob } from './util/blob.js';\nimport { Numbering } from './openxml/word/numbering/Numbering.js';\nimport { createElement, appendChild } from './util/dom.js';\nimport { renderStyle } from './render/renderStyle.js';\nimport { mergeRun } from './util/mergeRun.js';\nimport { WDocument } from './openxml/word/WDocument.js';\nimport { updateVariableText } from './render/renderRun.js';\nimport ZipPackageParser from './package/ZipPackageParser.js';\nimport { buildXML } from './util/xml.js';\nimport { deobfuscate } from './openxml/word/Font.js';\nimport { renderFont } from './render/renderFont.js';\nimport { replaceT, replaceVar } from './util/replaceVar.js';\nimport { parseFootnotes } from './parse/Footnotes.js';\nimport { parseEndnotes } from './parse/parseEndnotes.js';\nimport { renderNotes } from './render/renderNotes.js';\nimport { printIframe } from './util/print.js';\nimport { Settings } from './openxml/Settings.js';\nimport { get } from './util/get.js';\nimport { fileTypeFromBuffer } from './util/fileType.js';\n\nvar defaultRenderOptions = {\n    classPrefix: 'docx-viewer',\n    page: false,\n    pageWrap: true,\n    bulletUseFont: true,\n    ignoreHeight: true,\n    ignoreWidth: false,\n    minLineHeight: 1.0,\n    enableVar: false,\n    debug: false,\n    pageWrapPadding: 20,\n    pageMarginBottom: 20,\n    pageShadow: true,\n    pageBackground: '#FFFFFF',\n    pageWrapBackground: '#ECECEC',\n    printWaitTime: 100,\n    zoomFitWidth: false,\n    renderHeader: true,\n    renderFooter: true,\n    data: {},\n    evalVar: function (path, data) {\n        return get(data, path);\n    }\n};\nvar Word = /** @class */ (function () {\n    /**\n     * 构建 word\n     *\n     * @param docxFile docx 文件\n     * @param options 渲染配置\n     * @param packaParser 包解析器\n     */\n    function Word(docFile, renderOptions, parser) {\n        if (parser === void 0) { parser = new ZipPackageParser(); }\n        /**\n         * 解析 theme 目录里的数据\n         */\n        this.themes = [];\n        /**\n         * 样式名映射，因为自定义样式名有可能不符合 css 命名规范，因此实际使用这个名字\n         */\n        this.styleIdMap = {};\n        /**\n         * 用于自动生成样式名时的计数，保证每次都是唯一的\n         */\n        this.styleIdNum = 0;\n        this.wrapClassName = 'docx-viewer-wrapper';\n        this.footNotes = {};\n        this.endNotes = {};\n        this.inited = false;\n        /**\n         * 分页标记，如果为 true，那么在渲染的时候会强制分页\n         */\n        this.breakPage = false;\n        this.DOCUMENT_RELS = '/word/_rels/document.xml.rels';\n        parser.load(docFile);\n        this.id = Word.globalId++;\n        this.parser = parser;\n        this.renderOptions = __assign(__assign({}, defaultRenderOptions), renderOptions);\n        if (this.renderOptions.page) {\n            this.renderOptions.ignoreHeight = false;\n            this.renderOptions.ignoreWidth = false;\n        }\n    }\n    /**\n     * 初始化一些公共资源，比如\n     */\n    Word.prototype.init = function () {\n        if (this.inited) {\n            return;\n        }\n        // 这个必须在最前面，因为后面很多依赖它来查找文件的\n        this.initContentType();\n        // relation 需要排第二\n        this.initRelation();\n        this.initSettings();\n        this.initTheme();\n        this.initFontTable();\n        this.initStyle();\n        this.initNumbering();\n        this.initNotes();\n        this.inited = true;\n    };\n    /**\n     * 解析全局主题配置\n     */\n    Word.prototype.initTheme = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this.conentTypes.overrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var override = _c.value;\n                if (override.partName.startsWith('/word/theme')) {\n                    var theme = this.parser.getXML(override.partName);\n                    this.themes.push(parseTheme(theme));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * 解析全局样式\n     */\n    Word.prototype.initStyle = function () {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this.conentTypes.overrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var override = _c.value;\n                if (override.partName.startsWith('/word/styles.xml')) {\n                    this.styles = parseStyles(this, this.parser.getXML('/word/styles.xml'));\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    /**\n     * 解析全局配置\n     */\n    Word.prototype.initSettings = function () {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this.conentTypes.overrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var override = _c.value;\n                if (override.partName.startsWith('/word/settings.xml')) {\n                    this.settings = Settings.parse(this, this.parser.getXML('/word/settings.xml'));\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    /**\n     * 解析字体表\n     */\n    Word.prototype.initFontTable = function () {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this.conentTypes.overrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var override = _c.value;\n                if (override.partName.startsWith('/word/fontTable.xml')) {\n                    this.fontTable = FontTable.fromXML(this, this.parser.getXML('/word/fontTable.xml'));\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    /**\n     * 解析关系\n     */\n    Word.prototype.initRelation = function () {\n        var rels = {};\n        if (this.parser.fileExists('/_rels/.rels')) {\n            rels = parseRelationships(this.parser.getXML('/_rels/.rels'), 'root');\n        }\n        this.relationships = rels;\n        var documentRels = {};\n        if (this.parser.fileExists(this.DOCUMENT_RELS)) {\n            documentRels = parseRelationships(this.parser.getXML(this.DOCUMENT_RELS), 'word');\n        }\n        this.documentRels = documentRels;\n        var fontTableRels = {};\n        if (this.parser.fileExists('/word/_rels/fontTable.xml.rels')) {\n            fontTableRels = parseRelationships(this.parser.getXML('/word/_rels/fontTable.xml.rels'), 'word');\n        }\n        this.fontTableRels = fontTableRels;\n    };\n    /**\n     * 解析全局配置\n     */\n    Word.prototype.initContentType = function () {\n        var contentType = this.parser.getXML('[Content_Types].xml');\n        this.conentTypes = parseContentType(contentType);\n    };\n    /**\n     * 解析 numbering\n     */\n    Word.prototype.initNumbering = function () {\n        var e_5, _a;\n        try {\n            for (var _b = __values(this.conentTypes.overrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var override = _c.value;\n                if (override.partName.startsWith('/word/numbering')) {\n                    var numberingData = this.parser.getXML(override.partName);\n                    this.numbering = Numbering.fromXML(this, numberingData);\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n    };\n    Word.prototype.initNotes = function () {\n        var e_6, _a;\n        try {\n            for (var _b = __values(this.conentTypes.overrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var override = _c.value;\n                if (override.partName.startsWith('/word/footnotes.xml')) {\n                    var notesData = this.parser.getXML(override.partName);\n                    this.footNotes = parseFootnotes(this, notesData);\n                }\n                if (override.partName.startsWith('/word/endnotes.xml')) {\n                    var notesData = this.parser.getXML(override.partName);\n                    this.endNotes = parseEndnotes(this, notesData);\n                }\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    /**\n     * 获取全局关系\n     */\n    Word.prototype.getRelationship = function (id) {\n        if (id && this.relationships) {\n            return this.relationships[id];\n        }\n        return null;\n    };\n    /**\n     * 获取文档对应的关系\n     */\n    Word.prototype.getDocumentRels = function (id) {\n        if (id && this.documentRels) {\n            return this.documentRels[id];\n        }\n        return null;\n    };\n    /**\n     * 获取字体对应的关系\n     */\n    Word.prototype.getFontTableRels = function (id) {\n        if (id && this.fontTableRels) {\n            return this.fontTableRels[id];\n        }\n        return null;\n    };\n    /**\n     * 进行单个文本替换\n     */\n    Word.prototype.replaceText = function (text) {\n        var _this = this;\n        if (this.renderOptions.enableVar === false) {\n            return text;\n        }\n        var data = this.renderOptions.data;\n        if (text.indexOf('{{') !== -1) {\n            text = text.replace(/{{([^{}]+)}}/g, function (all, group) {\n                var result = _this.renderOptions.evalVar(group, data);\n                if (typeof result === 'undefined') {\n                    return '';\n                }\n                return String(result);\n            });\n        }\n        return text;\n    };\n    Word.prototype.loadWordRelXML = function (relation) {\n        var path = relation.target;\n        if (relation.part === 'word') {\n            path = 'word/' + path;\n        }\n        return this.getXML(path);\n    };\n    /**\n     * 加载图片\n     */\n    Word.prototype.loadImage = function (relation) {\n        var path = relation.target;\n        if (relation.part === 'word') {\n            path = 'word/' + path;\n        }\n        var data = this.parser.getFileByType(path, 'blob');\n        if (data) {\n            return URL.createObjectURL(data);\n        }\n        return null;\n    };\n    /**\n     * 保存新图片，这个方法主要用于图片变量，需要生成新的 relation\n     * @param newRelId 关系 id\n     * @param blob 文件数据\n     * @param ext 扩展名\n     */\n    Word.prototype.saveNewImage = function (newRelId, data) {\n        if (this.parser.fileExists(this.DOCUMENT_RELS)) {\n            var documentRels = this.parser.getXML(this.DOCUMENT_RELS);\n            // 基于一个克隆更稳妥\n            var newRelation = documentRels\n                .getElementsByTagName('Relationship')\n                .item(0)\n                .cloneNode(true);\n            newRelation.setAttributeNS(null, 'Id', newRelId);\n            newRelation.setAttributeNS(null, 'Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image');\n            var ext = '';\n            var fileType = fileTypeFromBuffer(data);\n            if (fileType) {\n                ext = '.' + fileType.ext;\n            }\n            var imagePath = 'media/image' + newRelId + ext;\n            newRelation.setAttributeNS(null, 'Target', imagePath);\n            documentRels\n                .getElementsByTagName('Relationships')[0]\n                .appendChild(newRelation);\n            // 需要使用相对路径\n            this.parser.saveFile(this.DOCUMENT_RELS.replace(/^\\//, ''), buildXML(documentRels));\n            this.parser.saveFile('word/' + imagePath, data);\n        }\n    };\n    Word.prototype.loadFont = function (rId, key) {\n        var relation = this.getFontTableRels(rId);\n        if (!relation) {\n            return null;\n        }\n        var path = relation.target;\n        if (relation.part === 'word') {\n            path = 'word/' + path;\n        }\n        var data = this.parser.getFileByType(path, 'uint8array');\n        if (data) {\n            return URL.createObjectURL(new Blob([deobfuscate(data, key)]));\n        }\n        return null;\n    };\n    /**\n     * 解析 html\n     */\n    Word.prototype.getXML = function (filePath) {\n        return this.parser.getXML(filePath);\n    };\n    /**\n     * 获取 styleId 的显示名称，因为这里可以自定义，理论上会出现 css 不支持的语法\n     */\n    Word.prototype.getStyleIdDisplayName = function (styleId) {\n        /**\n         * 简单判断一下，如果是合法的 css 名称，就直接返回\n         * In CSS, identifiers (including element names, classes, and IDs in selectors) can contain only the characters [a-zA-Z0-9] and ISO 10646 characters U+00A0 and higher, plus the hyphen (-) and the underscore (_); they cannot start with a digit, two hyphens, or a hyphen followed by a digit. Identifiers can also contain escaped characters and any ISO 10646 character as a numeric code (see next item). For instance, the identifier \"B&W?\" may be written as \"B\\&W\\?\" or \"B\\26 W\\3F\".\n         */\n        if (styleId.match(/^[a-zA-Z]+[a-zA-Z0-9\\-\\_]*$/)) {\n            return this.getClassPrefix() + '-' + styleId;\n        }\n        if (styleId in this.styleIdMap) {\n            return this.styleIdMap[styleId];\n        }\n        else {\n            this.styleIdMap[styleId] = this.genClassName();\n            return this.styleIdMap[styleId];\n        }\n    };\n    /**\n     * 生成个新的唯一的 class 名称\n     */\n    Word.prototype.genClassName = function () {\n        return 'docx-classname-' + this.styleIdNum++;\n    };\n    /**\n     * 添加新样式，主要用于表格的单元格样式\n     */\n    Word.prototype.appendStyle = function (style) {\n        if (style === void 0) { style = ''; }\n        var styleElement = createElement('style');\n        styleElement.textContent = style;\n        this.rootElement.appendChild(styleElement);\n    };\n    /**\n     * 返回样式表名及它的父级样式表名\n     * @param styleId 样式表里的 style 名称\n     * @returns 返回 className 数组\n     */\n    Word.prototype.getStyleClassName = function (stylId) {\n        var style = this.styles.styleMap[stylId];\n        if (!style) {\n            return [];\n        }\n        var classNames = [this.getStyleIdDisplayName(stylId)];\n        if (style.basedOn) {\n            classNames.unshift(this.getStyleIdDisplayName(style.basedOn));\n        }\n        return classNames;\n    };\n    /**\n     * 根据 id 获取样式\n     * @param styleId\n     */\n    Word.prototype.getStyle = function (styleId) {\n        return this.styles.styleMap[styleId];\n    };\n    /**\n     * 渲染时的 css 类前缀\n     */\n    Word.prototype.getClassPrefix = function () {\n        return \"\".concat(this.renderOptions.classPrefix, \"-\").concat(this.id);\n    };\n    /**\n     * 获取主题色\n     */\n    Word.prototype.getThemeColor = function (name) {\n        var _a, _b;\n        if (this.settings.clrSchemeMapping) {\n            name = this.settings.clrSchemeMapping[name] || name;\n        }\n        if (this.themes && this.themes.length > 0) {\n            var theme = this.themes[0];\n            var colors = (_b = (_a = theme.themeElements) === null || _a === void 0 ? void 0 : _a.clrScheme) === null || _b === void 0 ? void 0 : _b.colors;\n            var color = colors === null || colors === void 0 ? void 0 : colors[name];\n            if (color) {\n                return color;\n            }\n            else {\n                // 找不到可能是从其它地方拷贝过来的，这时取 accent1\n                console.warn('unknown theme color: ' + name);\n                return (colors === null || colors === void 0 ? void 0 : colors['accent1']) || '';\n            }\n        }\n        return '';\n    };\n    /**\n     * 添加类，自动加上前缀\n     */\n    Word.prototype.addClass = function (element, className) {\n        element.classList.add(\"\".concat(this.getClassPrefix(), \"-\").concat(className));\n    };\n    /**\n     * 更新页面中的变量，这个要在 render 后运行\n     */\n    Word.prototype.updateVariable = function () {\n        if (!this.rootElement || this.renderOptions.enableVar === false) {\n            return;\n        }\n        updateVariableText(this);\n    };\n    /**\n     * 下载生成的文档，会对 word/document.xml 进行处理，替换文本\n     */\n    Word.prototype.download = function (fileName) {\n        if (fileName === void 0) { fileName = 'document.docx'; }\n        return __awaiter(this, void 0, void 0, function () {\n            var documentData, ts, i, blob;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        documentData = this.getXML('word/document.xml');\n                        if (!this.renderOptions.enableVar) return [3 /*break*/, 2];\n                        mergeRun(this, documentData);\n                        return [4 /*yield*/, replaceVar(this, documentData, true)];\n                    case 1:\n                        _a.sent();\n                        ts = documentData.getElementsByTagName('w:t');\n                        for (i = 0; i < ts.length; i++) {\n                            replaceT(this, ts[i], this.renderOptions.data);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        blob = this.parser.generateZip(buildXML(documentData));\n                        downloadBlob(blob, fileName);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 打印功能\n     */\n    Word.prototype.print = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var iframe, printDocument;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        iframe = document.createElement('iframe');\n                        iframe.style.position = 'absolute';\n                        iframe.style.top = '-10000px';\n                        document.body.appendChild(iframe);\n                        printDocument = iframe.contentDocument;\n                        if (!printDocument) {\n                            console.warn('printDocument is null');\n                            return [2 /*return*/, null];\n                        }\n                        printDocument.write(\"<style>\\n      html, body { margin:0; padding:0 }\\n      @page { size: auto; margin: 0mm; }\\n      </style>\\n      <div id=\\\"print\\\"></div>\");\n                        return [4 /*yield*/, this.render(printDocument.getElementById('print'), __assign({ pageWrap: false, pageShadow: false, pageMarginBottom: 0, pageWrapPadding: undefined, zoom: 1 }, this.renderOptions.printOptions))];\n                    case 1:\n                        _a.sent();\n                        setTimeout(function () {\n                            iframe.focus();\n                            printIframe(iframe);\n                        }, this.renderOptions.printWaitTime || 100); // 需要等一下图片渲染\n                        window.focus();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 渲染文档入口\n     *\n     * @param root 渲染的根节点\n     * @param renderOptionsOverride 临时覆盖某些渲选项\n     */\n    Word.prototype.render = function (root, renderOptionsOverride) {\n        if (renderOptionsOverride === void 0) { renderOptionsOverride = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var renderOptions, isDebug, documentData, document, documentElement;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.init();\n                        this.currentPage = 0;\n                        renderOptions = __assign(__assign({}, this.renderOptions), renderOptionsOverride);\n                        isDebug = renderOptions.debug;\n                        isDebug && console.log('init', this);\n                        this.rootElement = root;\n                        root.innerHTML = '';\n                        documentData = this.getXML('word/document.xml');\n                        isDebug && console.log('documentData', documentData);\n                        if (!renderOptions.enableVar) return [3 /*break*/, 2];\n                        mergeRun(this, documentData);\n                        return [4 /*yield*/, replaceVar(this, documentData)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        document = WDocument.fromXML(this, documentData);\n                        isDebug && console.log('document', document);\n                        documentElement = renderDocument(root, this, document, renderOptions);\n                        root.classList.add(this.getClassPrefix());\n                        if (renderOptions.page && renderOptions.pageWrap) {\n                            root.classList.add(this.wrapClassName);\n                            root.style.padding = \"\".concat(renderOptions.pageWrapPadding || 0, \"pt\");\n                            root.style.background = renderOptions.pageWrapBackground || '#ECECEC';\n                        }\n                        appendChild(root, renderStyle(this));\n                        appendChild(root, renderFont(this.fontTable));\n                        appendChild(root, documentElement);\n                        appendChild(root, renderNotes(this));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 全局 id，用于一个页面渲染多个 word 文档\n     */\n    Word.globalId = 0;\n    return Word;\n}());\n\nexport { Word as default };\n", "import Word from './Word.js';\nexport { default as Word } from './Word.js';\n\nvar index = { Word: Word };\n\nexport { index as default };\n"],
  "mappings": "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,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA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AAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,aAAa;AAAA,IACT,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,KAAK;AAAA,IACD,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,QAAQ;AAAA,IACJ,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,SAAS;AAAA,IACL,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,eAAe;AAAA,IACX,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;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MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,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AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;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A,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAA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ACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,M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AAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;A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AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;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AA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AA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A,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAA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A,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAA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AA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AA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;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG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AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;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GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL;AAAA,QACI,SAAS;AAAA,UACL;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,cACA,GAAG;AAAA,cACH,GAAG;AAAA,YACP;AAAA,UACJ;AAAA,UACA;AAAA,YACI,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,MAAM;AAAA,IACF,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,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CA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MA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G;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAA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P;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MAC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I,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QAC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A,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAA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H,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QAC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QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,MACA;AAAA,QACI,GAAG;AAAA,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",
  "names": ["Font", "_a", "_b", "FontTable", "_a", "_a", "_a", "_a", "_b", "_a", "_b", "_a", "_b", "max", "Color", "_a", "_b", "_a", "_b", "_a", "_b", "BookmarkStart", "Break", "Blip", "BlipFill", "Transform", "_a", "_b", "_a", "_b", "Geom", "_a", "_b", "CustomGeom", "_a", "_b", "ShapePr", "Pic", "Table", "Tr", "Tc", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "index", "_a", "_b", "_a", "_b", "WPSStyle", "_a", "_b", "_a", "_b", "WPS", "Diagram", "WPG", "_a", "_b", "Position", "Drawing", "_a", "_b", "InstrText", "NoBreakHyphen", "Pict", "RubyBase", "_a", "_b", "Ruby", "Separator", "SoftHyphen", "Sym", "Tab", "Text", "Run", "_a", "_b", "Hyperlink", "Run", "_a", "_b", "NumberPr", "InlineText", "_a", "_b", "FldSimple", "OMath", "Paragraph", "_a", "_b", "_a", "_b", "ClrScheme", "_a", "_b", "_a", "_a", "_b", "_a", "_b", "getVal", "_a", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "_b", "_a", "_b", "index", "Lvl", "_a", "_b", "AbstractNum", "_a", "Num", "_a", "_b", "Numbering", "_a", "_b", "_a", "_b", "Header", "_a", "_b", "Section", "_a", "_b", "Body", "_a", "_b", "WDocument", "_a", "_b", "err", "l", "_a", "_b", "i", "td", "_a", "err", "fl", "Deflate", "AsyncDeflate", "Inflate", "AsyncInflate", "Gzip", "AsyncGzip", "Gunzip", "AsyncGunzip", "Zlib", "AsyncZlib", "Unzlib", "AsyncUnzlib", "Decompress", "AsyncDecompress", "DecodeUTF8", "_a", "ch", "EncodeUTF8", "_a", "_a", "fl", "ZipPassThrough", "ZipDeflate", "AsyncZipDeflate", "err", "Zip", "err", "_a", "_b", "_a", "UnzipPassThrough", "UnzipInflate", "AsyncUnzipInflate", "err", "Unzip", "_a", "err", "dat", "final", "_a", "ZipPackageParser", "_a", "_b", "_a", "_b", "Note", "_a", "_b", "_a", "_a", "_a", "_a", "_b", "_a", "_b", "Settings", "_a", "_b", "index", "Word", "_a", "_b", "newRelId", "document"]
}
