/**
 * amis-core v3.6.3
 * Copyright 2018-2023 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var React = require('react');
var hoistNonReactStatic = require('hoist-non-react-statics');
var status = require('./store/status.js');
var mobxStateTree = require('mobx-state-tree');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var hoistNonReactStatic__default = /*#__PURE__*/_interopDefaultLegacy(hoistNonReactStatic);

var __react_jsx__ = require('react');
var _J$X_ = (__react_jsx__["default"] || __react_jsx__).createElement;
(__react_jsx__["default"] || __react_jsx__).Fragment;
function StatusScoped(ComposedComponent) {
    var _a;
    var result = hoistNonReactStatic__default["default"]((_a = /** @class */ (function (_super) {
            tslib.__extends(class_1, _super);
            function class_1(props) {
                var _this = _super.call(this, props) || this;
                _this.childRef = _this.childRef.bind(_this);
                _this.getWrappedInstance = _this.getWrappedInstance.bind(_this);
                _this.store = status.StatusStore.create({});
                return _this;
            }
            class_1.prototype.childRef = function (ref) {
                while (ref && ref.getWrappedInstance) {
                    ref = ref.getWrappedInstance();
                }
                this.ref = ref;
            };
            class_1.prototype.getWrappedInstance = function () {
                return this.ref;
            };
            class_1.prototype.componentWillUnmount = function () {
                this.store && mobxStateTree.destroy(this.store);
                delete this.store;
            };
            class_1.prototype.render = function () {
                var _a;
                var injectedProps = {
                    statusStore: this.store
                };
                var refConfig = ((_a = ComposedComponent.prototype) === null || _a === void 0 ? void 0 : _a.isReactComponent)
                    ? { ref: this.childRef }
                    : { forwardedRef: this.childRef };
                return (_J$X_(ComposedComponent, tslib.__assign({}, this.props, injectedProps, refConfig)));
            };
            return class_1;
        }(React__default["default"].Component)),
        _a.displayName = "StatusScoped(".concat(ComposedComponent.displayName || ComposedComponent.name, ")"),
        _a.ComposedComponent = ComposedComponent,
        _a), ComposedComponent);
    return result;
}

exports.StatusScoped = StatusScoped;
