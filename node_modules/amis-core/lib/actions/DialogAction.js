/**
 * amis-core v3.6.3
 * Copyright 2018-2023 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var tpl = require('../utils/tpl.js');
var Action = require('./Action.js');

/**
 * 打开弹窗动作
 *
 * @export
 * @class DialogAction
 * @implements {Action}
 */
var DialogAction = /** @class */ (function () {
    function DialogAction() {
    }
    DialogAction.prototype.run = function (action, renderer, event) {
        var _a, _b;
        return tslib.__awaiter(this, void 0, void 0, function () {
            return tslib.__generator(this, function (_c) {
                // 防止editor preview模式下执行
                if (action.$$id !== undefined) {
                    return [2 /*return*/];
                }
                (_b = (_a = renderer.props).onAction) === null || _b === void 0 ? void 0 : _b.call(_a, event, {
                    actionType: 'dialog',
                    dialog: action.dialog,
                    reload: 'none'
                }, action.data);
                return [2 /*return*/];
            });
        });
    };
    return DialogAction;
}());
/**
 * 关闭弹窗动作
 *
 * @export
 * @class CloseDialogAction
 * @implements {Action}
 */
var CloseDialogAction = /** @class */ (function () {
    function CloseDialogAction() {
    }
    CloseDialogAction.prototype.run = function (action, renderer, event) {
        var _a, _b;
        return tslib.__awaiter(this, void 0, void 0, function () {
            return tslib.__generator(this, function (_c) {
                if (action.componentId) {
                    // 关闭指定弹窗
                    event.context.scoped.closeById(action.componentId);
                }
                else {
                    // 关闭当前弹窗
                    (_b = (_a = renderer.props).onAction) === null || _b === void 0 ? void 0 : _b.call(_a, event, tslib.__assign(tslib.__assign({}, action), { actionType: 'close' }), action.data);
                }
                return [2 /*return*/];
            });
        });
    };
    return CloseDialogAction;
}());
/**
 * alert提示动作
 */
var AlertAction = /** @class */ (function () {
    function AlertAction() {
    }
    AlertAction.prototype.run = function (action, renderer, event) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        return tslib.__awaiter(this, void 0, void 0, function () {
            return tslib.__generator(this, function (_j) {
                (_b = (_a = event.context.env).alert) === null || _b === void 0 ? void 0 : _b.call(_a, (_d = tpl.filter((_c = action.dialog) === null || _c === void 0 ? void 0 : _c.msg, event.data)) !== null && _d !== void 0 ? _d : (_e = action.args) === null || _e === void 0 ? void 0 : _e.msg, (_g = tpl.filter((_f = action.dialog) === null || _f === void 0 ? void 0 : _f.title, event.data)) !== null && _g !== void 0 ? _g : (_h = action.args) === null || _h === void 0 ? void 0 : _h.title);
                return [2 /*return*/];
            });
        });
    };
    return AlertAction;
}());
/**
 * confirm确认提示动作
 */
var ConfirmAction = /** @class */ (function () {
    function ConfirmAction() {
    }
    ConfirmAction.prototype.run = function (action, renderer, event) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;
        return tslib.__awaiter(this, void 0, void 0, function () {
            var type, confirmed_1, confirmed;
            return tslib.__generator(this, function (_x) {
                switch (_x.label) {
                    case 0:
                        type = (_b = (_a = action.dialog) === null || _a === void 0 ? void 0 : _a.type) !== null && _b !== void 0 ? _b : (_c = action.args) === null || _c === void 0 ? void 0 : _c.type;
                        if (!!type) return [3 /*break*/, 2];
                        return [4 /*yield*/, ((_e = (_d = event.context.env).confirm) === null || _e === void 0 ? void 0 : _e.call(_d, tpl.filter((_f = action.dialog) === null || _f === void 0 ? void 0 : _f.msg, event.data) || ((_g = action.args) === null || _g === void 0 ? void 0 : _g.msg), tpl.filter((_h = action.dialog) === null || _h === void 0 ? void 0 : _h.title, event.data) || ((_j = action.args) === null || _j === void 0 ? void 0 : _j.title), {
                                closeOnEsc: tpl.filter((_k = action.dialog) === null || _k === void 0 ? void 0 : _k.closeOnEsc, event.data) ||
                                    ((_l = action.args) === null || _l === void 0 ? void 0 : _l.closeOnEsc),
                                size: tpl.filter((_m = action.dialog) === null || _m === void 0 ? void 0 : _m.size, event.data) || ((_o = action.args) === null || _o === void 0 ? void 0 : _o.size),
                                confirmText: tpl.filter((_p = action.dialog) === null || _p === void 0 ? void 0 : _p.confirmText, event.data) ||
                                    ((_q = action.args) === null || _q === void 0 ? void 0 : _q.confirmText),
                                cancelText: tpl.filter((_r = action.dialog) === null || _r === void 0 ? void 0 : _r.cancelText, event.data) ||
                                    ((_s = action.args) === null || _s === void 0 ? void 0 : _s.cancelText),
                                confirmBtnLevel: tpl.filter((_t = action.dialog) === null || _t === void 0 ? void 0 : _t.confirmBtnLevel, event.data) ||
                                    ((_u = action.args) === null || _u === void 0 ? void 0 : _u.confirmBtnLevel),
                                cancelBtnLevel: tpl.filter((_v = action.dialog) === null || _v === void 0 ? void 0 : _v.cancelBtnLevel, event.data) ||
                                    ((_w = action.args) === null || _w === void 0 ? void 0 : _w.cancelBtnLevel)
                            }))];
                    case 1:
                        confirmed_1 = _x.sent();
                        return [2 /*return*/, confirmed_1];
                    case 2: return [4 /*yield*/, new Promise(function (resolve, reject) {
                            var _a, _b, _c;
                            (_b = (_a = renderer.props).onAction) === null || _b === void 0 ? void 0 : _b.call(_a, event, {
                                actionType: 'dialog',
                                dialog: (_c = action.dialog) !== null && _c !== void 0 ? _c : action.args,
                                reload: 'none',
                                callback: function (result) { return resolve(result); }
                            }, action.data);
                        })];
                    case 3:
                        confirmed = _x.sent();
                        return [2 /*return*/, confirmed];
                }
            });
        });
    };
    return ConfirmAction;
}());
Action.registerAction('dialog', new DialogAction());
Action.registerAction('closeDialog', new CloseDialogAction());
Action.registerAction('alert', new AlertAction());
Action.registerAction('confirmDialog', new ConfirmAction());

exports.AlertAction = AlertAction;
exports.CloseDialogAction = CloseDialogAction;
exports.ConfirmAction = ConfirmAction;
exports.DialogAction = DialogAction;
