/**
 * amis-core v3.6.3
 * Copyright 2018-2023 fex
 */

import { useEffect } from 'react';
import { insertCustomStyle, removeCustomStyle, insertEditCustomStyle } from '../utils/style-helper.js';

var styleIdCount = new Map();
function CustomStyle (props) {
    var config = props.config, env = props.env;
    var themeCss = config.themeCss, classNames = config.classNames, id = config.id, defaultData = config.defaultData, wrapperCustomStyle = config.wrapperCustomStyle;
    if (!themeCss && !wrapperCustomStyle) {
        return null;
    }
    useEffect(function () {
        if (styleIdCount.has(id)) {
            styleIdCount.set(id, styleIdCount.get(id) + 1);
        }
        else if (id) {
            styleIdCount.set(id, 1);
        }
        return function () {
            if (styleIdCount.has(id)) {
                styleIdCount.set(id, styleIdCount.get(id) - 1);
                if (styleIdCount.get(id) === 0) {
                    styleIdCount.delete(id);
                }
            }
        };
    }, [id]);
    useEffect(function () {
        var _a, _b;
        if (themeCss && id) {
            insertCustomStyle(themeCss, classNames, id, defaultData, env === null || env === void 0 ? void 0 : env.customStyleClassPrefix, (_b = (_a = env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument);
        }
        return function () {
            var _a, _b;
            if (id && !styleIdCount.get(id)) {
                removeCustomStyle('', id, (_b = (_a = env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument);
            }
        };
    }, [themeCss, id]);
    useEffect(function () {
        var _a, _b;
        if (wrapperCustomStyle && id) {
            insertEditCustomStyle(wrapperCustomStyle, id, (_b = (_a = env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument);
        }
        return function () {
            var _a, _b;
            if (id && !styleIdCount.get(id)) {
                removeCustomStyle('wrapperCustomStyle', id, (_b = (_a = env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument);
            }
        };
    }, [wrapperCustomStyle, id]);
    return null;
}

export { CustomStyle as default, styleIdCount };
