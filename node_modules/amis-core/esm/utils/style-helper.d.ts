import { PlainObject } from '../types';
export declare const valueMap: PlainObject;
export declare const inheritValueMap: PlainObject;
interface extra {
    important?: boolean;
    inner?: string;
    pre?: string;
    suf?: string;
}
export declare function findOrCreateStyle(id: string, doc?: Document): HTMLElement;
export declare function insertStyle(style: string, id: string, doc?: Document): void;
export declare function addStyle(style: string, id: string): void;
export declare function formatStyle(themeCss: any, classNames?: CustomStyleClassName[], id?: string, defaultData?: any): {
    value: string;
    origin: {
        className: string;
        content: string;
    }[];
};
export interface CustomStyleClassName {
    key: string;
    weights?: {
        default?: extra;
        hover?: extra;
        active?: extra;
        disabled?: extra;
    };
}
export declare function insertCustomStyle(themeCss: any, classNames: CustomStyleClassName[], id: string, defaultData?: any, customStyleClassPrefix?: string, doc?: Document): void;
/**
 * 根据路径获取默认值
 */
export declare function getValueByPath(path: string, data: any): any;
/**
 * 设置源码编辑自定义样式
 */
export declare function insertEditCustomStyle(customStyle: any, id?: string, doc?: Document): void;
export interface InsertCustomStyle {
    themeCss: any;
    classNames: CustomStyleClassName[];
    id?: string;
    defaultData?: any;
    customStyleClassPrefix?: string;
    doc?: Document;
}
/**
 * 移除自定义样式
 */
export declare function removeCustomStyle(type: string, id: string, doc?: Document): void;
export declare function formatInputThemeCss(themeCss: any): any;
export declare function setThemeClassName(name: string, id?: string, themeCss?: any, extra?: string): string;
export {};
